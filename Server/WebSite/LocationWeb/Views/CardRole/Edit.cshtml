@model DbModel.Location.Authorizations.CardRole

@{
    ViewBag.Title = "Edit";
}

<div class="modal-header">
    @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
    <h2 class="modal-title" id="myModalLabel">Edit</h2>
</div>

<div class="modal-body">
    @using (@Ajax.BeginForm(new AjaxOptions() { HttpMethod = "Post", OnSuccess = "saveSuccess(data)" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>CardRole</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
           
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>    
            
            <div class="form-group">
                @Html.LabelFor(model => model.AreaIds, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBoxFor(model => model.AreaIds, ViewBag.PtList as IEnumerable<SelectListItem>, new { @style = "display:none" })
                    <input id="AreaId" name="AreaId" type="text" readonly style="width:220px;" />
                    <a id="menuBtn" href="#" onclick="showMenu(); return false;">选择</a>
                    <div id="menuContent" class="menuContent">
                        <ul id="treeDemo" class="ztree" style="border: 1px solid #000; background: #fff; width:200px; height:180px; overflow:auto;"></ul>
                    </div>
                    @Html.ValidationMessageFor(model => model.AreaIds, "", new { @class = "text-danger" })
                </div>
            </div>           

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div>
            @Html.ActionLink("返 回", "Index")
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style type="text/css">
    #menuContent {
        display: none;
        position: absolute;
        z-index: 99;
    }

    .ztree li ul {
        width: 280px;
    }
</style>

<link href="~/Content/toastr.css" rel="stylesheet" />
<script src="~/Scripts/toastr.js"></script>
<script src="~/Scripts/editmodal.js"></script>

<link href="~/Content/metroStyle.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.4.4.min.js"></script>
<script src="~/Scripts/jquery.ztree.core.js"></script>
<script src="~/Scripts/jquery.ztree.excheck.js"></script>

<script type="text/javascript">
    var setting = {
        check: {
            enable: true,
            chkboxType: { "Y": "", "N": "" } //父子节点不关联
        },
        view:{
            dblClickExpand: false,
            showLine: false
        },
        data:{
            simpleData:{
                enable: true
            }
        },
        callback:{
            beforeClick:beforeClick,
            onCheck: onCheck
        }
    };
    var zNodes = [];
    $.ajax({
        type: "GET",
        url: "/CardRole/GetPartAreaList",
        dataType: "json",
        async: false,
        success: function (data) {
            zNodes = data;
        }
    });

    function beforeClick(treeId, treeNode) {
        var zTree = $.fn.zTree.getZTreeObj("treeDemo");
        zTree.checkNode(treeNode, !treeNode.checked, null, true);
        return false;
    }

    function onCheck(e, treeId, treeNode) {
        var zTree = $.fn.zTree.getZTreeObj("treeDemo");
        nodes = zTree.getCheckedNodes(true);
        //console.log(nodes);
        str = [];
        v = "";
        for (var i = 0, l = nodes.length; i < l; i++) {
            v += nodes[i].name+",";
            str.push("" + nodes[i].id + "");
        }
        if (v.length > 0) v = v.substring(0, v.length - 1);
        //console.log(str);
        //console.log(v);
        $("#AreaId").val(v);
        $("#AreaIds").val(str);
    }

    function showMenu() {
        $("#menuContent").slideDown("fast");
        $("body").bind("mousedown", onBodyDown);
    }

    function hideMenu() {
        $("#menuContent").fadeOut("fast");
        $("body").unbind("mousedown", onBodyDown);
    }

    function onBodyDown(event) {
        if (!(event.target.id == "menuBtn" || event.target.id == "menuContent" || $(event.target).parents("#menuContent").length > 0)) {
            hideMenu();
        }
    }

    $(document).ready(function () {
        $.fn.zTree.init($("#treeDemo"), setting, zNodes);//初始化

        var zTreeMenu = $.fn.zTree.getZTreeObj("treeDemo");
        var checkIds = $("#AreaIds").val();
        //console.log(checkIds);         
        for (var i = 0; i < checkIds.length; i++) {           
            var node = zTreeMenu.getNodeByParam("id", checkIds[i]);//根据节点数据的id属性搜索，获取条件完全匹配的节点数据              
            zTreeMenu.checkNode(node, true);//选中指定节点                
        }
        nodes = zTreeMenu.getCheckedNodes(true);//获取选中节点
        //console.log(nodes);
        v = "";
        for (var i = 0, l = nodes.length; i < l; i++) {
            v += nodes[i].name + ",";
        }
        if (v.length > 0) v = v.substring(0, v.length - 1);
        //console.log(v);
        $("#AreaId").val(v);
    });
</script>

