@using DbModel.Location.Work
@model DbModel.Location.Work.PatrolPoint

@{
    ViewBag.Title = "EditPoint";
}

<h2>EditPoint</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>巡检点</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ParentId)

        <div class="form-group">
            @Html.LabelFor(model => model.StaffCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KksCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KksCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KksCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DevName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DevName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DevName, "", new { @class = "text-danger" })
            </div>
        </div>

        
    </div>

    <div class="form-horizontal">
        <h3>巡检项</h3>
        <h4><a href="/InspectionTrack/CreateItem/@Model.Id">Creat PatrolPointItem</a></h4>
        <table class="table">
            <tr>
                <th>设备kks编码</th>
                <th>巡检内容</th>
                <th>巡检员工号</th>
                <th>巡检时间</th>
                <th>检查结果</th>
            </tr>
            @foreach (PatrolPointItem item in Model.Checks)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.KksCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckItem)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StaffCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dtCheckTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckResult)
                    </td>
                    <td>
                        @Html.ActionLink("编辑", "EditItem", new { id = item.Id }) |
                        @Html.ActionLink("打卡", "Clock", new { id = item.Id }) |
                        @Html.ActionLink("删除", "DeleteItem", new { id = item.Id, ParentId = item.ParentId })
                    </td>
                </tr>
            }
        </table>
    </div>

    <p>
        <input type="submit" value="Save" /> |
        <a href="/InspectionTrack/Edit/@Model.ParentId">返 回</a>
    </p>  
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

