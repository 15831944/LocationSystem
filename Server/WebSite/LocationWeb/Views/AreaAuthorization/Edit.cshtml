@model DbModel.Location.Work.AreaAuthorization

@{
    ViewBag.Title = "Edit";
}

<div class="modal-header">
    @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
    <h2 class="modal-title" id="myModalLabel">Edit</h2>
</div>

<div class="modal-body">
    @using (@Ajax.BeginForm(new AjaxOptions() { HttpMethod = "Post", OnSuccess = "saveSuccess(data)" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>JurisDiction</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreateTime)
            @Html.HiddenFor(model => model.ModifyTime)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>            

            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" type="datetime-local" name="StartTime" value=@Model.StartTime.ToString("yyyy-MM-ddThh:mm:ss") />
                    @*@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })*@
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" type="datetime-local" name="EndTime" value=@Model.EndTime.ToString("yyyy-MM-ddThh:mm:ss") />
                    @*@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })*@
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimeSpan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeSpan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeSpan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DelayTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DelayTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DelayTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ErrorDistance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ErrorDistance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ErrorDistance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RepeatDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@foreach (var item in ViewBag.RepeatTypeList)
                    {
                        if (Model.RepeatDay == item.RepeatDay)
                        {
                            <input type="checkbox" name="RepeatType" value="@item.Value" id="@item.Value" checked="checked" />                          
                            <label for="@item.Value">@item.Value</label>
                        }
                        else
                        {
                            <input type="checkbox" name="RepeatType" value="@item.Value" id="@item.Value" />
                            <label for="@item.Value">@item.Value</label>
                        }
                    }*@
                    @Html.DropDownListFor(model => model.RepeatDay, ViewBag.RepeatTypeList as IEnumerable<SelectListItem>)
                    @Html.ValidationMessageFor(model => model.RepeatDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AreaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AreaId, ViewBag.PtList as IEnumerable<SelectListItem>, "", 1)
                    @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.LocationCardId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.LocationCardId, ViewBag.TagList as IEnumerable<SelectListItem>, "", 1)
                    @Html.ValidationMessageFor(model => model.LocationCardId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div>
            @Html.ActionLink("返 回", "Index")
        </div>
    }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

<link href="~/Content/toastr.css" rel="stylesheet" />
<script src="~/Scripts/toastr.js"></script>

<script src="~/Scripts/editmodal.js"></script>
