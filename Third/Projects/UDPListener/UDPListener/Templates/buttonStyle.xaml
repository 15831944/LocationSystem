<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfFramework.Resource" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">


    <ControlTemplate x:Key="CloseButton1" TargetType="{x:Type Button}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
            <Rectangle x:Name="rectangle" Fill="White" Height="32" VerticalAlignment="Top" Width="32" Opacity="0"/>
            <Rectangle x:Name="rectangle1" Fill="{DynamicResource Brush18}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle2" Fill="{DynamicResource Brush18}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle2">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle2">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="minimizeButton1" TargetType="{x:Type Button}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
            <Rectangle x:Name="rectangle" Fill="Black" Height="32" VerticalAlignment="Top" Width="32" Opacity="0"/>
            <Rectangle x:Name="rectangle1" Fill="{DynamicResource Brush18}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource solidColorBrush05}" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill" TargetName="rectangle" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource solidColorBrush05}" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill" TargetName="rectangle" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="helpButton1" TargetType="{x:Type Button}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
            <Rectangle x:Name="rectangle" Fill="White" Height="32" VerticalAlignment="Top" Width="32" Opacity="0"/>
            <Rectangle x:Name="rectangle1" Fill="{DynamicResource Brush18}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Margin="8,7,8,0">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle2" Fill="{DynamicResource Brush18}" Width="16" Height="1.802" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Margin="8,11.62,8,0">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle3" Fill="{DynamicResource Brush18}" Width="10" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Margin="7.854,0,14.146,9.93">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle4" Fill="{DynamicResource Brush18}" Width="10" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Margin="13.896,0,8.104,9.93">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle3" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle4" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle2">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle3">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle4">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle3" Value="{DynamicResource Brush19}"/>
                <Setter Property="Fill" TargetName="rectangle4" Value="{DynamicResource Brush19}"/>
                <Setter Property="Effect" TargetName="rectangle1">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle2">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle3">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="rectangle4">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource solidColorBrush05}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="itemForHelpButton1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="30" Width="100">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Fill="#FF372F79"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0" Opacity="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF5147AA"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF5147AA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonForLoginStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="36" Width="200">
                        <Grid Width="Auto" Margin="0,2,0,-14">
                            <Grid.Background>
                                <ImageBrush ImageSource="/Images/Login/LoginButtonShadow.png"/>
                            </Grid.Background>
                        </Grid>
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Width="Auto" RadiusX="2" RadiusY="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-123.69" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FF4662C6" Offset="0"/>
                                    <GradientStop Color="#FF7353C5" Offset="0.992"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid x:Name="grid">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="80.556,10.38"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                <RotateTransform Angle="-123.69" CenterY="0.5" CenterX="0.5"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FF5671D1" Offset="0"/>
                                        <GradientStop Color="#FF8565D4" Offset="0.992"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="rectangle" Value="0,4,0,-4"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,4,0,-4"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="CloseButton2" TargetType="{x:Type Button}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Rectangle x:Name="rectangle" Fill="White" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Opacity="0"/>
            <Rectangle x:Name="rectangle1" Fill="{DynamicResource Brush15}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle2" Fill="{DynamicResource Brush15}" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush13}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush13}"/>
                <Setter Property="Fill" TargetName="rectangle" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush09}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush09}"/>
                <Setter Property="Fill" TargetName="rectangle" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="CloseButton3" TargetType="{x:Type Button}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Rectangle x:Name="rectangle" Fill="White" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Opacity="0"/>
            <Rectangle x:Name="rectangle1" Fill="#FF9AA8DD" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="rectangle2" Fill="#FF9AA8DD" Width="16" Height="1.8" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush16}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush16}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush14}"/>
                <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush09}"/>
                <Setter Property="Fill" TargetName="rectangle2" Value="{DynamicResource Brush09}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ToggleButtonForFullScreen1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="30" Width="30">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked"/>
                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_6_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_6_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_5_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_5_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_4_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_4_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_7_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_7_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="12"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_6_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_6_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_5_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_5_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_4_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_4_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="XMLID_7_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="XMLID_7_">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="12"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" OpacityMask="Black">
                            <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="32" Height="32">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                                <Rectangle Fill="#00AB9DFF" Height="32" Width="32"/>
                                <!--Unknown tag: sodipodi:namedview-->
                                <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="8,24.3 8,18.3 6,18.3 6,26.3 14,26.3 14,24.3" x:Name="XMLID_6_" FillRule="NonZero" Fill="#FFAB9DFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Canvas.Left="0" Canvas.Top="0"/>
                                <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="24,18.3 24,24.3 18,24.3 18,26.3 26,26.3 26,18.3" x:Name="XMLID_5_" FillRule="NonZero" Fill="#FFAB9DFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Canvas.Left="0" Canvas.Top="0"/>
                                <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="18,6.3 18,8.3 24,8.3 24,14.3 26,14.3 26,6.3" x:Name="XMLID_4_" FillRule="NonZero" Fill="#FFAB9DFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Canvas.Left="0" Canvas.Top="0"/>
                                <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="14,6.3 6,6.3 6,14.3 8,14.3 8,8.3 14,8.3" x:Name="XMLID_7_" FillRule="NonZero" Fill="#FFAB9DFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Canvas.Left="0" Canvas.Top="0"/>
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="XMLID_6_" Value="White"/>
                            <Setter Property="Fill" TargetName="XMLID_5_" Value="White"/>
                            <Setter Property="Fill" TargetName="XMLID_4_" Value="White"/>
                            <Setter Property="Fill" TargetName="XMLID_7_" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoColorNormalButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="Transparent">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="Transparent"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="18.056,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF609AFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3377FF"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="18.056,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF609AFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch">
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3D4D99"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="18.056,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4A599C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF7788D6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NewNormalButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch">
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3D4D99"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="1,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4A599C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF7788D6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HuaweiNormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="Transparent" >
                        <Rectangle x:Name="rectangle1" Fill="#33000000">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#33000000"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="18.056,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4A599C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PageButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3D4D99"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="8,0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4A599C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF7788D6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>

                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="Transparent"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="18.056,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="Transparent"/>

                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyleForChoosingFile1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="BorderBrush" Value="#00FFFFFF"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <!--VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFA5B0FF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </-->
                        <Rectangle x:Name="rectangle" Fill="#FF2D326C" RadiusY="0" RadiusX="0" Stroke="#FF434C8C"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0" IsEnabled="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFFFFFFF"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFFFFFFF"/>
                            <Setter Property="TextElement.FontSize" TargetName="contentPresenter" Value="13"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFA5B0FF"/>
                            <Setter Property="TextElement.FontSize" TargetName="contentPresenter" Value="12"/>
                        </Trigger>
                        <!--Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#661D2663"/>
                        </-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFA5B0FF"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShapeDeleteButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <Rectangle Fill="#00A7B1FF" RadiusY="0" RadiusX="0"/>
                        <Viewbox
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <Canvas
                    Width="30" x:Name="svg2985" Height="30">
                                <Canvas.Resources
                    >
                                    <PathGeometry
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="clipPath2999" Figures="M 0 24 24 24 24 0 0 0 0 24 z" FillRule="NonZero"/>
                                </Canvas.Resources>
                                <Path
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Top="5.718" RenderTransformOrigin="0.5,0.5" x:Name="path3005" Canvas.Left="15.875" Fill="#FFA7B1FF">
                                    <Path.RenderTransform
                    >
                                        <TransformGroup
                    >
                                            <ScaleTransform
                    ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform
                    />
                                            <RotateTransform
                    />
                                            <TranslateTransform
                    />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                    <Path.Data
                    >
                                        <PathGeometry
                    Figures="m 0 0 c 0.297 0 0.538 0.252 0.538 0.562 l 0 6.75 c 0 0.311 -0.241 0.563 -0.538 0.563 -0.297 0 -0.538 -0.252 -0.538 -0.563 l 0 -6.75 C -0.538 0.252 -0.297 0 0 0 M 2.692 0 C 2.99 0 3.231 0.252 3.231 0.562 l 0 6.75 c 0 0.311 -0.241 0.563 -0.539 0.563 -0.297 0 -0.538 -0.252 -0.538 -0.563 l 0 -6.75 C 2.154 0.252 2.395 0 2.692 0 m -5.384 0 c 0.297 0 0.538 0.252 0.538 0.562 l 0 6.75 c 0 0.311 -0.241 0.563 -0.538 0.563 -0.298 0 -0.539 -0.252 -0.539 -0.563 l 0 -6.75 C -3.231 0.252 -2.99 0 -2.692 0 m 8.615 13.5 -3.231 0 0 1.125 c 0 0.621 -0.482 1.125 -1.077 1.125 l -3.23 0 c -0.595 0 -1.077 -0.504 -1.077 -1.125 l 0 -1.125 -3.231 0 C -6.518 13.5 -7 12.996 -7 12.375 l 0 -1.125 c 0 -0.621 0.482 -1.125 1.077 -1.125 L -5.923 0 c 0 -1.242 0.964 -2.25 2.154 -2.25 l 7.538 0 c 1.19 0 2.154 1.008 2.154 2.25 l 0 10.125 C 6.518 10.125 7 10.629 7 11.25 l 0 1.125 C 7 12.996 6.518 13.5 5.923 13.5 m -7.538 0.563 c 0 0.31 0.241 0.562 0.538 0.562 l 2.154 0 c 0.297 0 0.538 -0.252 0.538 -0.562 l 0 -0.563 -3.23 0 0 0.563 z M 4.846 0 c 0 -0.621 -0.482 -1.125 -1.077 -1.125 l -7.538 0 c -0.595 0 -1.077 0.504 -1.077 1.125 l 0 10.125 9.692 0 0 -10.125 z m 0.539 11.25 -10.77 0 c -0.297 0 -0.538 0.252 -0.538 0.563 0 0.31 0.241 0.562 0.538 0.562 l 10.77 0 c 0.297 0 0.538 -0.252 0.538 -0.562 0 -0.311 -0.241 -0.563 -0.538 -0.563" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                            </Canvas>
                        </Viewbox>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShapeFilterButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <Rectangle Fill="#00A7B1FF" RadiusY="0" RadiusX="0"/>
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <Canvas Name="svg2985" Width="38" Height="38">
                                <Canvas.Resources>
                                    <PathGeometry xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="clipPath2999" Figures="M 0 30 30 30 30 0 0 0 0 30 z" FillRule="NonZero"/>
                                </Canvas.Resources>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3005" Fill="#FFA7B1FF" Canvas.Top="4.125" Canvas.Left="11.812" RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry Figures="M 0 0 15 0 9 -9 9 -16.5 6 -18 6 -10.5 6 -9 0 0 z M -3.5 3 C -4.289 2.998 -4.766 2.127 -4.342 1.462 L 3 -10.5 l 0 -9 c 0 -0.574 0.97 -1.5 1.501 -1.5 0.117 0 0.235 0.021 0.353 0.065 l 5.996 2.201 c 0.391 0.146 1.15 0.143 1.15 2.234 l 0 6 7.33 11.943 C 19.774 2.108 19.297 3 18.499 3 L -3.5 3 z" FillRule="nonzero"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2,2,1.999,2"/>
                        <Grid x:Name="border_Copy" Height="Auto" Width="Auto">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Pressed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="rectangle2" Fill="#FF1E1C50" Stroke="Black" StrokeThickness="0" VerticalAlignment="Stretch"/>
                            <Grid x:Name="grid" Height="9.7" Width="6" VerticalAlignment="Center" Margin="1,0,0,0" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="rectangle" Fill="{DynamicResource Brush13}" Height="6" Stroke="Black" Width="1" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="45"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle x:Name="rectangle1" Fill="{DynamicResource Brush13}" Height="6" Stroke="Black" Width="1" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="135"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Brush15}"/>
                            <Setter Property="Fill" TargetName="rectangle1" Value="{DynamicResource Brush15}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonForSubSideStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="24" Width="80">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle1ForAdd" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3377FF"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                        <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="14,7 9,7 9,2 7,2 7,7 2,7 2,9 7,9 7,14 9,14 9,9 14,9 " Name="polygon3075" FillRule="NonZero" Fill="White"/>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="polygon3075" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle1ForRefresh" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3377FF"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16" Margin="1">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path3053" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M11.6 9.1c0 2-1.6 3.6-3.6 3.6c-2 0-3.6-1.6-3.6-3.6c0-1.8 1.3-3.2 3-3.5v1.9l4.9-3.7L7.4 0v3.1  C4.4 3.4 2 6 2 9.1C2 12.3 4.7 15 8 15c3.3 0 6-2.7 6-5.9H11.6z" FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="path3053" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlackNormalButtonStyle1ForRefresh" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3D4D99"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16" Margin="1">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path3053" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M11.6 9.1c0 2-1.6 3.6-3.6 3.6c-2 0-3.6-1.6-3.6-3.6c0-1.8 1.3-3.2 3-3.5v1.9l4.9-3.7L7.4 0v3.1  C4.4 3.4 2 6 2 9.1C2 12.3 4.7 15 8 15c3.3 0 6-2.7 6-5.9H11.6z" FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4A599C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF32407D"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="path3053" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NewNormalButtonStyle1ForRefresh" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="Transparent">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="Transparent"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16" Margin="1">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path3053" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M11.6 9.1c0 2-1.6 3.6-3.6 3.6c-2 0-3.6-1.6-3.6-3.6c0-1.8 1.3-3.2 3-3.5v1.9l4.9-3.7L7.4 0v3.1  C4.4 3.4 2 6 2 9.1C2 12.3 4.7 15 8 15c3.3 0 6-2.7 6-5.9H11.6z" FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="Transparent"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="path3053" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle1ForShow" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3377FF"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3103" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M2 2v9h12V2H2z M12 9H4V4h8V9z" FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                        <Rectangle xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="4" Canvas.Top="12" Width="8" Height="2" x:Name="rect3105" Fill="White"/>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="path3103" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="rect3105" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle1ForSetting" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle1" Fill="#4C111C43">
                            <Rectangle.Effect>
                                <BlurEffect Radius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                            <Rectangle x:Name="rectangle" Fill="#FF3377FF"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Width="16" Height="16">
                                    <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="16" Height="16">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Resources/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3031" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M13 5.9V3h-2.9L8 0.9L5.9 3H3v2.9L0.9 8L3 10.1V13h2.9L8 15.1l2.1-2.1H13v-2.9L15.1 8L13 5.9z M9.2 11L8 12.2   L6.8 11H5V9.2L3.8 8L5 6.8V5h1.8L8 3.8L9.2 5H11v1.8L12.2 8L11 9.2V11H9.2z" FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                        <!--Unknown tag: metadata-->
                                        <!--Unknown tag: sodipodi:namedview-->
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF4583FF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="0,2,0,-2"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#FF2566E8"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
                            <Setter Property="Opacity" TargetName="path3031" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShapeRefreshButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <Rectangle Fill="#00A7B1FF" RadiusY="0" RadiusX="0"/>
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <Canvas Name="图层_1" Canvas.Left="0" Canvas.Top="0" Width="32" Height="32">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path2995" Fill="{DynamicResource Brush13}">
                                    <Path.Data>
                                        <PathGeometry Figures="M4.5 16c-1 0-2.6-0.2-2.6 0.9c0 0.7 0.7 1.2 1.2 1.6c0.7 0.6 2.6 2.9 3.2 2.9c0.6 0 1-0.5 1.4-0.9l2.2-2.2  c0.5-0.5 0.9-0.6 0.9-1.4c0-0.9-1.8-0.8-2.6-0.8c0-1.3 0.3-2.3 0.7-3.3c0.4-0.9 0.9-1.6 1.6-2.3c2.4-2.4 5.6-2.9 8.7-1.6  c1.2 0.5 1.6 1.1 2.3 1.6c0.7-0.5 1.4-1.4 2-1.8c0.2-0.2 0.5-0.4 0.7-0.7l-1.1-1c-0.2-0.1-0.2-0.2-0.4-0.3c-0.3-0.2-0.6-0.4-0.9-0.6  C17.1 3.4 11.5 4.2 7.8 7.9c-1.8 1.8-2.9 4.2-3.2 6.7C4.6 14.9 4.5 15.6 4.5 16z M21.3 15.1c0 0.8 0.4 1 1.5 1h1.1  c0 1.9-0.9 4.1-2.3 5.5c-1.9 1.9-4.5 2.7-7.2 2.1c-0.6-0.1-1-0.3-1.5-0.5c-1.3-0.5-1.8-1.2-2.4-1.6l-2.5 2.5c0.3 0.4 1.1 1 1.5 1.3  c5.2 3.6 12.1 2.4 15.8-2.7c0.4-0.6 0.7-1.1 1.1-1.8c0.7-1.3 1.1-3 1.1-4.8c0.4 0 2.5 0.1 2.5-0.5c0-1.1 0.1-0.8-0.9-1.8  c-0.6-0.6-2.8-3-3.3-3c-0.6 0-1 0.5-1.3 0.9c-0.4 0.4-0.7 0.7-1.1 1.1l-1.1 1.1C22 14.1 21.3 14.6 21.3 15.1z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path2995" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path2995" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="path2995" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShapeEditButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="Auto" Width="Auto">
                        <Rectangle Fill="#00A7B1FF" RadiusY="0" RadiusX="0"/>
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <Canvas x:Name="svg2985" Width="30" Height="30">
                                <Canvas.Resources>
                                    <PathGeometry xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="clipPath2999" Figures="M 0 24 24 24 24 0 0 0 0 24 z" FillRule="NonZero"/>
                                </Canvas.Resources>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3005" Fill="#FFA7B1FF" Canvas.Top="16.166" Canvas.Left="10.95" RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry Figures="m 0 0 2.297 -2.275 c 0.22 -0.217 0.144 -0.589 -0.144 -0.704 l -3.555 -1.413 c -0.341 -0.135 -0.684 0.191 -0.565 0.538 l 1.258 3.688 C -0.606 0.134 -0.225 0.223 0 0" FillRule="nonzero"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3009" Fill="#FFA7B1FF" Canvas.Top="6.325" Canvas.Left="12.081" RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry Figures="M 0 0 3.219 -3.219 11.031 4.562 7.812 7.781 0 0 z" FillRule="nonzero"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3013" Fill="#FFA7B1FF" Canvas.Top="2.478" Canvas.Left="22.524" RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry Figures="m 0 0 3.219 -3.219 0.826 0.811 c 0.492 0.483 0.495 1.274 0.008 1.761 L 2.587 0.819 C 2.106 1.3 1.328 1.304 0.842 0.827 L 0 0 z" FillRule="nonzero"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3017" Fill="#FFA7B1FF" Canvas.Top="6.425" Canvas.Left="24.328" RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry Figures="m 0 0 -16.031 0 c -0.663 0 -1.2 0.537 -1.2 1.2 l 0 16.313 c 0 0.662 0.537 1.2 1.2 1.2 l 8.531 0 c 0.663 0 1.2 -0.538 1.2 -1.2 0 -0.663 -0.537 -1.201 -1.2 -1.201 l -7.331 0 0 -13.912 13.631 0 0 7.613 c 0 0.662 0.537 1.2 1.2 1.2 0.663 0 1.2 -0.538 1.2 -1.2 L 1.2 1.2 C 1.2 0.537 0.663 0 0 0" FillRule="nonzero"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1.25" ScaleX="1.25"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="White"/>
                            <Setter Property="Fill" TargetName="path3009" Value="White"/>
                            <Setter Property="Fill" TargetName="path3013" Value="White"/>
                            <Setter Property="Fill" TargetName="path3017" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="path3017" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3009" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3013" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="path3005" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3009" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3013" Value="#FF6974C7"/>
                            <Setter Property="Fill" TargetName="path3017" Value="#FF6974C7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonForRefresh01" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Height="32" Width="32">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="360">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="grid">
                                            <EasingPointKeyFrame KeyTime="0" Value="0.45,0.45">
                                                <EasingPointKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseInOut"/>
                                                </EasingPointKeyFrame.EasingFunction>
                                            </EasingPointKeyFrame>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <Canvas x:Name="grid" Canvas.Left="0" Canvas.Top="0" Width="36" Height="36" Margin="2,2,0,0">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <!--Unknown tag: metadata-->
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path3007" Fill="#FFAB9DFF">
                                    <Path.Data>
                                        <PathGeometry Figures="M16 27C9.9 27 5 22.1 5 16S9.9 5 16 5s11 4.9 11 11h-2c0-5-4-9-9-9c-5 0-9 4-9 9c0 5 4 9 9 9c2.4 0 4.7-0.9 6.4-2.7    l1.4 1.4C21.7 25.8 19 27 16 27z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Polygon xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="22.6,13.1 26.1,15.5 28.5,12.1 30.2,13.2 26.6,18.3 21.4,14.8" x:Name="polygon3009" FillRule="NonZero" Fill="#FFAB9DFF"/>
                            </Canvas>
                        </Viewbox>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2,8.38" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path3007" Value="White"/>
                            <Setter Property="Fill" TargetName="polygon3009" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel x:Name="stackPanel" Background="{TemplateBinding Background}" Height="19.24" SnapsToDevicePixels="True" Width="Auto" Orientation="Horizontal">
                        <Border BorderBrush="Black" BorderThickness="0" Height="19.24">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2,2,1.999,2"/>
                        </Border>
                        <Grid Height="19.24" Width="14">
                            <Grid x:Name="grid" Height="14" Width="14" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Background="#00000000">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Path x:Name="_1" Fill="{TemplateBinding Foreground}" Stroke="{x:Null}" Height="8" Margin="0" Data="M0,0 L5,0 6,0 6,1 6,6 5,6 5,1 0,1 z" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="8" VerticalAlignment="Center">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="45"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="grid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="grid" Value="Stretch"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>