//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceForWPF.LocationServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevModel", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class DevModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelId {
            get {
                return this.ModelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelIdField, value) != true)) {
                    this.ModelIdField = value;
                    this.RaisePropertyChanged("ModelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WCFServiceForWPF.LocationServices.Bound _editBoundField;
        
        private WCFServiceForWPF.LocationServices.Bound _initBoundField;
        
        private string _kksField;
        
        private string _pathField;
        
        private System.Nullable<int> Abutment_Idk__BackingFieldField;
        
        private System.Nullable<int> Abutment_ParentIdk__BackingFieldField;
        
        private WCFServiceForWPF.LocationServices.Area[] Childrenk__BackingFieldField;
        
        private string Describek__BackingFieldField;
        
        private System.Nullable<int> EditBoundIdk__BackingFieldField;
        
        private int Idk__BackingFieldField;
        
        private System.Nullable<int> InitBoundIdk__BackingFieldField;
        
        private bool IsCreateAreaByDatak__BackingFieldField;
        
        private bool IsOnAlarmAreak__BackingFieldField;
        
        private bool IsOnLocationAreak__BackingFieldField;
        
        private bool IsRelativek__BackingFieldField;
        
        private WCFServiceForWPF.LocationServices.DevInfo[] LeafNodesk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        private System.Nullable<int> Numberk__BackingFieldField;
        
        private System.Nullable<int> ParentIdk__BackingFieldField;
        
        private WCFServiceForWPF.LocationServices.Area Parentk__BackingFieldField;
        
        private System.Nullable<float> RXk__BackingFieldField;
        
        private System.Nullable<float> RYk__BackingFieldField;
        
        private System.Nullable<float> RZk__BackingFieldField;
        
        private System.Nullable<float> SXk__BackingFieldField;
        
        private System.Nullable<float> SYk__BackingFieldField;
        
        private System.Nullable<float> SZk__BackingFieldField;
        
        private DbModel.Tools.AreaTypes Typek__BackingFieldField;
        
        private System.Nullable<float> Xk__BackingFieldField;
        
        private System.Nullable<float> Yk__BackingFieldField;
        
        private System.Nullable<float> Zk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WCFServiceForWPF.LocationServices.Bound _editBound {
            get {
                return this._editBoundField;
            }
            set {
                if ((object.ReferenceEquals(this._editBoundField, value) != true)) {
                    this._editBoundField = value;
                    this.RaisePropertyChanged("_editBound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WCFServiceForWPF.LocationServices.Bound _initBound {
            get {
                return this._initBoundField;
            }
            set {
                if ((object.ReferenceEquals(this._initBoundField, value) != true)) {
                    this._initBoundField = value;
                    this.RaisePropertyChanged("_initBound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _kks {
            get {
                return this._kksField;
            }
            set {
                if ((object.ReferenceEquals(this._kksField, value) != true)) {
                    this._kksField = value;
                    this.RaisePropertyChanged("_kks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _path {
            get {
                return this._pathField;
            }
            set {
                if ((object.ReferenceEquals(this._pathField, value) != true)) {
                    this._pathField = value;
                    this.RaisePropertyChanged("_path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Abutment_Id>k__BackingField", IsRequired=true)]
        public System.Nullable<int> Abutment_Idk__BackingField {
            get {
                return this.Abutment_Idk__BackingFieldField;
            }
            set {
                if ((this.Abutment_Idk__BackingFieldField.Equals(value) != true)) {
                    this.Abutment_Idk__BackingFieldField = value;
                    this.RaisePropertyChanged("Abutment_Idk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Abutment_ParentId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> Abutment_ParentIdk__BackingField {
            get {
                return this.Abutment_ParentIdk__BackingFieldField;
            }
            set {
                if ((this.Abutment_ParentIdk__BackingFieldField.Equals(value) != true)) {
                    this.Abutment_ParentIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("Abutment_ParentIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Children>k__BackingField", IsRequired=true)]
        public WCFServiceForWPF.LocationServices.Area[] Childrenk__BackingField {
            get {
                return this.Childrenk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Childrenk__BackingFieldField, value) != true)) {
                    this.Childrenk__BackingFieldField = value;
                    this.RaisePropertyChanged("Childrenk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Describe>k__BackingField", IsRequired=true)]
        public string Describek__BackingField {
            get {
                return this.Describek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Describek__BackingFieldField, value) != true)) {
                    this.Describek__BackingFieldField = value;
                    this.RaisePropertyChanged("Describek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EditBoundId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> EditBoundIdk__BackingField {
            get {
                return this.EditBoundIdk__BackingFieldField;
            }
            set {
                if ((this.EditBoundIdk__BackingFieldField.Equals(value) != true)) {
                    this.EditBoundIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("EditBoundIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Id>k__BackingField", IsRequired=true)]
        public int Idk__BackingField {
            get {
                return this.Idk__BackingFieldField;
            }
            set {
                if ((this.Idk__BackingFieldField.Equals(value) != true)) {
                    this.Idk__BackingFieldField = value;
                    this.RaisePropertyChanged("Idk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InitBoundId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> InitBoundIdk__BackingField {
            get {
                return this.InitBoundIdk__BackingFieldField;
            }
            set {
                if ((this.InitBoundIdk__BackingFieldField.Equals(value) != true)) {
                    this.InitBoundIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("InitBoundIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsCreateAreaByData>k__BackingField", IsRequired=true)]
        public bool IsCreateAreaByDatak__BackingField {
            get {
                return this.IsCreateAreaByDatak__BackingFieldField;
            }
            set {
                if ((this.IsCreateAreaByDatak__BackingFieldField.Equals(value) != true)) {
                    this.IsCreateAreaByDatak__BackingFieldField = value;
                    this.RaisePropertyChanged("IsCreateAreaByDatak__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsOnAlarmArea>k__BackingField", IsRequired=true)]
        public bool IsOnAlarmAreak__BackingField {
            get {
                return this.IsOnAlarmAreak__BackingFieldField;
            }
            set {
                if ((this.IsOnAlarmAreak__BackingFieldField.Equals(value) != true)) {
                    this.IsOnAlarmAreak__BackingFieldField = value;
                    this.RaisePropertyChanged("IsOnAlarmAreak__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsOnLocationArea>k__BackingField", IsRequired=true)]
        public bool IsOnLocationAreak__BackingField {
            get {
                return this.IsOnLocationAreak__BackingFieldField;
            }
            set {
                if ((this.IsOnLocationAreak__BackingFieldField.Equals(value) != true)) {
                    this.IsOnLocationAreak__BackingFieldField = value;
                    this.RaisePropertyChanged("IsOnLocationAreak__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsRelative>k__BackingField", IsRequired=true)]
        public bool IsRelativek__BackingField {
            get {
                return this.IsRelativek__BackingFieldField;
            }
            set {
                if ((this.IsRelativek__BackingFieldField.Equals(value) != true)) {
                    this.IsRelativek__BackingFieldField = value;
                    this.RaisePropertyChanged("IsRelativek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LeafNodes>k__BackingField", IsRequired=true)]
        public WCFServiceForWPF.LocationServices.DevInfo[] LeafNodesk__BackingField {
            get {
                return this.LeafNodesk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LeafNodesk__BackingFieldField, value) != true)) {
                    this.LeafNodesk__BackingFieldField = value;
                    this.RaisePropertyChanged("LeafNodesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Number>k__BackingField", IsRequired=true)]
        public System.Nullable<int> Numberk__BackingField {
            get {
                return this.Numberk__BackingFieldField;
            }
            set {
                if ((this.Numberk__BackingFieldField.Equals(value) != true)) {
                    this.Numberk__BackingFieldField = value;
                    this.RaisePropertyChanged("Numberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ParentId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> ParentIdk__BackingField {
            get {
                return this.ParentIdk__BackingFieldField;
            }
            set {
                if ((this.ParentIdk__BackingFieldField.Equals(value) != true)) {
                    this.ParentIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ParentIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Parent>k__BackingField", IsRequired=true)]
        public WCFServiceForWPF.LocationServices.Area Parentk__BackingField {
            get {
                return this.Parentk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Parentk__BackingFieldField, value) != true)) {
                    this.Parentk__BackingFieldField = value;
                    this.RaisePropertyChanged("Parentk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RX>k__BackingField", IsRequired=true)]
        public System.Nullable<float> RXk__BackingField {
            get {
                return this.RXk__BackingFieldField;
            }
            set {
                if ((this.RXk__BackingFieldField.Equals(value) != true)) {
                    this.RXk__BackingFieldField = value;
                    this.RaisePropertyChanged("RXk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RY>k__BackingField", IsRequired=true)]
        public System.Nullable<float> RYk__BackingField {
            get {
                return this.RYk__BackingFieldField;
            }
            set {
                if ((this.RYk__BackingFieldField.Equals(value) != true)) {
                    this.RYk__BackingFieldField = value;
                    this.RaisePropertyChanged("RYk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RZ>k__BackingField", IsRequired=true)]
        public System.Nullable<float> RZk__BackingField {
            get {
                return this.RZk__BackingFieldField;
            }
            set {
                if ((this.RZk__BackingFieldField.Equals(value) != true)) {
                    this.RZk__BackingFieldField = value;
                    this.RaisePropertyChanged("RZk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SX>k__BackingField", IsRequired=true)]
        public System.Nullable<float> SXk__BackingField {
            get {
                return this.SXk__BackingFieldField;
            }
            set {
                if ((this.SXk__BackingFieldField.Equals(value) != true)) {
                    this.SXk__BackingFieldField = value;
                    this.RaisePropertyChanged("SXk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SY>k__BackingField", IsRequired=true)]
        public System.Nullable<float> SYk__BackingField {
            get {
                return this.SYk__BackingFieldField;
            }
            set {
                if ((this.SYk__BackingFieldField.Equals(value) != true)) {
                    this.SYk__BackingFieldField = value;
                    this.RaisePropertyChanged("SYk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SZ>k__BackingField", IsRequired=true)]
        public System.Nullable<float> SZk__BackingField {
            get {
                return this.SZk__BackingFieldField;
            }
            set {
                if ((this.SZk__BackingFieldField.Equals(value) != true)) {
                    this.SZk__BackingFieldField = value;
                    this.RaisePropertyChanged("SZk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Type>k__BackingField", IsRequired=true)]
        public DbModel.Tools.AreaTypes Typek__BackingField {
            get {
                return this.Typek__BackingFieldField;
            }
            set {
                if ((this.Typek__BackingFieldField.Equals(value) != true)) {
                    this.Typek__BackingFieldField = value;
                    this.RaisePropertyChanged("Typek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<X>k__BackingField", IsRequired=true)]
        public System.Nullable<float> Xk__BackingField {
            get {
                return this.Xk__BackingFieldField;
            }
            set {
                if ((this.Xk__BackingFieldField.Equals(value) != true)) {
                    this.Xk__BackingFieldField = value;
                    this.RaisePropertyChanged("Xk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Y>k__BackingField", IsRequired=true)]
        public System.Nullable<float> Yk__BackingField {
            get {
                return this.Yk__BackingFieldField;
            }
            set {
                if ((this.Yk__BackingFieldField.Equals(value) != true)) {
                    this.Yk__BackingFieldField = value;
                    this.RaisePropertyChanged("Yk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Z>k__BackingField", IsRequired=true)]
        public System.Nullable<float> Zk__BackingField {
            get {
                return this.Zk__BackingFieldField;
            }
            set {
                if ((this.Zk__BackingFieldField.Equals(value) != true)) {
                    this.Zk__BackingFieldField = value;
                    this.RaisePropertyChanged("Zk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bound", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Bound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRelativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Point[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> ZeroXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> ZeroYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRelative {
            get {
                return this.IsRelativeField;
            }
            set {
                if ((this.IsRelativeField.Equals(value) != true)) {
                    this.IsRelativeField = value;
                    this.RaisePropertyChanged("IsRelative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxX {
            get {
                return this.MaxXField;
            }
            set {
                if ((this.MaxXField.Equals(value) != true)) {
                    this.MaxXField = value;
                    this.RaisePropertyChanged("MaxX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxY {
            get {
                return this.MaxYField;
            }
            set {
                if ((this.MaxYField.Equals(value) != true)) {
                    this.MaxYField = value;
                    this.RaisePropertyChanged("MaxY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxZ {
            get {
                return this.MaxZField;
            }
            set {
                if ((this.MaxZField.Equals(value) != true)) {
                    this.MaxZField = value;
                    this.RaisePropertyChanged("MaxZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinX {
            get {
                return this.MinXField;
            }
            set {
                if ((this.MinXField.Equals(value) != true)) {
                    this.MinXField = value;
                    this.RaisePropertyChanged("MinX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinY {
            get {
                return this.MinYField;
            }
            set {
                if ((this.MinYField.Equals(value) != true)) {
                    this.MinYField = value;
                    this.RaisePropertyChanged("MinY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinZ {
            get {
                return this.MinZField;
            }
            set {
                if ((this.MinZField.Equals(value) != true)) {
                    this.MinZField = value;
                    this.RaisePropertyChanged("MinZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shape {
            get {
                return this.ShapeField;
            }
            set {
                if ((this.ShapeField.Equals(value) != true)) {
                    this.ShapeField = value;
                    this.RaisePropertyChanged("Shape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> ZeroX {
            get {
                return this.ZeroXField;
            }
            set {
                if ((this.ZeroXField.Equals(value) != true)) {
                    this.ZeroXField = value;
                    this.RaisePropertyChanged("ZeroX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> ZeroY {
            get {
                return this.ZeroYField;
            }
            set {
                if ((this.ZeroYField.Equals(value) != true)) {
                    this.ZeroYField = value;
                    this.RaisePropertyChanged("ZeroY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevInfo", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Person.Department[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Person.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Person.Personnel[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Person.Personnel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Data.TagPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Data.TagPosition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.PhysicalTopology))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.PhysicalTopology[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Bound))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.DevInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.DevInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.DevPos))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.TransformM))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Tag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Tag[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_Type[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_Type))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_ChildType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_ChildType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_Model[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ObjectAddList_Model))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.DevPos[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Dev_DoorAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.KKSCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.KKSCode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ConfigArg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.ConfigArg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Post[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Post))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Point[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.AreaAndDev.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.Abutment_DevTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.Abutment_RunStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.Abutment_Status))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.AreaTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.IsStart))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.ArchorTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.LocationAlarmLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.LocationAlarmType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.LocationAlarmHandleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.Abutment_DevAlarmLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DbModel.Tools.Abutment_DevAlarmSrc))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.Position[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.Position))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.U3DPosition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.U3DPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.PositionList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.PositionList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.Pos[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.LocationHistory.Data.Pos))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Dev_CameraInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Dev_CameraInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Archor[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Archor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.NearbyDev[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.NearbyDev))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Dev_Monitor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Dev_Monitor[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.DevMonitorNode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.DevMonitorNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.DeviceAlarmInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.EntranceGuardCard[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.EntranceGuardCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.Picture))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.AreaStatistics))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.AreaPoints))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.AreaAndDev.AreaPoints[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.DevModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.Area))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.Bound))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.Point[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.Area[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.DevInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.FuncArgs.SearchArg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmStatistics))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmGroupCount[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmGroupCount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmLine[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmLinePoint[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Alarm.AlarmLinePoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.AreaNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.AreaNode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.DevNode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.DevNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.PersonNode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Nodes.PersonNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.TransferOfAxesConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Person.NearbyPerson[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Person.NearbyPerson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.FuncArgs.AlarmSearchArg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.FuncArgs.PageInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Alarm.LocationAlarm[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Alarm.LocationAlarm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Alarm.DeviceAlarm[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Location.TModel.Location.Alarm.DeviceAlarm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.BaseData.Page<Location.TModel.Location.Alarm.DeviceAlarm>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.BaseData.Ticket[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.BaseData.Ticket))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.InspectionTrackHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.InspectionTrackHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PatrolPointHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PatrolPointHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PatrolPointItemHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PatrolPointItemHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.OperationTicketHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.OperationTicketHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.OperationItemHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.OperationItemHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.WorkTicketHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.WorkTicketHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.SafetyMeasuresHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.SafetyMeasuresHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PersonnelMobileInspectionHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PersonnelMobileInspectionHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PersonnelMobileInspectionItemHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.LocationHistory.Work.PersonnelMobileInspectionItemHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.InspectionTrack[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.InspectionTrack))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PatrolPoint[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PatrolPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PatrolPointItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PatrolPointItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.InspectionTrackList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.OperationTicket[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.OperationTicket))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.OperationItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.OperationItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.WorkTicket[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.WorkTicket))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.SafetyMeasures[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.SafetyMeasures))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionDev[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionDev))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionContent[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspection[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.MobileInspectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PersonnelMobileInspection[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PersonnelMobileInspection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PersonnelMobileInspectionItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Work.PersonnelMobileInspectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Manage.LoginInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Location.Manage.VersionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.CardRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.CardRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.CameraAlarmInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.CameraAlarmInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.FlameData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.HeadData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.HeadInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.HeadInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.RectInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.RectInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.SmogData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.DownloadInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFServiceForWPF.LocationServices.DownloadProgress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Models.Settings.UnitySetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Models.Settings.CinemachineSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Models.Settings.CommunicationSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Models.Settings.RefreshSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TModel.Models.Settings.VersionSetting))]
    public partial class DevInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Abutment_DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DbModel.Tools.Abutment_DevTypes Abutment_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreateTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DevDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Local_CabinetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Local_DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Local_TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModifyTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Area ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PlacedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DbModel.Tools.Abutment_RunStatus RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DbModel.Tools.Abutment_Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abutment_DevID {
            get {
                return this.Abutment_DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Abutment_DevIDField, value) != true)) {
                    this.Abutment_DevIDField = value;
                    this.RaisePropertyChanged("Abutment_DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DbModel.Tools.Abutment_DevTypes Abutment_Type {
            get {
                return this.Abutment_TypeField;
            }
            set {
                if ((this.Abutment_TypeField.Equals(value) != true)) {
                    this.Abutment_TypeField = value;
                    this.RaisePropertyChanged("Abutment_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreateTimeStamp {
            get {
                return this.CreateTimeStampField;
            }
            set {
                if ((this.CreateTimeStampField.Equals(value) != true)) {
                    this.CreateTimeStampField = value;
                    this.RaisePropertyChanged("CreateTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object DevDetail {
            get {
                return this.DevDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DevDetailField, value) != true)) {
                    this.DevDetailField = value;
                    this.RaisePropertyChanged("DevDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KKS {
            get {
                return this.KKSField;
            }
            set {
                if ((object.ReferenceEquals(this.KKSField, value) != true)) {
                    this.KKSField = value;
                    this.RaisePropertyChanged("KKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Local_CabinetID {
            get {
                return this.Local_CabinetIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Local_CabinetIDField, value) != true)) {
                    this.Local_CabinetIDField = value;
                    this.RaisePropertyChanged("Local_CabinetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Local_DevID {
            get {
                return this.Local_DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Local_DevIDField, value) != true)) {
                    this.Local_DevIDField = value;
                    this.RaisePropertyChanged("Local_DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Local_TypeCode {
            get {
                return this.Local_TypeCodeField;
            }
            set {
                if ((this.Local_TypeCodeField.Equals(value) != true)) {
                    this.Local_TypeCodeField = value;
                    this.RaisePropertyChanged("Local_TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufactor {
            get {
                return this.ManufactorField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufactorField, value) != true)) {
                    this.ManufactorField = value;
                    this.RaisePropertyChanged("Manufactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyTime {
            get {
                return this.ModifyTimeField;
            }
            set {
                if ((this.ModifyTimeField.Equals(value) != true)) {
                    this.ModifyTimeField = value;
                    this.RaisePropertyChanged("ModifyTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModifyTimeStamp {
            get {
                return this.ModifyTimeStampField;
            }
            set {
                if ((this.ModifyTimeStampField.Equals(value) != true)) {
                    this.ModifyTimeStampField = value;
                    this.RaisePropertyChanged("ModifyTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Area Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Placed {
            get {
                return this.PlacedField;
            }
            set {
                if ((this.PlacedField.Equals(value) != true)) {
                    this.PlacedField = value;
                    this.RaisePropertyChanged("Placed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosX {
            get {
                return this.PosXField;
            }
            set {
                if ((this.PosXField.Equals(value) != true)) {
                    this.PosXField = value;
                    this.RaisePropertyChanged("PosX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosY {
            get {
                return this.PosYField;
            }
            set {
                if ((this.PosYField.Equals(value) != true)) {
                    this.PosYField = value;
                    this.RaisePropertyChanged("PosY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosZ {
            get {
                return this.PosZField;
            }
            set {
                if ((this.PosZField.Equals(value) != true)) {
                    this.PosZField = value;
                    this.RaisePropertyChanged("PosZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationX {
            get {
                return this.RotationXField;
            }
            set {
                if ((this.RotationXField.Equals(value) != true)) {
                    this.RotationXField = value;
                    this.RaisePropertyChanged("RotationX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationY {
            get {
                return this.RotationYField;
            }
            set {
                if ((this.RotationYField.Equals(value) != true)) {
                    this.RotationYField = value;
                    this.RaisePropertyChanged("RotationY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationZ {
            get {
                return this.RotationZField;
            }
            set {
                if ((this.RotationZField.Equals(value) != true)) {
                    this.RotationZField = value;
                    this.RaisePropertyChanged("RotationZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DbModel.Tools.Abutment_RunStatus RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((this.RunStatusField.Equals(value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleX {
            get {
                return this.ScaleXField;
            }
            set {
                if ((this.ScaleXField.Equals(value) != true)) {
                    this.ScaleXField = value;
                    this.RaisePropertyChanged("ScaleX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleY {
            get {
                return this.ScaleYField;
            }
            set {
                if ((this.ScaleYField.Equals(value) != true)) {
                    this.ScaleYField = value;
                    this.RaisePropertyChanged("ScaleY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleZ {
            get {
                return this.ScaleZField;
            }
            set {
                if ((this.ScaleZField.Equals(value) != true)) {
                    this.ScaleZField = value;
                    this.RaisePropertyChanged("ScaleZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DbModel.Tools.Abutment_Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Bound BoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Bound Bound {
            get {
                return this.BoundField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundField, value) != true)) {
                    this.BoundField = value;
                    this.RaisePropertyChanged("Bound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoundId {
            get {
                return this.BoundIdField;
            }
            set {
                if ((this.BoundIdField.Equals(value) != true)) {
                    this.BoundIdField = value;
                    this.RaisePropertyChanged("BoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardRole", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Location.Authorizations")]
    [System.SerializableAttribute()]
    public partial class CardRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AreaIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AreaIds {
            get {
                return this.AreaIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaIdsField, value) != true)) {
                    this.AreaIdsField = value;
                    this.RaisePropertyChanged("AreaIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraAlarmInfo", Namespace="http://schemas.datacontract.org/2004/07/WebApiCommunication.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class CameraAlarmInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.FlameData FlameDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.HeadData HeadDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.SmogData SmogDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int aidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cid_urlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pic_dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pic_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.CameraAlarmInfo startInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long time_stampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevID {
            get {
                return this.DevIDField;
            }
            set {
                if ((this.DevIDField.Equals(value) != true)) {
                    this.DevIDField = value;
                    this.RaisePropertyChanged("DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevIp {
            get {
                return this.DevIpField;
            }
            set {
                if ((object.ReferenceEquals(this.DevIpField, value) != true)) {
                    this.DevIpField = value;
                    this.RaisePropertyChanged("DevIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevName {
            get {
                return this.DevNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevNameField, value) != true)) {
                    this.DevNameField = value;
                    this.RaisePropertyChanged("DevName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.FlameData FlameData {
            get {
                return this.FlameDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FlameDataField, value) != true)) {
                    this.FlameDataField = value;
                    this.RaisePropertyChanged("FlameData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.HeadData HeadData {
            get {
                return this.HeadDataField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadDataField, value) != true)) {
                    this.HeadDataField = value;
                    this.RaisePropertyChanged("HeadData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.SmogData SmogData {
            get {
                return this.SmogDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SmogDataField, value) != true)) {
                    this.SmogDataField = value;
                    this.RaisePropertyChanged("SmogData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int aid {
            get {
                return this.aidField;
            }
            set {
                if ((this.aidField.Equals(value) != true)) {
                    this.aidField = value;
                    this.RaisePropertyChanged("aid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                if ((object.ReferenceEquals(this.cidField, value) != true)) {
                    this.cidField = value;
                    this.RaisePropertyChanged("cid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cid_url {
            get {
                return this.cid_urlField;
            }
            set {
                if ((object.ReferenceEquals(this.cid_urlField, value) != true)) {
                    this.cid_urlField = value;
                    this.RaisePropertyChanged("cid_url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pic_data {
            get {
                return this.pic_dataField;
            }
            set {
                if ((object.ReferenceEquals(this.pic_dataField, value) != true)) {
                    this.pic_dataField = value;
                    this.RaisePropertyChanged("pic_data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pic_name {
            get {
                return this.pic_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.pic_nameField, value) != true)) {
                    this.pic_nameField = value;
                    this.RaisePropertyChanged("pic_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.CameraAlarmInfo startInfo {
            get {
                return this.startInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.startInfoField, value) != true)) {
                    this.startInfoField = value;
                    this.RaisePropertyChanged("startInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long time_stamp {
            get {
                return this.time_stampField;
            }
            set {
                if ((this.time_stampField.Equals(value) != true)) {
                    this.time_stampField = value;
                    this.RaisePropertyChanged("time_stamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlameData", Namespace="http://schemas.datacontract.org/2004/07/WebApiCommunication.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class FlameData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int alertFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.RectInfo[] flameInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numOfFlameRectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int alertFlag {
            get {
                return this.alertFlagField;
            }
            set {
                if ((this.alertFlagField.Equals(value) != true)) {
                    this.alertFlagField = value;
                    this.RaisePropertyChanged("alertFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.RectInfo[] flameInfo {
            get {
                return this.flameInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.flameInfoField, value) != true)) {
                    this.flameInfoField = value;
                    this.RaisePropertyChanged("flameInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numOfFlameRects {
            get {
                return this.numOfFlameRectsField;
            }
            set {
                if ((this.numOfFlameRectsField.Equals(value) != true)) {
                    this.numOfFlameRectsField = value;
                    this.RaisePropertyChanged("numOfFlameRects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeadData", Namespace="http://schemas.datacontract.org/2004/07/WebApiCommunication.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class HeadData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int alertFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.HeadInfo[] headInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numOfHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long timeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int alertFlag {
            get {
                return this.alertFlagField;
            }
            set {
                if ((this.alertFlagField.Equals(value) != true)) {
                    this.alertFlagField = value;
                    this.RaisePropertyChanged("alertFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.HeadInfo[] headInfo {
            get {
                return this.headInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.headInfoField, value) != true)) {
                    this.headInfoField = value;
                    this.RaisePropertyChanged("headInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numOfHead {
            get {
                return this.numOfHeadField;
            }
            set {
                if ((this.numOfHeadField.Equals(value) != true)) {
                    this.numOfHeadField = value;
                    this.RaisePropertyChanged("numOfHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeadInfo", Namespace="http://schemas.datacontract.org/2004/07/WebApiCommunication.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class HeadInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float numOfHelmetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float widthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float numOfHelmet {
            get {
                return this.numOfHelmetField;
            }
            set {
                if ((this.numOfHelmetField.Equals(value) != true)) {
                    this.numOfHelmetField = value;
                    this.RaisePropertyChanged("numOfHelmet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RectInfo", Namespace="http://schemas.datacontract.org/2004/07/CommunicationClass.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class RectInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float widthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmogData", Namespace="http://schemas.datacontract.org/2004/07/CommunicationClass.ExtremeVision")]
    [System.SerializableAttribute()]
    public partial class SmogData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int alertFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numOfSmogRectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.RectInfo[] smogInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int alertFlag {
            get {
                return this.alertFlagField;
            }
            set {
                if ((this.alertFlagField.Equals(value) != true)) {
                    this.alertFlagField = value;
                    this.RaisePropertyChanged("alertFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numOfSmogRects {
            get {
                return this.numOfSmogRectsField;
            }
            set {
                if ((this.numOfSmogRectsField.Equals(value) != true)) {
                    this.numOfSmogRectsField = value;
                    this.RaisePropertyChanged("numOfSmogRects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.RectInfo[] smogInfo {
            get {
                return this.smogInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.smogInfoField, value) != true)) {
                    this.smogInfoField = value;
                    this.RaisePropertyChanged("smogInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadInfo", Namespace="http://schemas.datacontract.org/2004/07/LocationServices.Locations.Plugins")]
    [System.SerializableAttribute()]
    public partial class DownloadInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CId {
            get {
                return this.CIdField;
            }
            set {
                if ((this.CIdField.Equals(value) != true)) {
                    this.CIdField = value;
                    this.RaisePropertyChanged("CId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DId {
            get {
                return this.DIdField;
            }
            set {
                if ((this.DIdField.Equals(value) != true)) {
                    this.DIdField = value;
                    this.RaisePropertyChanged("DId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeField, value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadProgress", Namespace="http://schemas.datacontract.org/2004/07/LocationServices.Locations.Plugins")]
    [System.SerializableAttribute()]
    public partial class DownloadProgress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgressTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DId {
            get {
                return this.DIdField;
            }
            set {
                if ((this.DIdField.Equals(value) != true)) {
                    this.DIdField = value;
                    this.RaisePropertyChanged("DId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgressText {
            get {
                return this.ProgressTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgressTextField, value) != true)) {
                    this.ProgressTextField = value;
                    this.RaisePropertyChanged("ProgressText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServices.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/Hello", ReplyAction="http://tempuri.org/ITestService/HelloResponse")]
        string Hello(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentList", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentListResponse")]
        Location.TModel.Location.Person.Department[] GetDepartmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentTree", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentTreeResponse")]
        Location.TModel.Location.Person.Department GetDepartmentTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartment", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentResponse")]
        Location.TModel.Location.Person.Department GetDepartment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/AddDepartment", ReplyAction="http://tempuri.org/IDepartmentService/AddDepartmentResponse")]
        int AddDepartment(Location.TModel.Location.Person.Department p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/EditDepartment", ReplyAction="http://tempuri.org/IDepartmentService/EditDepartmentResponse")]
        bool EditDepartment(Location.TModel.Location.Person.Department p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/DeleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/DeleteDepartmentResponse")]
        bool DeleteDepartment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTag", ReplyAction="http://tempuri.org/ITagService/GetTagResponse")]
        Location.TModel.Location.AreaAndDev.Tag GetTag(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTags", ReplyAction="http://tempuri.org/ITagService/GetTagsResponse")]
        Location.TModel.Location.AreaAndDev.Tag[] GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTag", ReplyAction="http://tempuri.org/ITagService/AddTagResponse")]
        int AddTag(Location.TModel.Location.AreaAndDev.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTags", ReplyAction="http://tempuri.org/ITagService/AddTagsResponse")]
        bool AddTags(Location.TModel.Location.AreaAndDev.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteTag", ReplyAction="http://tempuri.org/ITagService/DeleteTagResponse")]
        bool DeleteTag(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteAllTags", ReplyAction="http://tempuri.org/ITagService/DeleteAllTagsResponse")]
        bool DeleteAllTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/EditTag", ReplyAction="http://tempuri.org/ITagService/EditTagResponse")]
        bool EditTag(Location.TModel.Location.AreaAndDev.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/EditTagById", ReplyAction="http://tempuri.org/ITagService/EditTagByIdResponse")]
        bool EditTagById(Location.TModel.Location.AreaAndDev.Tag Tag, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositons", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsResponse")]
        Location.TModel.Location.Data.TagPosition[] GetRealPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositonsByTags", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsByTagsResponse")]
        Location.TModel.Location.Data.TagPosition[] GetRealPositonsByTags(string[] tagCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositons", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelID", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelIDResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIds", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIdsResponse" +
            "")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByTimeResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetStrs", ReplyAction="http://tempuri.org/IPositionService/GetStrsResponse")]
        string GetStrs(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPosition", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionResponse")]
        void AddU3DPosition(Location.TModel.LocationHistory.Data.U3DPosition[] pList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPositions", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionsResponse")]
        void AddU3DPositions(Location.TModel.LocationHistory.Data.U3DPosition[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTimeResponse")]
        Location.TModel.LocationHistory.Data.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonStatistics", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonStatisticsResponse")]
        Location.TModel.LocationHistory.Data.PositionList[] GetHistoryPositonStatistics(int nFlag, string strName, string strName2, string strName3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonData", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonDataResponse")]
        Location.TModel.LocationHistory.Data.Pos[] GetHistoryPositonData(int nFlag, string strName, string strName2, string strName3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetObjectAddList", ReplyAction="http://tempuri.org/IDevService/GetObjectAddListResponse")]
        Location.TModel.Location.AreaAndDev.ObjectAddList_Type[] GetObjectAddList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevPositions", ReplyAction="http://tempuri.org/IDevService/GetDevPositionsResponse")]
        Location.TModel.Location.AreaAndDev.DevPos[] GetDevPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosInfo", ReplyAction="http://tempuri.org/IDevService/AddDevPosInfoResponse")]
        bool AddDevPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosByList", ReplyAction="http://tempuri.org/IDevService/AddDevPosByListResponse")]
        bool AddDevPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosInfo", ReplyAction="http://tempuri.org/IDevService/ModifyPosInfoResponse")]
        bool ModifyPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosByList", ReplyAction="http://tempuri.org/IDevService/ModifyPosByListResponse")]
        bool ModifyPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeletePosInfo", ReplyAction="http://tempuri.org/IDevService/DeletePosInfoResponse")]
        bool DeletePosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDevInfos", ReplyAction="http://tempuri.org/IDevService/GetAllDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetAllDevInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfos", ReplyAction="http://tempuri.org/IDevService/GetDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfos(int[] typeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/FindDevInfos", ReplyAction="http://tempuri.org/IDevService/FindDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] FindDevInfos(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfo", ReplyAction="http://tempuri.org/IDevService/AddDevInfoResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo AddDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfoByList", ReplyAction="http://tempuri.org/IDevService/AddDevInfoByListResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] AddDevInfoByList(Location.TModel.Location.AreaAndDev.DevInfo[] devInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDevInfo", ReplyAction="http://tempuri.org/IDevService/ModifyDevInfoResponse")]
        bool ModifyDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDevInfo", ReplyAction="http://tempuri.org/IDevService/DeleteDevInfoResponse")]
        bool DeleteDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDevInfoByParentResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevByGUID", ReplyAction="http://tempuri.org/IDevService/GetDevByGUIDResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo GetDevByGUID(string devId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevById", ReplyAction="http://tempuri.org/IDevService/GetDevByIdResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo GetDevById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevByGameName", ReplyAction="http://tempuri.org/IDevService/GetDevByGameNameResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo GetDevByGameName(string nameName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccessByList", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessByListResponse")]
        bool AddDoorAccessByList(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccess", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessResponse")]
        Location.TModel.Location.AreaAndDev.Dev_DoorAccess AddDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess doorAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDoorAccess", ReplyAction="http://tempuri.org/IDevService/DeleteDoorAccessResponse")]
        bool DeleteDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDoorAccess", ReplyAction="http://tempuri.org/IDevService/ModifyDoorAccessResponse")]
        bool ModifyDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDoorAccessInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDoorAccessInfoByParentResponse")]
        Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDoorAccessInfo", ReplyAction="http://tempuri.org/IDevService/GetAllDoorAccessInfoResponse")]
        Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetAllDoorAccessInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddCameraInfoByList", ReplyAction="http://tempuri.org/IDevService/AddCameraInfoByListResponse")]
        bool AddCameraInfoByList(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddCameraInfo", ReplyAction="http://tempuri.org/IDevService/AddCameraInfoResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo AddCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo cameraInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteCameraInfo", ReplyAction="http://tempuri.org/IDevService/DeleteCameraInfoResponse")]
        bool DeleteCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyCameraInfoByList", ReplyAction="http://tempuri.org/IDevService/ModifyCameraInfoByListResponse")]
        bool ModifyCameraInfoByList(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyCameraInfo", ReplyAction="http://tempuri.org/IDevService/ModifyCameraInfoResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo ModifyCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo camInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetCameraInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetCameraInfoByParentResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo[] GetCameraInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllCameraInfo", ReplyAction="http://tempuri.org/IDevService/GetAllCameraInfoResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo[] GetAllCameraInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetCameraInfoByDevInfo", ReplyAction="http://tempuri.org/IDevService/GetCameraInfoByDevInfoResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo GetCameraInfoByDevInfo(Location.TModel.Location.AreaAndDev.DevInfo dev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetCameraInfoByIp", ReplyAction="http://tempuri.org/IDevService/GetCameraInfoByIpResponse")]
        TModel.Location.AreaAndDev.Dev_CameraInfo GetCameraInfoByIp(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchors", ReplyAction="http://tempuri.org/IDevService/GetArchorsResponse")]
        TModel.Location.AreaAndDev.Archor[] GetArchors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchor", ReplyAction="http://tempuri.org/IDevService/GetArchorResponse")]
        TModel.Location.AreaAndDev.Archor GetArchor(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchorByDevId", ReplyAction="http://tempuri.org/IDevService/GetArchorByDevIdResponse")]
        TModel.Location.AreaAndDev.Archor GetArchorByDevId(int devId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/EditArchor", ReplyAction="http://tempuri.org/IDevService/EditArchorResponse")]
        bool EditArchor(TModel.Location.AreaAndDev.Archor Archor, int ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddArchor", ReplyAction="http://tempuri.org/IDevService/AddArchorResponse")]
        bool AddArchor(TModel.Location.AreaAndDev.Archor archor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteArchor", ReplyAction="http://tempuri.org/IDevService/DeleteArchorResponse")]
        bool DeleteArchor(int archorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetNearbyDev_Currency", ReplyAction="http://tempuri.org/IDevService/GetNearbyDev_CurrencyResponse")]
        TModel.Location.AreaAndDev.NearbyDev[] GetNearbyDev_Currency(int id, float fDis, int nFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetNearbyCamera_Alarm", ReplyAction="http://tempuri.org/IDevService/GetNearbyCamera_AlarmResponse")]
        TModel.Location.AreaAndDev.NearbyDev[] GetNearbyCamera_Alarm(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetEntranceActionInfoByPerson24Hours", ReplyAction="http://tempuri.org/IDevService/GetEntranceActionInfoByPerson24HoursResponse")]
        TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo[] GetEntranceActionInfoByPerson24Hours(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevClassByDevModel", ReplyAction="http://tempuri.org/IDevService/GetDevClassByDevModelResponse")]
        WCFServiceForWPF.LocationServices.DevModel GetDevClassByDevModel(string devModelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevMonitorInfoByKKS", ReplyAction="http://tempuri.org/IDevService/GetDevMonitorInfoByKKSResponse")]
        TModel.Location.AreaAndDev.Dev_Monitor GetDevMonitorInfoByKKS(string KKS, bool bFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevAlarmStatistics", ReplyAction="http://tempuri.org/IDevService/GetDevAlarmStatisticsResponse")]
        TModel.Location.Alarm.AlarmStatistics GetDevAlarmStatistics(TModel.FuncArgs.SearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetLocationAlarmStatistics", ReplyAction="http://tempuri.org/IDevService/GetLocationAlarmStatisticsResponse")]
        TModel.Location.Alarm.AlarmStatistics GetLocationAlarmStatistics(TModel.FuncArgs.SearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByNodeIdResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByCode", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByCodeResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSInfoByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSInfoByNameResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode FindKKSInfoByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSCodeByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSCodeByNodeIdResponse")]
        string GetKKSCodeByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSCodeByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSCodeByNameResponse")]
        string FindKKSCodeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyList", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyList(int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopology(string id, bool getChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByName", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByNameResponse" +
            "")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByPid", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByPidResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByPid(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTree", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTree(int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeNode", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeNodeResponse")]
        TModel.Location.Nodes.AreaNode GetPhysicalTopologyTreeNode(int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeByIdResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTreeById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology AddPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology EditPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/RemovePhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/RemovePhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology RemovePhysicalTopology(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRangeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetParkMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeByIdResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRangeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditMonitorRangeResponse")]
        bool EditMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddMonitorRangeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology AddMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/DeleteMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/DeleteMonitorRangeResponse")]
        bool DeleteMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetSwitchAreas", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetSwitchAreasResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetSwitchAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/AddConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/AddConfigArgResponse")]
        bool AddConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/EditConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/EditConfigArgResponse")]
        bool EditConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/DeleteConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/DeleteConfigArgResponse")]
        bool DeleteConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArg(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgList", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgListResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] GetConfigArgList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgByKey", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgByKeyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArgByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByKey", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByKeyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByClassify", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByClassifyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByClassify(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfigResponse")]
        Location.TModel.Location.TransferOfAxesConfig GetTransferOfAxesConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfigResponse")]
        bool SetTransferOfAxesConfig(Location.TModel.Location.TransferOfAxesConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPersonList", ReplyAction="http://tempuri.org/IPersonalService/GetPersonListResponse")]
        Location.TModel.Location.Person.Personnel[] GetPersonList(bool isFilterByTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/FindPersonList", ReplyAction="http://tempuri.org/IPersonalService/FindPersonListResponse")]
        Location.TModel.Location.Person.Personnel[] FindPersonList(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPerson", ReplyAction="http://tempuri.org/IPersonalService/GetPersonResponse")]
        Location.TModel.Location.Person.Personnel GetPerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/AddPerson", ReplyAction="http://tempuri.org/IPersonalService/AddPersonResponse")]
        int AddPerson(Location.TModel.Location.Person.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/EditPerson", ReplyAction="http://tempuri.org/IPersonalService/EditPersonResponse")]
        bool EditPerson(Location.TModel.Location.Person.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/DeletePerson", ReplyAction="http://tempuri.org/IPersonalService/DeletePersonResponse")]
        bool DeletePerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetNearbyPerson_Currency", ReplyAction="http://tempuri.org/IPersonalService/GetNearbyPerson_CurrencyResponse")]
        TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Currency(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetNearbyPerson_Alarm", ReplyAction="http://tempuri.org/IPersonalService/GetNearbyPerson_AlarmResponse")]
        TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Alarm(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetLocationAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetLocationAlarmsResponse")]
        Location.TModel.Location.Alarm.LocationAlarm[] GetLocationAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetDeviceAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetDeviceAlarmsResponse")]
        TModel.Location.AreaAndDev.DeviceAlarmInformation GetDeviceAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetDeviceAlarmsPage", ReplyAction="http://tempuri.org/IAlarmService/GetDeviceAlarmsPageResponse")]
        TModel.BaseData.Page<Location.TModel.Location.Alarm.DeviceAlarm> GetDeviceAlarmsPage(Location.TModel.FuncArgs.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/GetPostList", ReplyAction="http://tempuri.org/IPostService/GetPostListResponse")]
        Location.TModel.Location.AreaAndDev.Post[] GetPostList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/GetPost", ReplyAction="http://tempuri.org/IPostService/GetPostResponse")]
        Location.TModel.Location.AreaAndDev.Post GetPost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/AddPost", ReplyAction="http://tempuri.org/IPostService/AddPostResponse")]
        int AddPost(Location.TModel.Location.AreaAndDev.Post p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/EditPost", ReplyAction="http://tempuri.org/IPostService/EditPostResponse")]
        bool EditPost(Location.TModel.Location.AreaAndDev.Post p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/DeletePost", ReplyAction="http://tempuri.org/IPostService/DeletePostResponse")]
        bool DeletePost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketList", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketListResponse")]
        TModel.BaseData.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketDetial", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketDetialResponse")]
        TModel.BaseData.Ticket GetTicketDetial(int id, string begin_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/Getinspectionhistorylist", ReplyAction="http://tempuri.org/IBaseDataService/GetinspectionhistorylistResponse")]
        TModel.LocationHistory.Work.InspectionTrackHistory[] Getinspectionhistorylist(System.DateTime dtBeginTime, System.DateTime dtEndTime, bool bFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetorgList", ReplyAction="http://tempuri.org/IBaseDataService/GetorgListResponse")]
        Location.TModel.Location.Person.Department[] GetorgList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetZonesList", ReplyAction="http://tempuri.org/IBaseDataService/GetZonesListResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetZonesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSingleZonesInfo", ReplyAction="http://tempuri.org/IBaseDataService/GetSingleZonesInfoResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetSingleZonesInfo(int id, int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetZoneDevList", ReplyAction="http://tempuri.org/IBaseDataService/GetZoneDevListResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetZoneDevList(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetDeviceList", ReplyAction="http://tempuri.org/IBaseDataService/GetDeviceListResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetDeviceList(string types, string code, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSingleDeviceInfo", ReplyAction="http://tempuri.org/IBaseDataService/GetSingleDeviceInfoResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo GetSingleDeviceInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSingleDeviceActionHistory", ReplyAction="http://tempuri.org/IBaseDataService/GetSingleDeviceActionHistoryResponse")]
        void GetSingleDeviceActionHistory(int id, string begin_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetCardList", ReplyAction="http://tempuri.org/IBaseDataService/GetCardListResponse")]
        TModel.Location.AreaAndDev.EntranceGuardCard[] GetCardList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSingleCardActionHistory", ReplyAction="http://tempuri.org/IBaseDataService/GetSingleCardActionHistoryResponse")]
        TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo[] GetSingleCardActionHistory(int id, string begin_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketsList", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketsListResponse")]
        void GetTicketsList(string type, string begin_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketsDetail", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketsDetailResponse")]
        void GetTicketsDetail(int id, string begin_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GeteventsList", ReplyAction="http://tempuri.org/IBaseDataService/GeteventsListResponse")]
        Location.TModel.Location.Alarm.DeviceAlarm[] GeteventsList(System.Nullable<int> src, System.Nullable<int> level, System.Nullable<long> begin_t, System.Nullable<long> end_t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSomesisList", ReplyAction="http://tempuri.org/IBaseDataService/GetSomesisListResponse")]
        TModel.Location.AreaAndDev.DevMonitorNode[] GetSomesisList(string[] strTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSomeSisHistoryList", ReplyAction="http://tempuri.org/IBaseDataService/GetSomeSisHistoryListResponse")]
        void GetSomeSisHistoryList(string kks, bool compact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetSisSamplingHistoryList", ReplyAction="http://tempuri.org/IBaseDataService/GetSisSamplingHistoryListResponse")]
        void GetSisSamplingHistoryList(string kks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/Getinspectionlist", ReplyAction="http://tempuri.org/IBaseDataService/GetinspectionlistResponse")]
        TModel.Location.Work.InspectionTrack[] Getinspectionlist(System.DateTime dtBeginTime, System.DateTime dtEndTime, bool bFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetInspectionTrackById", ReplyAction="http://tempuri.org/IBaseDataService/GetInspectionTrackByIdResponse")]
        TModel.Location.Work.InspectionTrack GetInspectionTrackById(TModel.Location.Work.InspectionTrack trackId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/Getcheckpoints", ReplyAction="http://tempuri.org/IBaseDataService/GetcheckpointsResponse")]
        TModel.Location.Work.PatrolPoint[] Getcheckpoints(int InspectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/Getcheckresults", ReplyAction="http://tempuri.org/IBaseDataService/GetcheckresultsResponse")]
        TModel.Location.Work.PatrolPointItem[] Getcheckresults(int patrolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/Trys", ReplyAction="http://tempuri.org/IBaseDataService/TrysResponse")]
        void Trys(TModel.Location.Work.InspectionTrackList aa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketListResponse")]
        TModel.Location.Work.OperationTicket[] GetOperationTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketListResponse")]
        TModel.Location.Work.WorkTicket[] GetWorkTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionDevList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionDevListResponse")]
        TModel.Location.Work.MobileInspectionDev[] GetMobileInspectionDevList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionListResponse")]
        TModel.Location.Work.MobileInspection[] GetMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionListResponse")]
        TModel.Location.Work.PersonnelMobileInspection[] GetPersonnelMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketHistoryListResponse")]
        TModel.LocationHistory.Work.OperationTicketHistory[] GetOperationTicketHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketHistoryListResponse")]
        TModel.LocationHistory.Work.WorkTicketHistory[] GetWorkTicketHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryListResponse")]
        TModel.LocationHistory.Work.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetInspectionTrack", ReplyAction="http://tempuri.org/IWorkService/GetInspectionTrackResponse")]
        TModel.Location.Work.InspectionTrack GetInspectionTrack();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        TModel.Location.Manage.LoginInfo Login(TModel.Location.Manage.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        TModel.Location.Manage.LoginInfo Logout(TModel.Location.Manage.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/KeepLive", ReplyAction="http://tempuri.org/IUserService/KeepLiveResponse")]
        TModel.Location.Manage.LoginInfo KeepLive(TModel.Location.Manage.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVersionInfo", ReplyAction="http://tempuri.org/IUserService/GetVersionInfoResponse")]
        TModel.Location.Manage.VersionInfo GetVersionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ibus_anchor/EditBusAnchor", ReplyAction="http://tempuri.org/Ibus_anchor/EditBusAnchorResponse")]
        bool EditBusAnchor(TModel.Location.AreaAndDev.Archor archor, int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ibus_tag/EditBusTag", ReplyAction="http://tempuri.org/Ibus_tag/EditBusTagResponse")]
        bool EditBusTag(Location.TModel.Location.AreaAndDev.Tag Tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/EditPictureInfo", ReplyAction="http://tempuri.org/IPictureService/EditPictureInfoResponse")]
        bool EditPictureInfo(TModel.Location.AreaAndDev.Picture pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/GetPictureInfo", ReplyAction="http://tempuri.org/IPictureService/GetPictureInfoResponse")]
        TModel.Location.AreaAndDev.Picture GetPictureInfo(string strPictureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/GetHomePageNameList", ReplyAction="http://tempuri.org/IPictureService/GetHomePageNameListResponse")]
        string[] GetHomePageNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/GetHomePageByName", ReplyAction="http://tempuri.org/IPictureService/GetHomePageByNameResponse")]
        byte[] GetHomePageByName(string strPictureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaService/GetAreaStatistics", ReplyAction="http://tempuri.org/IAreaService/GetAreaStatisticsResponse")]
        TModel.Location.AreaAndDev.AreaStatistics GetAreaStatistics(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaService/GetAreaById", ReplyAction="http://tempuri.org/IAreaService/GetAreaByIdResponse")]
        WCFServiceForWPF.LocationServices.Area GetAreaById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInitDbService/InitKksTable", ReplyAction="http://tempuri.org/IInitDbService/InitKksTableResponse")]
        void InitKksTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardRoleService/GetCardRoleList", ReplyAction="http://tempuri.org/ICardRoleService/GetCardRoleListResponse")]
        WCFServiceForWPF.LocationServices.CardRole[] GetCardRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardRoleService/GetCardRole", ReplyAction="http://tempuri.org/ICardRoleService/GetCardRoleResponse")]
        WCFServiceForWPF.LocationServices.CardRole GetCardRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardRoleService/AddCardRole", ReplyAction="http://tempuri.org/ICardRoleService/AddCardRoleResponse")]
        int AddCardRole(WCFServiceForWPF.LocationServices.CardRole p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardRoleService/EditCardRole", ReplyAction="http://tempuri.org/ICardRoleService/EditCardRoleResponse")]
        bool EditCardRole(WCFServiceForWPF.LocationServices.CardRole p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardRoleService/DeleteCardRole", ReplyAction="http://tempuri.org/ICardRoleService/DeleteCardRoleResponse")]
        bool DeleteCardRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/GetCardRoleAccessAreas", ReplyAction="http://tempuri.org/IAuthorizationService/GetCardRoleAccessAreasResponse")]
        int[] GetCardRoleAccessAreas(int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/SetCardRoleAccessAreas", ReplyAction="http://tempuri.org/IAuthorizationService/SetCardRoleAccessAreasResponse")]
        bool SetCardRoleAccessAreas(int role, int[] areaIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICameraAlarmService/GetAllCameraAlarms", ReplyAction="http://tempuri.org/ICameraAlarmService/GetAllCameraAlarmsResponse")]
        WCFServiceForWPF.LocationServices.CameraAlarmInfo[] GetAllCameraAlarms(bool merge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICameraAlarmService/GetCameraAlarms", ReplyAction="http://tempuri.org/ICameraAlarmService/GetCameraAlarmsResponse")]
        WCFServiceForWPF.LocationServices.CameraAlarmInfo[] GetCameraAlarms(string ip, bool merge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICameraAlarmService/GetCameraAlarm", ReplyAction="http://tempuri.org/ICameraAlarmService/GetCameraAlarmResponse")]
        WCFServiceForWPF.LocationServices.CameraAlarmInfo GetCameraAlarm(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INVSPlayer/StopGetNVSVideo", ReplyAction="http://tempuri.org/INVSPlayer/StopGetNVSVideoResponse")]
        WCFServiceForWPF.LocationServices.DownloadInfo StopGetNVSVideo(WCFServiceForWPF.LocationServices.DownloadInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INVSPlayer/StartGetNVSVideo", ReplyAction="http://tempuri.org/INVSPlayer/StartGetNVSVideoResponse")]
        WCFServiceForWPF.LocationServices.DownloadInfo StartGetNVSVideo(WCFServiceForWPF.LocationServices.DownloadInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INVSPlayer/GetNVSProgress", ReplyAction="http://tempuri.org/INVSPlayer/GetNVSProgressResponse")]
        WCFServiceForWPF.LocationServices.DownloadProgress GetNVSProgress(WCFServiceForWPF.LocationServices.DownloadInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetUnitySetting", ReplyAction="http://tempuri.org/ILocationService/GetUnitySettingResponse")]
        TModel.Models.Settings.UnitySetting GetUnitySetting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/DebugMessage", ReplyAction="http://tempuri.org/ILocationService/DebugMessageResponse")]
        void DebugMessage(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetPoints", ReplyAction="http://tempuri.org/ILocationService/GetPointsResponse")]
        TModel.Location.AreaAndDev.AreaPoints GetPoints(int areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetPointsByPid", ReplyAction="http://tempuri.org/ILocationService/GetPointsByPidResponse")]
        TModel.Location.AreaAndDev.AreaPoints[] GetPointsByPid(int pid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : WCFServiceForWPF.LocationServices.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<WCFServiceForWPF.LocationServices.ILocationService>, WCFServiceForWPF.LocationServices.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Hello(string msg) {
            return base.Channel.Hello(msg);
        }
        
        public Location.TModel.Location.Person.Department[] GetDepartmentList() {
            return base.Channel.GetDepartmentList();
        }
        
        public Location.TModel.Location.Person.Department GetDepartmentTree() {
            return base.Channel.GetDepartmentTree();
        }
        
        public Location.TModel.Location.Person.Department GetDepartment(int id) {
            return base.Channel.GetDepartment(id);
        }
        
        public int AddDepartment(Location.TModel.Location.Person.Department p) {
            return base.Channel.AddDepartment(p);
        }
        
        public bool EditDepartment(Location.TModel.Location.Person.Department p) {
            return base.Channel.EditDepartment(p);
        }
        
        public bool DeleteDepartment(int id) {
            return base.Channel.DeleteDepartment(id);
        }
        
        public Location.TModel.Location.AreaAndDev.Tag GetTag(int id) {
            return base.Channel.GetTag(id);
        }
        
        public Location.TModel.Location.AreaAndDev.Tag[] GetTags() {
            return base.Channel.GetTags();
        }
        
        public int AddTag(Location.TModel.Location.AreaAndDev.Tag tag) {
            return base.Channel.AddTag(tag);
        }
        
        public bool AddTags(Location.TModel.Location.AreaAndDev.Tag[] tags) {
            return base.Channel.AddTags(tags);
        }
        
        public bool DeleteTag(int id) {
            return base.Channel.DeleteTag(id);
        }
        
        public bool DeleteAllTags() {
            return base.Channel.DeleteAllTags();
        }
        
        public bool EditTag(Location.TModel.Location.AreaAndDev.Tag tag) {
            return base.Channel.EditTag(tag);
        }
        
        public bool EditTagById(Location.TModel.Location.AreaAndDev.Tag Tag, System.Nullable<int> id) {
            return base.Channel.EditTagById(Tag, id);
        }
        
        public Location.TModel.Location.Data.TagPosition[] GetRealPositons() {
            return base.Channel.GetRealPositons();
        }
        
        public Location.TModel.Location.Data.TagPosition[] GetRealPositonsByTags(string[] tagCodes) {
            return base.Channel.GetRealPositonsByTags(tagCodes);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositons() {
            return base.Channel.GetHistoryPositons();
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPersonnelID(personnelID, start, end);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPidAndTopoNodeIds(personnelID, topoNodeIds, start, end);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByTime(tagcode, start, end);
        }
        
        public string GetStrs(int n) {
            return base.Channel.GetStrs(n);
        }
        
        public void AddU3DPosition(Location.TModel.LocationHistory.Data.U3DPosition[] pList) {
            base.Channel.AddU3DPosition(pList);
        }
        
        public void AddU3DPositions(Location.TModel.LocationHistory.Data.U3DPosition[] list) {
            base.Channel.AddU3DPositions(list);
        }
        
        public Location.TModel.LocationHistory.Data.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryU3DPositonsByTime(tagcode, start, end);
        }
        
        public Location.TModel.LocationHistory.Data.PositionList[] GetHistoryPositonStatistics(int nFlag, string strName, string strName2, string strName3) {
            return base.Channel.GetHistoryPositonStatistics(nFlag, strName, strName2, strName3);
        }
        
        public Location.TModel.LocationHistory.Data.Pos[] GetHistoryPositonData(int nFlag, string strName, string strName2, string strName3) {
            return base.Channel.GetHistoryPositonData(nFlag, strName, strName2, strName3);
        }
        
        public Location.TModel.Location.AreaAndDev.ObjectAddList_Type[] GetObjectAddList() {
            return base.Channel.GetObjectAddList();
        }
        
        public Location.TModel.Location.AreaAndDev.DevPos[] GetDevPositions() {
            return base.Channel.GetDevPositions();
        }
        
        public bool AddDevPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.AddDevPosInfo(pos);
        }
        
        public bool AddDevPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList) {
            return base.Channel.AddDevPosByList(posList);
        }
        
        public bool ModifyPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.ModifyPosInfo(pos);
        }
        
        public bool ModifyPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList) {
            return base.Channel.ModifyPosByList(posList);
        }
        
        public bool DeletePosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.DeletePosInfo(pos);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetAllDevInfos() {
            return base.Channel.GetAllDevInfos();
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfos(int[] typeList) {
            return base.Channel.GetDevInfos(typeList);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] FindDevInfos(string key) {
            return base.Channel.FindDevInfos(key);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo AddDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.AddDevInfo(devInfo);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] AddDevInfoByList(Location.TModel.Location.AreaAndDev.DevInfo[] devInfoList) {
            return base.Channel.AddDevInfoByList(devInfoList);
        }
        
        public bool ModifyDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.ModifyDevInfo(devInfo);
        }
        
        public bool DeleteDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.DeleteDevInfo(devInfo);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfoByParent(int[] pids) {
            return base.Channel.GetDevInfoByParent(pids);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo GetDevByGUID(string devId) {
            return base.Channel.GetDevByGUID(devId);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo GetDevById(int id) {
            return base.Channel.GetDevById(id);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo GetDevByGameName(string nameName) {
            return base.Channel.GetDevByGameName(nameName);
        }
        
        public bool AddDoorAccessByList(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.AddDoorAccessByList(doorAccessList);
        }
        
        public Location.TModel.Location.AreaAndDev.Dev_DoorAccess AddDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess doorAccess) {
            return base.Channel.AddDoorAccess(doorAccess);
        }
        
        public bool DeleteDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.DeleteDoorAccess(doorAccessList);
        }
        
        public bool ModifyDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.ModifyDoorAccess(doorAccessList);
        }
        
        public Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids) {
            return base.Channel.GetDoorAccessInfoByParent(pids);
        }
        
        public Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetAllDoorAccessInfo() {
            return base.Channel.GetAllDoorAccessInfo();
        }
        
        public bool AddCameraInfoByList(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList) {
            return base.Channel.AddCameraInfoByList(cameraInfoList);
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo AddCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo cameraInfo) {
            return base.Channel.AddCameraInfo(cameraInfo);
        }
        
        public bool DeleteCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList) {
            return base.Channel.DeleteCameraInfo(cameraInfoList);
        }
        
        public bool ModifyCameraInfoByList(TModel.Location.AreaAndDev.Dev_CameraInfo[] cameraInfoList) {
            return base.Channel.ModifyCameraInfoByList(cameraInfoList);
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo ModifyCameraInfo(TModel.Location.AreaAndDev.Dev_CameraInfo camInfo) {
            return base.Channel.ModifyCameraInfo(camInfo);
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo[] GetCameraInfoByParent(int[] pids) {
            return base.Channel.GetCameraInfoByParent(pids);
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo[] GetAllCameraInfo() {
            return base.Channel.GetAllCameraInfo();
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo GetCameraInfoByDevInfo(Location.TModel.Location.AreaAndDev.DevInfo dev) {
            return base.Channel.GetCameraInfoByDevInfo(dev);
        }
        
        public TModel.Location.AreaAndDev.Dev_CameraInfo GetCameraInfoByIp(string ip) {
            return base.Channel.GetCameraInfoByIp(ip);
        }
        
        public TModel.Location.AreaAndDev.Archor[] GetArchors() {
            return base.Channel.GetArchors();
        }
        
        public TModel.Location.AreaAndDev.Archor GetArchor(string id) {
            return base.Channel.GetArchor(id);
        }
        
        public TModel.Location.AreaAndDev.Archor GetArchorByDevId(int devId) {
            return base.Channel.GetArchorByDevId(devId);
        }
        
        public bool EditArchor(TModel.Location.AreaAndDev.Archor Archor, int ParentId) {
            return base.Channel.EditArchor(Archor, ParentId);
        }
        
        public bool AddArchor(TModel.Location.AreaAndDev.Archor archor) {
            return base.Channel.AddArchor(archor);
        }
        
        public bool DeleteArchor(int archorId) {
            return base.Channel.DeleteArchor(archorId);
        }
        
        public TModel.Location.AreaAndDev.NearbyDev[] GetNearbyDev_Currency(int id, float fDis, int nFlag) {
            return base.Channel.GetNearbyDev_Currency(id, fDis, nFlag);
        }
        
        public TModel.Location.AreaAndDev.NearbyDev[] GetNearbyCamera_Alarm(int id, float fDis) {
            return base.Channel.GetNearbyCamera_Alarm(id, fDis);
        }
        
        public TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo[] GetEntranceActionInfoByPerson24Hours(int id) {
            return base.Channel.GetEntranceActionInfoByPerson24Hours(id);
        }
        
        public WCFServiceForWPF.LocationServices.DevModel GetDevClassByDevModel(string devModelName) {
            return base.Channel.GetDevClassByDevModel(devModelName);
        }
        
        public TModel.Location.AreaAndDev.Dev_Monitor GetDevMonitorInfoByKKS(string KKS, bool bFlag) {
            return base.Channel.GetDevMonitorInfoByKKS(KKS, bFlag);
        }
        
        public TModel.Location.Alarm.AlarmStatistics GetDevAlarmStatistics(TModel.FuncArgs.SearchArg arg) {
            return base.Channel.GetDevAlarmStatistics(arg);
        }
        
        public TModel.Location.Alarm.AlarmStatistics GetLocationAlarmStatistics(TModel.FuncArgs.SearchArg arg) {
            return base.Channel.GetLocationAlarmStatistics(arg);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByNodeId(int id) {
            return base.Channel.GetKKSInfoByNodeId(id);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByCode(string code) {
            return base.Channel.GetKKSInfoByCode(code);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode FindKKSInfoByName(string name) {
            return base.Channel.FindKKSInfoByName(name);
        }
        
        public string GetKKSCodeByNodeId(int id) {
            return base.Channel.GetKKSCodeByNodeId(id);
        }
        
        public string FindKKSCodeByName(string name) {
            return base.Channel.FindKKSCodeByName(name);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyList(int view) {
            return base.Channel.GetPhysicalTopologyList(view);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopology(string id, bool getChildren) {
            return base.Channel.GetPhysicalTopology(id, getChildren);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByName(string name) {
            return base.Channel.GetPhysicalTopologyListByName(name);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByPid(string id) {
            return base.Channel.GetPhysicalTopologyListByPid(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTree(int view) {
            return base.Channel.GetPhysicalTopologyTree(view);
        }
        
        public TModel.Location.Nodes.AreaNode GetPhysicalTopologyTreeNode(int view) {
            return base.Channel.GetPhysicalTopologyTreeNode(view);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTreeById(string id) {
            return base.Channel.GetPhysicalTopologyTreeById(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology AddPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item) {
            return base.Channel.AddPhysicalTopology(item);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology EditPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item) {
            return base.Channel.EditPhysicalTopology(item);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology RemovePhysicalTopology(string id) {
            return base.Channel.RemovePhysicalTopology(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetParkMonitorRange() {
            return base.Channel.GetParkMonitorRange();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRange() {
            return base.Channel.GetFloorMonitorRange();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRangeById(int id) {
            return base.Channel.GetFloorMonitorRangeById(id);
        }
        
        public bool EditMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt) {
            return base.Channel.EditMonitorRange(pt);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology AddMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt) {
            return base.Channel.AddMonitorRange(pt);
        }
        
        public bool DeleteMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt) {
            return base.Channel.DeleteMonitorRange(pt);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetSwitchAreas() {
            return base.Channel.GetSwitchAreas();
        }
        
        public bool AddConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.AddConfigArg(config);
        }
        
        public bool EditConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.EditConfigArg(config);
        }
        
        public bool DeleteConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.DeleteConfigArg(config);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArg(int id) {
            return base.Channel.GetConfigArg(id);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] GetConfigArgList() {
            return base.Channel.GetConfigArgList();
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArgByKey(string key) {
            return base.Channel.GetConfigArgByKey(key);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByKey(string key) {
            return base.Channel.FindConfigArgListByKey(key);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByClassify(string key) {
            return base.Channel.FindConfigArgListByClassify(key);
        }
        
        public Location.TModel.Location.TransferOfAxesConfig GetTransferOfAxesConfig() {
            return base.Channel.GetTransferOfAxesConfig();
        }
        
        public bool SetTransferOfAxesConfig(Location.TModel.Location.TransferOfAxesConfig config) {
            return base.Channel.SetTransferOfAxesConfig(config);
        }
        
        public Location.TModel.Location.Person.Personnel[] GetPersonList(bool isFilterByTag) {
            return base.Channel.GetPersonList(isFilterByTag);
        }
        
        public Location.TModel.Location.Person.Personnel[] FindPersonList(string key) {
            return base.Channel.FindPersonList(key);
        }
        
        public Location.TModel.Location.Person.Personnel GetPerson(int id) {
            return base.Channel.GetPerson(id);
        }
        
        public int AddPerson(Location.TModel.Location.Person.Personnel p) {
            return base.Channel.AddPerson(p);
        }
        
        public bool EditPerson(Location.TModel.Location.Person.Personnel p) {
            return base.Channel.EditPerson(p);
        }
        
        public bool DeletePerson(int id) {
            return base.Channel.DeletePerson(id);
        }
        
        public TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Currency(int id, float fDis) {
            return base.Channel.GetNearbyPerson_Currency(id, fDis);
        }
        
        public TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Alarm(int id, float fDis) {
            return base.Channel.GetNearbyPerson_Alarm(id, fDis);
        }
        
        public Location.TModel.Location.Alarm.LocationAlarm[] GetLocationAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg) {
            return base.Channel.GetLocationAlarms(arg);
        }
        
        public TModel.Location.AreaAndDev.DeviceAlarmInformation GetDeviceAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg) {
            return base.Channel.GetDeviceAlarms(arg);
        }
        
        public TModel.BaseData.Page<Location.TModel.Location.Alarm.DeviceAlarm> GetDeviceAlarmsPage(Location.TModel.FuncArgs.AlarmSearchArg arg) {
            return base.Channel.GetDeviceAlarmsPage(arg);
        }
        
        public Location.TModel.Location.AreaAndDev.Post[] GetPostList() {
            return base.Channel.GetPostList();
        }
        
        public Location.TModel.Location.AreaAndDev.Post GetPost(int id) {
            return base.Channel.GetPost(id);
        }
        
        public int AddPost(Location.TModel.Location.AreaAndDev.Post p) {
            return base.Channel.AddPost(p);
        }
        
        public bool EditPost(Location.TModel.Location.AreaAndDev.Post p) {
            return base.Channel.EditPost(p);
        }
        
        public bool DeletePost(int id) {
            return base.Channel.DeletePost(id);
        }
        
        public TModel.BaseData.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end) {
            return base.Channel.GetTicketList(type, start, end);
        }
        
        public TModel.BaseData.Ticket GetTicketDetial(int id, string begin_date, string end_date) {
            return base.Channel.GetTicketDetial(id, begin_date, end_date);
        }
        
        public TModel.LocationHistory.Work.InspectionTrackHistory[] Getinspectionhistorylist(System.DateTime dtBeginTime, System.DateTime dtEndTime, bool bFlag) {
            return base.Channel.Getinspectionhistorylist(dtBeginTime, dtEndTime, bFlag);
        }
        
        public Location.TModel.Location.Person.Department[] GetorgList() {
            return base.Channel.GetorgList();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetZonesList() {
            return base.Channel.GetZonesList();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetSingleZonesInfo(int id, int view) {
            return base.Channel.GetSingleZonesInfo(id, view);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetZoneDevList(int id) {
            return base.Channel.GetZoneDevList(id);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetDeviceList(string types, string code, string name) {
            return base.Channel.GetDeviceList(types, code, name);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo GetSingleDeviceInfo(int id) {
            return base.Channel.GetSingleDeviceInfo(id);
        }
        
        public void GetSingleDeviceActionHistory(int id, string begin_date, string end_date) {
            base.Channel.GetSingleDeviceActionHistory(id, begin_date, end_date);
        }
        
        public TModel.Location.AreaAndDev.EntranceGuardCard[] GetCardList() {
            return base.Channel.GetCardList();
        }
        
        public TModel.LocationHistory.AreaAndDev.EntranceGuardActionInfo[] GetSingleCardActionHistory(int id, string begin_date, string end_date) {
            return base.Channel.GetSingleCardActionHistory(id, begin_date, end_date);
        }
        
        public void GetTicketsList(string type, string begin_date, string end_date) {
            base.Channel.GetTicketsList(type, begin_date, end_date);
        }
        
        public void GetTicketsDetail(int id, string begin_date, string end_date) {
            base.Channel.GetTicketsDetail(id, begin_date, end_date);
        }
        
        public Location.TModel.Location.Alarm.DeviceAlarm[] GeteventsList(System.Nullable<int> src, System.Nullable<int> level, System.Nullable<long> begin_t, System.Nullable<long> end_t) {
            return base.Channel.GeteventsList(src, level, begin_t, end_t);
        }
        
        public TModel.Location.AreaAndDev.DevMonitorNode[] GetSomesisList(string[] strTags) {
            return base.Channel.GetSomesisList(strTags);
        }
        
        public void GetSomeSisHistoryList(string kks, bool compact) {
            base.Channel.GetSomeSisHistoryList(kks, compact);
        }
        
        public void GetSisSamplingHistoryList(string kks) {
            base.Channel.GetSisSamplingHistoryList(kks);
        }
        
        public TModel.Location.Work.InspectionTrack[] Getinspectionlist(System.DateTime dtBeginTime, System.DateTime dtEndTime, bool bFlag) {
            return base.Channel.Getinspectionlist(dtBeginTime, dtEndTime, bFlag);
        }
        
        public TModel.Location.Work.InspectionTrack GetInspectionTrackById(TModel.Location.Work.InspectionTrack trackId) {
            return base.Channel.GetInspectionTrackById(trackId);
        }
        
        public TModel.Location.Work.PatrolPoint[] Getcheckpoints(int InspectionId) {
            return base.Channel.Getcheckpoints(InspectionId);
        }
        
        public TModel.Location.Work.PatrolPointItem[] Getcheckresults(int patrolId) {
            return base.Channel.Getcheckresults(patrolId);
        }
        
        public void Trys(TModel.Location.Work.InspectionTrackList aa) {
            base.Channel.Trys(aa);
        }
        
        public TModel.Location.Work.OperationTicket[] GetOperationTicketList() {
            return base.Channel.GetOperationTicketList();
        }
        
        public TModel.Location.Work.WorkTicket[] GetWorkTicketList() {
            return base.Channel.GetWorkTicketList();
        }
        
        public TModel.Location.Work.MobileInspectionDev[] GetMobileInspectionDevList() {
            return base.Channel.GetMobileInspectionDevList();
        }
        
        public TModel.Location.Work.MobileInspection[] GetMobileInspectionList() {
            return base.Channel.GetMobileInspectionList();
        }
        
        public TModel.Location.Work.PersonnelMobileInspection[] GetPersonnelMobileInspectionList() {
            return base.Channel.GetPersonnelMobileInspectionList();
        }
        
        public TModel.LocationHistory.Work.OperationTicketHistory[] GetOperationTicketHistoryList() {
            return base.Channel.GetOperationTicketHistoryList();
        }
        
        public TModel.LocationHistory.Work.WorkTicketHistory[] GetWorkTicketHistoryList() {
            return base.Channel.GetWorkTicketHistoryList();
        }
        
        public TModel.LocationHistory.Work.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList() {
            return base.Channel.GetPersonnelMobileInspectionHistoryList();
        }
        
        public TModel.Location.Work.InspectionTrack GetInspectionTrack() {
            return base.Channel.GetInspectionTrack();
        }
        
        public TModel.Location.Manage.LoginInfo Login(TModel.Location.Manage.LoginInfo info) {
            return base.Channel.Login(info);
        }
        
        public TModel.Location.Manage.LoginInfo Logout(TModel.Location.Manage.LoginInfo info) {
            return base.Channel.Logout(info);
        }
        
        public TModel.Location.Manage.LoginInfo KeepLive(TModel.Location.Manage.LoginInfo info) {
            return base.Channel.KeepLive(info);
        }
        
        public TModel.Location.Manage.VersionInfo GetVersionInfo() {
            return base.Channel.GetVersionInfo();
        }
        
        public bool EditBusAnchor(TModel.Location.AreaAndDev.Archor archor, int parentId) {
            return base.Channel.EditBusAnchor(archor, parentId);
        }
        
        public bool EditBusTag(Location.TModel.Location.AreaAndDev.Tag Tag) {
            return base.Channel.EditBusTag(Tag);
        }
        
        public bool EditPictureInfo(TModel.Location.AreaAndDev.Picture pc) {
            return base.Channel.EditPictureInfo(pc);
        }
        
        public TModel.Location.AreaAndDev.Picture GetPictureInfo(string strPictureName) {
            return base.Channel.GetPictureInfo(strPictureName);
        }
        
        public string[] GetHomePageNameList() {
            return base.Channel.GetHomePageNameList();
        }
        
        public byte[] GetHomePageByName(string strPictureName) {
            return base.Channel.GetHomePageByName(strPictureName);
        }
        
        public TModel.Location.AreaAndDev.AreaStatistics GetAreaStatistics(int id) {
            return base.Channel.GetAreaStatistics(id);
        }
        
        public WCFServiceForWPF.LocationServices.Area GetAreaById(int id) {
            return base.Channel.GetAreaById(id);
        }
        
        public void InitKksTable() {
            base.Channel.InitKksTable();
        }
        
        public WCFServiceForWPF.LocationServices.CardRole[] GetCardRoleList() {
            return base.Channel.GetCardRoleList();
        }
        
        public WCFServiceForWPF.LocationServices.CardRole GetCardRole(int id) {
            return base.Channel.GetCardRole(id);
        }
        
        public int AddCardRole(WCFServiceForWPF.LocationServices.CardRole p) {
            return base.Channel.AddCardRole(p);
        }
        
        public bool EditCardRole(WCFServiceForWPF.LocationServices.CardRole p) {
            return base.Channel.EditCardRole(p);
        }
        
        public bool DeleteCardRole(int id) {
            return base.Channel.DeleteCardRole(id);
        }
        
        public int[] GetCardRoleAccessAreas(int role) {
            return base.Channel.GetCardRoleAccessAreas(role);
        }
        
        public bool SetCardRoleAccessAreas(int role, int[] areaIds) {
            return base.Channel.SetCardRoleAccessAreas(role, areaIds);
        }
        
        public WCFServiceForWPF.LocationServices.CameraAlarmInfo[] GetAllCameraAlarms(bool merge) {
            return base.Channel.GetAllCameraAlarms(merge);
        }
        
        public WCFServiceForWPF.LocationServices.CameraAlarmInfo[] GetCameraAlarms(string ip, bool merge) {
            return base.Channel.GetCameraAlarms(ip, merge);
        }
        
        public WCFServiceForWPF.LocationServices.CameraAlarmInfo GetCameraAlarm(int id) {
            return base.Channel.GetCameraAlarm(id);
        }
        
        public WCFServiceForWPF.LocationServices.DownloadInfo StopGetNVSVideo(WCFServiceForWPF.LocationServices.DownloadInfo info) {
            return base.Channel.StopGetNVSVideo(info);
        }
        
        public WCFServiceForWPF.LocationServices.DownloadInfo StartGetNVSVideo(WCFServiceForWPF.LocationServices.DownloadInfo info) {
            return base.Channel.StartGetNVSVideo(info);
        }
        
        public WCFServiceForWPF.LocationServices.DownloadProgress GetNVSProgress(WCFServiceForWPF.LocationServices.DownloadInfo info) {
            return base.Channel.GetNVSProgress(info);
        }
        
        public TModel.Models.Settings.UnitySetting GetUnitySetting() {
            return base.Channel.GetUnitySetting();
        }
        
        public void DebugMessage(string msg) {
            base.Channel.DebugMessage(msg);
        }
        
        public TModel.Location.AreaAndDev.AreaPoints GetPoints(int areaId) {
            return base.Channel.GetPoints(areaId);
        }
        
        public TModel.Location.AreaAndDev.AreaPoints[] GetPointsByPid(int pid) {
            return base.Channel.GetPointsByPid(pid);
        }
    }
}
