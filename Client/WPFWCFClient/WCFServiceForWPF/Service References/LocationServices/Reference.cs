//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceForWPF.LocationServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Describe {
            get {
                return this.DescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescribeField, value) != true)) {
                    this.DescribeField = value;
                    this.RaisePropertyChanged("Describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagPosition", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.Data")]
    [System.SerializableAttribute()]
    public partial class TagPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArchorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TopoNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Archors {
            get {
                return this.ArchorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchorsField, value) != true)) {
                    this.ArchorsField = value;
                    this.RaisePropertyChanged("Archors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TopoNodes {
            get {
                return this.TopoNodesField;
            }
            set {
                if ((this.TopoNodesField.Equals(value) != true)) {
                    this.TopoNodesField = value;
                    this.RaisePropertyChanged("TopoNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.LocationHistory.Data")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArchorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonnelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TopoNodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Archors {
            get {
                return this.ArchorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchorsField, value) != true)) {
                    this.ArchorsField = value;
                    this.RaisePropertyChanged("Archors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonnelID {
            get {
                return this.PersonnelIDField;
            }
            set {
                if ((this.PersonnelIDField.Equals(value) != true)) {
                    this.PersonnelIDField = value;
                    this.RaisePropertyChanged("PersonnelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TopoNodeId {
            get {
                return this.TopoNodeIdField;
            }
            set {
                if ((this.TopoNodeIdField.Equals(value) != true)) {
                    this.TopoNodeIdField = value;
                    this.RaisePropertyChanged("TopoNodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="U3DPosition", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.LocationHistory.Data")]
    [System.SerializableAttribute()]
    public partial class U3DPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectAddList_Type", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class ObjectAddList_Type : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.ObjectAddList_ChildType[] childTypeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.ObjectAddList_ChildType[] childTypeList {
            get {
                return this.childTypeListField;
            }
            set {
                if ((object.ReferenceEquals(this.childTypeListField, value) != true)) {
                    this.childTypeListField = value;
                    this.RaisePropertyChanged("childTypeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typeName {
            get {
                return this.typeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.typeNameField, value) != true)) {
                    this.typeNameField = value;
                    this.RaisePropertyChanged("typeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectAddList_ChildType", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class ObjectAddList_ChildType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string childTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.ObjectAddList_Model[] modelListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string childTypeName {
            get {
                return this.childTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.childTypeNameField, value) != true)) {
                    this.childTypeNameField = value;
                    this.RaisePropertyChanged("childTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.ObjectAddList_Model[] modelList {
            get {
                return this.modelListField;
            }
            set {
                if ((object.ReferenceEquals(this.modelListField, value) != true)) {
                    this.modelListField = value;
                    this.RaisePropertyChanged("modelList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectAddList_Model", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class ObjectAddList_Model : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelName {
            get {
                return this.modelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.modelNameField, value) != true)) {
                    this.modelNameField = value;
                    this.RaisePropertyChanged("modelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typeCode {
            get {
                return this.typeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeCodeField, value) != true)) {
                    this.typeCodeField = value;
                    this.RaisePropertyChanged("typeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevPos", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class DevPos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PosZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ScaleZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevID {
            get {
                return this.DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DevIDField, value) != true)) {
                    this.DevIDField = value;
                    this.RaisePropertyChanged("DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosX {
            get {
                return this.PosXField;
            }
            set {
                if ((this.PosXField.Equals(value) != true)) {
                    this.PosXField = value;
                    this.RaisePropertyChanged("PosX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosY {
            get {
                return this.PosYField;
            }
            set {
                if ((this.PosYField.Equals(value) != true)) {
                    this.PosYField = value;
                    this.RaisePropertyChanged("PosY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PosZ {
            get {
                return this.PosZField;
            }
            set {
                if ((this.PosZField.Equals(value) != true)) {
                    this.PosZField = value;
                    this.RaisePropertyChanged("PosZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationX {
            get {
                return this.RotationXField;
            }
            set {
                if ((this.RotationXField.Equals(value) != true)) {
                    this.RotationXField = value;
                    this.RaisePropertyChanged("RotationX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationY {
            get {
                return this.RotationYField;
            }
            set {
                if ((this.RotationYField.Equals(value) != true)) {
                    this.RotationYField = value;
                    this.RaisePropertyChanged("RotationY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RotationZ {
            get {
                return this.RotationZField;
            }
            set {
                if ((this.RotationZField.Equals(value) != true)) {
                    this.RotationZField = value;
                    this.RaisePropertyChanged("RotationZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleX {
            get {
                return this.ScaleXField;
            }
            set {
                if ((this.ScaleXField.Equals(value) != true)) {
                    this.ScaleXField = value;
                    this.RaisePropertyChanged("ScaleX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleY {
            get {
                return this.ScaleYField;
            }
            set {
                if ((this.ScaleYField.Equals(value) != true)) {
                    this.ScaleYField = value;
                    this.RaisePropertyChanged("ScaleY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ScaleZ {
            get {
                return this.ScaleZField;
            }
            set {
                if ((this.ScaleZField.Equals(value) != true)) {
                    this.ScaleZField = value;
                    this.RaisePropertyChanged("ScaleZ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevInfo", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class DevInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Abutment_DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Abutment_DevTypes Abutment_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreateTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KKSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Local_CabinetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModifyTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PlacedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.DevPos PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Abutment_RunStatus RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Abutment_Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abutment_DevID {
            get {
                return this.Abutment_DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Abutment_DevIDField, value) != true)) {
                    this.Abutment_DevIDField = value;
                    this.RaisePropertyChanged("Abutment_DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Abutment_DevTypes Abutment_Type {
            get {
                return this.Abutment_TypeField;
            }
            set {
                if ((this.Abutment_TypeField.Equals(value) != true)) {
                    this.Abutment_TypeField = value;
                    this.RaisePropertyChanged("Abutment_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreateTimeStamp {
            get {
                return this.CreateTimeStampField;
            }
            set {
                if ((this.CreateTimeStampField.Equals(value) != true)) {
                    this.CreateTimeStampField = value;
                    this.RaisePropertyChanged("CreateTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevID {
            get {
                return this.DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DevIDField, value) != true)) {
                    this.DevIDField = value;
                    this.RaisePropertyChanged("DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KKSCode {
            get {
                return this.KKSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KKSCodeField, value) != true)) {
                    this.KKSCodeField = value;
                    this.RaisePropertyChanged("KKSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Local_CabinetID {
            get {
                return this.Local_CabinetIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Local_CabinetIDField, value) != true)) {
                    this.Local_CabinetIDField = value;
                    this.RaisePropertyChanged("Local_CabinetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyTime {
            get {
                return this.ModifyTimeField;
            }
            set {
                if ((this.ModifyTimeField.Equals(value) != true)) {
                    this.ModifyTimeField = value;
                    this.RaisePropertyChanged("ModifyTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModifyTimeStamp {
            get {
                return this.ModifyTimeStampField;
            }
            set {
                if ((this.ModifyTimeStampField.Equals(value) != true)) {
                    this.ModifyTimeStampField = value;
                    this.RaisePropertyChanged("ModifyTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Placed {
            get {
                return this.PlacedField;
            }
            set {
                if ((this.PlacedField.Equals(value) != true)) {
                    this.PlacedField = value;
                    this.RaisePropertyChanged("Placed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.DevPos Pos {
            get {
                return this.PosField;
            }
            set {
                if ((object.ReferenceEquals(this.PosField, value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Abutment_RunStatus RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((this.RunStatusField.Equals(value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Abutment_Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((this.TypeCodeField.Equals(value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abutment_DevTypes", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum Abutment_DevTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        固定设备 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        生产设备 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        摄像头 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        枪机 = 1021,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        球机 = 1022,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        半球 = 1023,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门禁 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        单向 = 1031,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        双向 = 1032,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        消防设备 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        危化品 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定位基站 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        巡检点 = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        停车位 = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        移动设备 = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        一卡通 = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        人员定位终端 = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        移动终端 = 203,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abutment_RunStatus", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum Abutment_RunStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        正常 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        离线 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        报警 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abutment_Status", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum Abutment_Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        正常 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        维修中 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        已报失 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        已作废 = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dev_DoorAccess", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Dev_DoorAccess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.DevInfo DevInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevID {
            get {
                return this.DevIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DevIDField, value) != true)) {
                    this.DevIDField = value;
                    this.RaisePropertyChanged("DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.DevInfo DevInfo {
            get {
                return this.DevInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DevInfoField, value) != true)) {
                    this.DevInfoField = value;
                    this.RaisePropertyChanged("DevInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevInfoId {
            get {
                return this.DevInfoIdField;
            }
            set {
                if ((this.DevInfoIdField.Equals(value) != true)) {
                    this.DevInfoIdField = value;
                    this.RaisePropertyChanged("DevInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorId {
            get {
                return this.DoorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorIdField, value) != true)) {
                    this.DoorIdField = value;
                    this.RaisePropertyChanged("DoorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KKSCode", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class KKSCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesinCode {
            get {
                return this.DesinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DesinCodeField, value) != true)) {
                    this.DesinCodeField = value;
                    this.RaisePropertyChanged("DesinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainType {
            get {
                return this.MainTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MainTypeField, value) != true)) {
                    this.MainTypeField = value;
                    this.RaisePropertyChanged("MainType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serial {
            get {
                return this.SerialField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialField, value) != true)) {
                    this.SerialField = value;
                    this.RaisePropertyChanged("Serial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string System {
            get {
                return this.SystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemField, value) != true)) {
                    this.SystemField = value;
                    this.RaisePropertyChanged("System");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalTopology", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class PhysicalTopology : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.PhysicalTopology[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Bound EditBoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditBoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Bound InitBoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitBoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.DevInfo[] LeafNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.PhysicalTopology ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.TransformM TransfromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransfromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.AreaTypes TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.PhysicalTopology[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Describe {
            get {
                return this.DescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescribeField, value) != true)) {
                    this.DescribeField = value;
                    this.RaisePropertyChanged("Describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Bound EditBound {
            get {
                return this.EditBoundField;
            }
            set {
                if ((object.ReferenceEquals(this.EditBoundField, value) != true)) {
                    this.EditBoundField = value;
                    this.RaisePropertyChanged("EditBound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EditBoundId {
            get {
                return this.EditBoundIdField;
            }
            set {
                if ((this.EditBoundIdField.Equals(value) != true)) {
                    this.EditBoundIdField = value;
                    this.RaisePropertyChanged("EditBoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Bound InitBound {
            get {
                return this.InitBoundField;
            }
            set {
                if ((object.ReferenceEquals(this.InitBoundField, value) != true)) {
                    this.InitBoundField = value;
                    this.RaisePropertyChanged("InitBound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitBoundId {
            get {
                return this.InitBoundIdField;
            }
            set {
                if ((this.InitBoundIdField.Equals(value) != true)) {
                    this.InitBoundIdField = value;
                    this.RaisePropertyChanged("InitBoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KKS {
            get {
                return this.KKSField;
            }
            set {
                if ((object.ReferenceEquals(this.KKSField, value) != true)) {
                    this.KKSField = value;
                    this.RaisePropertyChanged("KKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.DevInfo[] LeafNodes {
            get {
                return this.LeafNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.LeafNodesField, value) != true)) {
                    this.LeafNodesField = value;
                    this.RaisePropertyChanged("LeafNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.PhysicalTopology Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.TransformM Transfrom {
            get {
                return this.TransfromField;
            }
            set {
                if ((object.ReferenceEquals(this.TransfromField, value) != true)) {
                    this.TransfromField = value;
                    this.RaisePropertyChanged("Transfrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransfromId {
            get {
                return this.TransfromIdField;
            }
            set {
                if ((this.TransfromIdField.Equals(value) != true)) {
                    this.TransfromIdField = value;
                    this.RaisePropertyChanged("TransfromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.AreaTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bound", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Bound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRelativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Point[] PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRectangle {
            get {
                return this.IsRectangleField;
            }
            set {
                if ((this.IsRectangleField.Equals(value) != true)) {
                    this.IsRectangleField = value;
                    this.RaisePropertyChanged("IsRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRelative {
            get {
                return this.IsRelativeField;
            }
            set {
                if ((this.IsRelativeField.Equals(value) != true)) {
                    this.IsRelativeField = value;
                    this.RaisePropertyChanged("IsRelative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxX {
            get {
                return this.MaxXField;
            }
            set {
                if ((this.MaxXField.Equals(value) != true)) {
                    this.MaxXField = value;
                    this.RaisePropertyChanged("MaxX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxY {
            get {
                return this.MaxYField;
            }
            set {
                if ((this.MaxYField.Equals(value) != true)) {
                    this.MaxYField = value;
                    this.RaisePropertyChanged("MaxY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxZ {
            get {
                return this.MaxZField;
            }
            set {
                if ((this.MaxZField.Equals(value) != true)) {
                    this.MaxZField = value;
                    this.RaisePropertyChanged("MaxZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinX {
            get {
                return this.MinXField;
            }
            set {
                if ((this.MinXField.Equals(value) != true)) {
                    this.MinXField = value;
                    this.RaisePropertyChanged("MinX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinY {
            get {
                return this.MinYField;
            }
            set {
                if ((this.MinYField.Equals(value) != true)) {
                    this.MinYField = value;
                    this.RaisePropertyChanged("MinY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinZ {
            get {
                return this.MinZField;
            }
            set {
                if ((this.MinZField.Equals(value) != true)) {
                    this.MinZField = value;
                    this.RaisePropertyChanged("MinZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransformM", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class TransformM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCreateAreaByDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnAlarmAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnLocationAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRelativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCreateAreaByData {
            get {
                return this.IsCreateAreaByDataField;
            }
            set {
                if ((this.IsCreateAreaByDataField.Equals(value) != true)) {
                    this.IsCreateAreaByDataField = value;
                    this.RaisePropertyChanged("IsCreateAreaByData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnAlarmArea {
            get {
                return this.IsOnAlarmAreaField;
            }
            set {
                if ((this.IsOnAlarmAreaField.Equals(value) != true)) {
                    this.IsOnAlarmAreaField = value;
                    this.RaisePropertyChanged("IsOnAlarmArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnLocationArea {
            get {
                return this.IsOnLocationAreaField;
            }
            set {
                if ((this.IsOnLocationAreaField.Equals(value) != true)) {
                    this.IsOnLocationAreaField = value;
                    this.RaisePropertyChanged("IsOnLocationArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRelative {
            get {
                return this.IsRelativeField;
            }
            set {
                if ((this.IsRelativeField.Equals(value) != true)) {
                    this.IsRelativeField = value;
                    this.RaisePropertyChanged("IsRelative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RX {
            get {
                return this.RXField;
            }
            set {
                if ((this.RXField.Equals(value) != true)) {
                    this.RXField = value;
                    this.RaisePropertyChanged("RX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RY {
            get {
                return this.RYField;
            }
            set {
                if ((this.RYField.Equals(value) != true)) {
                    this.RYField = value;
                    this.RaisePropertyChanged("RY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RZ {
            get {
                return this.RZField;
            }
            set {
                if ((this.RZField.Equals(value) != true)) {
                    this.RZField = value;
                    this.RaisePropertyChanged("RZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SX {
            get {
                return this.SXField;
            }
            set {
                if ((this.SXField.Equals(value) != true)) {
                    this.SXField = value;
                    this.RaisePropertyChanged("SX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SY {
            get {
                return this.SYField;
            }
            set {
                if ((this.SYField.Equals(value) != true)) {
                    this.SYField = value;
                    this.RaisePropertyChanged("SY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SZ {
            get {
                return this.SZField;
            }
            set {
                if ((this.SZField.Equals(value) != true)) {
                    this.SZField = value;
                    this.RaisePropertyChanged("SZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaTypes", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum AreaTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        区域 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        分组 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        大楼 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        楼层 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        机房 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设备 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        部件 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        范围 = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Bound BoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Bound Bound {
            get {
                return this.BoundField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundField, value) != true)) {
                    this.BoundField = value;
                    this.RaisePropertyChanged("Bound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoundId {
            get {
                return this.BoundIdField;
            }
            set {
                if ((this.BoundIdField.Equals(value) != true)) {
                    this.BoundIdField = value;
                    this.RaisePropertyChanged("BoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigArg", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class ConfigArg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Classify {
            get {
                return this.ClassifyField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassifyField, value) != true)) {
                    this.ClassifyField = value;
                    this.RaisePropertyChanged("Classify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Describe {
            get {
                return this.DescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescribeField, value) != true)) {
                    this.DescribeField = value;
                    this.RaisePropertyChanged("Describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferOfAxesConfig", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location")]
    [System.SerializableAttribute()]
    public partial class TransferOfAxesConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.ConfigArg DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.ConfigArg ScaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.ConfigArg ZeroField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.ConfigArg Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.ConfigArg Scale {
            get {
                return this.ScaleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleField, value) != true)) {
                    this.ScaleField = value;
                    this.RaisePropertyChanged("Scale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.ConfigArg Zero {
            get {
                return this.ZeroField;
            }
            set {
                if ((object.ReferenceEquals(this.ZeroField, value) != true)) {
                    this.ZeroField = value;
                    this.RaisePropertyChanged("Zero");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personnel", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.Person")]
    [System.SerializableAttribute()]
    public partial class Personnel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Department ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Tag TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthTimeStamp {
            get {
                return this.BirthTimeStampField;
            }
            set {
                if ((this.BirthTimeStampField.Equals(value) != true)) {
                    this.BirthTimeStampField = value;
                    this.RaisePropertyChanged("BirthTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nation {
            get {
                return this.NationField;
            }
            set {
                if ((object.ReferenceEquals(this.NationField, value) != true)) {
                    this.NationField = value;
                    this.RaisePropertyChanged("Nation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Department Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pst {
            get {
                return this.PstField;
            }
            set {
                if ((object.ReferenceEquals(this.PstField, value) != true)) {
                    this.PstField = value;
                    this.RaisePropertyChanged("Pst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Tag Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((this.TagIdField.Equals(value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkNumber {
            get {
                return this.WorkNumberField;
            }
            set {
                if ((this.WorkNumberField.Equals(value) != true)) {
                    this.WorkNumberField = value;
                    this.RaisePropertyChanged("WorkNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.Person")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Department[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Personnel[] LeafNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Department[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Personnel[] LeafNodes {
            get {
                return this.LeafNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.LeafNodesField, value) != true)) {
                    this.LeafNodesField = value;
                    this.RaisePropertyChanged("LeafNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowOrder {
            get {
                return this.ShowOrderField;
            }
            set {
                if ((this.ShowOrderField.Equals(value) != true)) {
                    this.ShowOrderField = value;
                    this.RaisePropertyChanged("ShowOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmSearchArg", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.FuncArgs")]
    [System.SerializableAttribute()]
    public partial class AlarmSearchArg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationAlarm", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.Alarm")]
    [System.SerializableAttribute()]
    public partial class LocationAlarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.LocationAlarmLevel AlarmLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AlarmTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.LocationAlarmType AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HandleTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HandleTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.LocationAlarmHandleType HandleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Personnel PersonnelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonnelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Tag TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.LocationAlarmLevel AlarmLevel {
            get {
                return this.AlarmLevelField;
            }
            set {
                if ((this.AlarmLevelField.Equals(value) != true)) {
                    this.AlarmLevelField = value;
                    this.RaisePropertyChanged("AlarmLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AlarmTimeStamp {
            get {
                return this.AlarmTimeStampField;
            }
            set {
                if ((this.AlarmTimeStampField.Equals(value) != true)) {
                    this.AlarmTimeStampField = value;
                    this.RaisePropertyChanged("AlarmTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.LocationAlarmType AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HandleTime {
            get {
                return this.HandleTimeField;
            }
            set {
                if ((this.HandleTimeField.Equals(value) != true)) {
                    this.HandleTimeField = value;
                    this.RaisePropertyChanged("HandleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HandleTimeStamp {
            get {
                return this.HandleTimeStampField;
            }
            set {
                if ((this.HandleTimeStampField.Equals(value) != true)) {
                    this.HandleTimeStampField = value;
                    this.RaisePropertyChanged("HandleTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.LocationAlarmHandleType HandleType {
            get {
                return this.HandleTypeField;
            }
            set {
                if ((this.HandleTypeField.Equals(value) != true)) {
                    this.HandleTypeField = value;
                    this.RaisePropertyChanged("HandleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handler {
            get {
                return this.HandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.HandlerField, value) != true)) {
                    this.HandlerField = value;
                    this.RaisePropertyChanged("Handler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Personnel Personnel {
            get {
                return this.PersonnelField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnelField, value) != true)) {
                    this.PersonnelField = value;
                    this.RaisePropertyChanged("Personnel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonnelId {
            get {
                return this.PersonnelIdField;
            }
            set {
                if ((this.PersonnelIdField.Equals(value) != true)) {
                    this.PersonnelIdField = value;
                    this.RaisePropertyChanged("PersonnelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Tag Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((this.TagIdField.Equals(value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationAlarmLevel", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum LocationAlarmLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        正常 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        一级告警 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        二级告警 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        三级告警 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        四级告警 = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationAlarmType", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum LocationAlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        区域告警 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        消失告警 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        低电告警 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        传感器告警 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        重启告警 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        非法拆卸 = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationAlarmHandleType", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum LocationAlarmHandleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        误报 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        忽略 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceAlarm", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.Alarm")]
    [System.SerializableAttribute()]
    public partial class DeviceAlarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AlarmTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.DevInfo DevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Device_descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Abutment_DevAlarmLevel LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.Abutment_DevAlarmSrc SrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AlarmTimeStamp {
            get {
                return this.AlarmTimeStampField;
            }
            set {
                if ((this.AlarmTimeStampField.Equals(value) != true)) {
                    this.AlarmTimeStampField = value;
                    this.RaisePropertyChanged("AlarmTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.DevInfo Dev {
            get {
                return this.DevField;
            }
            set {
                if ((object.ReferenceEquals(this.DevField, value) != true)) {
                    this.DevField = value;
                    this.RaisePropertyChanged("Dev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevId {
            get {
                return this.DevIdField;
            }
            set {
                if ((this.DevIdField.Equals(value) != true)) {
                    this.DevIdField = value;
                    this.RaisePropertyChanged("DevId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device_desc {
            get {
                return this.Device_descField;
            }
            set {
                if ((object.ReferenceEquals(this.Device_descField, value) != true)) {
                    this.Device_descField = value;
                    this.RaisePropertyChanged("Device_desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Abutment_DevAlarmLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelName {
            get {
                return this.LevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelNameField, value) != true)) {
                    this.LevelNameField = value;
                    this.RaisePropertyChanged("LevelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.Abutment_DevAlarmSrc Src {
            get {
                return this.SrcField;
            }
            set {
                if ((this.SrcField.Equals(value) != true)) {
                    this.SrcField = value;
                    this.RaisePropertyChanged("Src");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abutment_DevAlarmLevel", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum Abutment_DevAlarmLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未定 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        低 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        高 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abutment_DevAlarmSrc", Namespace="http://schemas.datacontract.org/2004/07/DbModel.Tools")]
    public enum Abutment_DevAlarmSrc : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        视频监控 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门禁 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        消防 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIS = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        人员定位 = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/Location.TModel.Location.AreaAndDev")]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/TModel.BaseData")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkerIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkerIds {
            get {
                return this.WorkerIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerIdsField, value) != true)) {
                    this.WorkerIdsField = value;
                    this.RaisePropertyChanged("WorkerIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneIds {
            get {
                return this.ZoneIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneIdsField, value) != true)) {
                    this.ZoneIdsField = value;
                    this.RaisePropertyChanged("ZoneIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationTicket", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class OperationTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DutyOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuardianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperationEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.OperationItem[] OperationItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperationStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dispatch {
            get {
                return this.DispatchField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchField, value) != true)) {
                    this.DispatchField = value;
                    this.RaisePropertyChanged("Dispatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DutyOfficer {
            get {
                return this.DutyOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.DutyOfficerField, value) != true)) {
                    this.DutyOfficerField = value;
                    this.RaisePropertyChanged("DutyOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guardian {
            get {
                return this.GuardianField;
            }
            set {
                if ((object.ReferenceEquals(this.GuardianField, value) != true)) {
                    this.GuardianField = value;
                    this.RaisePropertyChanged("Guardian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationEndTime {
            get {
                return this.OperationEndTimeField;
            }
            set {
                if ((this.OperationEndTimeField.Equals(value) != true)) {
                    this.OperationEndTimeField = value;
                    this.RaisePropertyChanged("OperationEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.OperationItem[] OperationItems {
            get {
                return this.OperationItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationItemsField, value) != true)) {
                    this.OperationItemsField = value;
                    this.RaisePropertyChanged("OperationItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationStartTime {
            get {
                return this.OperationStartTimeField;
            }
            set {
                if ((this.OperationStartTimeField.Equals(value) != true)) {
                    this.OperationStartTimeField = value;
                    this.RaisePropertyChanged("OperationStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationTask {
            get {
                return this.OperationTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationTaskField, value) != true)) {
                    this.OperationTaskField = value;
                    this.RaisePropertyChanged("OperationTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationItem", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class OperationItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Mark {
            get {
                return this.MarkField;
            }
            set {
                if ((this.MarkField.Equals(value) != true)) {
                    this.MarkField = value;
                    this.RaisePropertyChanged("Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationTime {
            get {
                return this.OperationTimeField;
            }
            set {
                if ((this.OperationTimeField.Equals(value) != true)) {
                    this.OperationTimeField = value;
                    this.RaisePropertyChanged("OperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTicket", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class WorkTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Abutment_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeOfPlannedWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeadOfWorkClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LssuerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonInChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.SafetyMeasures[] SafetyMeasuressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeOfPlannedWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPlaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Abutment_Id {
            get {
                return this.Abutment_IdField;
            }
            set {
                if ((this.Abutment_IdField.Equals(value) != true)) {
                    this.Abutment_IdField = value;
                    this.RaisePropertyChanged("Abutment_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTimeOfPlannedWork {
            get {
                return this.EndTimeOfPlannedWorkField;
            }
            set {
                if ((this.EndTimeOfPlannedWorkField.Equals(value) != true)) {
                    this.EndTimeOfPlannedWorkField = value;
                    this.RaisePropertyChanged("EndTimeOfPlannedWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeadOfWorkClass {
            get {
                return this.HeadOfWorkClassField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadOfWorkClassField, value) != true)) {
                    this.HeadOfWorkClassField = value;
                    this.RaisePropertyChanged("HeadOfWorkClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobContent {
            get {
                return this.JobContentField;
            }
            set {
                if ((object.ReferenceEquals(this.JobContentField, value) != true)) {
                    this.JobContentField = value;
                    this.RaisePropertyChanged("JobContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Licensor {
            get {
                return this.LicensorField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensorField, value) != true)) {
                    this.LicensorField = value;
                    this.RaisePropertyChanged("Licensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lssuer {
            get {
                return this.LssuerField;
            }
            set {
                if ((object.ReferenceEquals(this.LssuerField, value) != true)) {
                    this.LssuerField = value;
                    this.RaisePropertyChanged("Lssuer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonInCharge {
            get {
                return this.PersonInChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonInChargeField, value) != true)) {
                    this.PersonInChargeField = value;
                    this.RaisePropertyChanged("PersonInCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.SafetyMeasures[] SafetyMeasuress {
            get {
                return this.SafetyMeasuressField;
            }
            set {
                if ((object.ReferenceEquals(this.SafetyMeasuressField, value) != true)) {
                    this.SafetyMeasuressField = value;
                    this.RaisePropertyChanged("SafetyMeasuress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTimeOfPlannedWork {
            get {
                return this.StartTimeOfPlannedWorkField;
            }
            set {
                if ((this.StartTimeOfPlannedWorkField.Equals(value) != true)) {
                    this.StartTimeOfPlannedWorkField = value;
                    this.RaisePropertyChanged("StartTimeOfPlannedWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkCondition {
            get {
                return this.WorkConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkConditionField, value) != true)) {
                    this.WorkConditionField = value;
                    this.RaisePropertyChanged("WorkCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPlace {
            get {
                return this.WorkPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPlaceField, value) != true)) {
                    this.WorkPlaceField = value;
                    this.RaisePropertyChanged("WorkPlace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SafetyMeasures", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class SafetyMeasures : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensorContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LssuerContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkTicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicensorContent {
            get {
                return this.LicensorContentField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensorContentField, value) != true)) {
                    this.LicensorContentField = value;
                    this.RaisePropertyChanged("LicensorContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LssuerContent {
            get {
                return this.LssuerContentField;
            }
            set {
                if ((object.ReferenceEquals(this.LssuerContentField, value) != true)) {
                    this.LssuerContentField = value;
                    this.RaisePropertyChanged("LssuerContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int No {
            get {
                return this.NoField;
            }
            set {
                if ((this.NoField.Equals(value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkTicketId {
            get {
                return this.WorkTicketIdField;
            }
            set {
                if ((this.WorkTicketIdField.Equals(value) != true)) {
                    this.WorkTicketIdField = value;
                    this.RaisePropertyChanged("WorkTicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileInspectionDev", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class MobileInspectionDev : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.MobileInspectionContent[] MobileInspectionContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.MobileInspectionContent[] MobileInspectionContents {
            get {
                return this.MobileInspectionContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileInspectionContentsField, value) != true)) {
                    this.MobileInspectionContentsField = value;
                    this.RaisePropertyChanged("MobileInspectionContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileInspectionContent", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class MobileInspectionContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nOrder {
            get {
                return this.nOrderField;
            }
            set {
                if ((this.nOrderField.Equals(value) != true)) {
                    this.nOrderField = value;
                    this.RaisePropertyChanged("nOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileInspection", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class MobileInspection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.MobileInspectionItem[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.MobileInspectionItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nOrder {
            get {
                return this.nOrderField;
            }
            set {
                if ((this.nOrderField.Equals(value) != true)) {
                    this.nOrderField = value;
                    this.RaisePropertyChanged("nOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileInspectionItem", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class MobileInspectionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevId {
            get {
                return this.DevIdField;
            }
            set {
                if ((this.DevIdField.Equals(value) != true)) {
                    this.DevIdField = value;
                    this.RaisePropertyChanged("DevId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevName {
            get {
                return this.DevNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevNameField, value) != true)) {
                    this.DevNameField = value;
                    this.RaisePropertyChanged("DevName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nOrder {
            get {
                return this.nOrderField;
            }
            set {
                if ((this.nOrderField.Equals(value) != true)) {
                    this.nOrderField = value;
                    this.RaisePropertyChanged("nOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonnelMobileInspection", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class PersonnelMobileInspection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MobileInspectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileInspectionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonnelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonnelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bOverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.PersonnelMobileInspectionItem[] listField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MobileInspectionId {
            get {
                return this.MobileInspectionIdField;
            }
            set {
                if ((this.MobileInspectionIdField.Equals(value) != true)) {
                    this.MobileInspectionIdField = value;
                    this.RaisePropertyChanged("MobileInspectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileInspectionName {
            get {
                return this.MobileInspectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileInspectionNameField, value) != true)) {
                    this.MobileInspectionNameField = value;
                    this.RaisePropertyChanged("MobileInspectionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonnelId {
            get {
                return this.PersonnelIdField;
            }
            set {
                if ((this.PersonnelIdField.Equals(value) != true)) {
                    this.PersonnelIdField = value;
                    this.RaisePropertyChanged("PersonnelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonnelName {
            get {
                return this.PersonnelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnelNameField, value) != true)) {
                    this.PersonnelNameField = value;
                    this.RaisePropertyChanged("PersonnelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanEndTime {
            get {
                return this.PlanEndTimeField;
            }
            set {
                if ((this.PlanEndTimeField.Equals(value) != true)) {
                    this.PlanEndTimeField = value;
                    this.RaisePropertyChanged("PlanEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanStartTime {
            get {
                return this.PlanStartTimeField;
            }
            set {
                if ((this.PlanStartTimeField.Equals(value) != true)) {
                    this.PlanStartTimeField = value;
                    this.RaisePropertyChanged("PlanStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bOverTime {
            get {
                return this.bOverTimeField;
            }
            set {
                if ((this.bOverTimeField.Equals(value) != true)) {
                    this.bOverTimeField = value;
                    this.RaisePropertyChanged("bOverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.PersonnelMobileInspectionItem[] list {
            get {
                return this.listField;
            }
            set {
                if ((object.ReferenceEquals(this.listField, value) != true)) {
                    this.listField = value;
                    this.RaisePropertyChanged("list");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonnelMobileInspectionItem", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Work")]
    [System.SerializableAttribute()]
    public partial class PersonnelMobileInspectionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PunchTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevId {
            get {
                return this.DevIdField;
            }
            set {
                if ((this.DevIdField.Equals(value) != true)) {
                    this.DevIdField = value;
                    this.RaisePropertyChanged("DevId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevName {
            get {
                return this.DevNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevNameField, value) != true)) {
                    this.DevNameField = value;
                    this.RaisePropertyChanged("DevName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PunchTime {
            get {
                return this.PunchTimeField;
            }
            set {
                if ((this.PunchTimeField.Equals(value) != true)) {
                    this.PunchTimeField = value;
                    this.RaisePropertyChanged("PunchTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nOrder {
            get {
                return this.nOrderField;
            }
            set {
                if ((this.nOrderField.Equals(value) != true)) {
                    this.nOrderField = value;
                    this.RaisePropertyChanged("nOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationItemHistory", Namespace="http://schemas.datacontract.org/2004/07/TModel.LocationHistory.Work")]
    [System.SerializableAttribute()]
    public partial class OperationItemHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Mark {
            get {
                return this.MarkField;
            }
            set {
                if ((this.MarkField.Equals(value) != true)) {
                    this.MarkField = value;
                    this.RaisePropertyChanged("Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationTime {
            get {
                return this.OperationTimeField;
            }
            set {
                if ((this.OperationTimeField.Equals(value) != true)) {
                    this.OperationTimeField = value;
                    this.RaisePropertyChanged("OperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTicketHistory", Namespace="http://schemas.datacontract.org/2004/07/TModel.LocationHistory.Work")]
    [System.SerializableAttribute()]
    public partial class WorkTicketHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeOfPlannedWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeadOfWorkClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LssuerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonInChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.SafetyMeasuresHistory[] SafetyMeasuressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeOfPlannedWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPlaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTimeOfPlannedWork {
            get {
                return this.EndTimeOfPlannedWorkField;
            }
            set {
                if ((this.EndTimeOfPlannedWorkField.Equals(value) != true)) {
                    this.EndTimeOfPlannedWorkField = value;
                    this.RaisePropertyChanged("EndTimeOfPlannedWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeadOfWorkClass {
            get {
                return this.HeadOfWorkClassField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadOfWorkClassField, value) != true)) {
                    this.HeadOfWorkClassField = value;
                    this.RaisePropertyChanged("HeadOfWorkClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobContent {
            get {
                return this.JobContentField;
            }
            set {
                if ((object.ReferenceEquals(this.JobContentField, value) != true)) {
                    this.JobContentField = value;
                    this.RaisePropertyChanged("JobContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Licensor {
            get {
                return this.LicensorField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensorField, value) != true)) {
                    this.LicensorField = value;
                    this.RaisePropertyChanged("Licensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lssuer {
            get {
                return this.LssuerField;
            }
            set {
                if ((object.ReferenceEquals(this.LssuerField, value) != true)) {
                    this.LssuerField = value;
                    this.RaisePropertyChanged("Lssuer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonInCharge {
            get {
                return this.PersonInChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonInChargeField, value) != true)) {
                    this.PersonInChargeField = value;
                    this.RaisePropertyChanged("PersonInCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.SafetyMeasuresHistory[] SafetyMeasuress {
            get {
                return this.SafetyMeasuressField;
            }
            set {
                if ((object.ReferenceEquals(this.SafetyMeasuressField, value) != true)) {
                    this.SafetyMeasuressField = value;
                    this.RaisePropertyChanged("SafetyMeasuress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTimeOfPlannedWork {
            get {
                return this.StartTimeOfPlannedWorkField;
            }
            set {
                if ((this.StartTimeOfPlannedWorkField.Equals(value) != true)) {
                    this.StartTimeOfPlannedWorkField = value;
                    this.RaisePropertyChanged("StartTimeOfPlannedWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkCondition {
            get {
                return this.WorkConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkConditionField, value) != true)) {
                    this.WorkConditionField = value;
                    this.RaisePropertyChanged("WorkCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPlace {
            get {
                return this.WorkPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPlaceField, value) != true)) {
                    this.WorkPlaceField = value;
                    this.RaisePropertyChanged("WorkPlace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SafetyMeasuresHistory", Namespace="http://schemas.datacontract.org/2004/07/TModel.LocationHistory.Work")]
    [System.SerializableAttribute()]
    public partial class SafetyMeasuresHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensorContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LssuerContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkTicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicensorContent {
            get {
                return this.LicensorContentField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensorContentField, value) != true)) {
                    this.LicensorContentField = value;
                    this.RaisePropertyChanged("LicensorContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LssuerContent {
            get {
                return this.LssuerContentField;
            }
            set {
                if ((object.ReferenceEquals(this.LssuerContentField, value) != true)) {
                    this.LssuerContentField = value;
                    this.RaisePropertyChanged("LssuerContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int No {
            get {
                return this.NoField;
            }
            set {
                if ((this.NoField.Equals(value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkTicketId {
            get {
                return this.WorkTicketIdField;
            }
            set {
                if ((this.WorkTicketIdField.Equals(value) != true)) {
                    this.WorkTicketIdField = value;
                    this.RaisePropertyChanged("WorkTicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonnelMobileInspectionHistory", Namespace="http://schemas.datacontract.org/2004/07/TModel.LocationHistory.Work")]
    [System.SerializableAttribute()]
    public partial class PersonnelMobileInspectionHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MobileInspectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileInspectionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonnelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonnelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bOverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceForWPF.LocationServices.PersonnelMobileInspectionItemHistory[] listField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MobileInspectionId {
            get {
                return this.MobileInspectionIdField;
            }
            set {
                if ((this.MobileInspectionIdField.Equals(value) != true)) {
                    this.MobileInspectionIdField = value;
                    this.RaisePropertyChanged("MobileInspectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileInspectionName {
            get {
                return this.MobileInspectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileInspectionNameField, value) != true)) {
                    this.MobileInspectionNameField = value;
                    this.RaisePropertyChanged("MobileInspectionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonnelId {
            get {
                return this.PersonnelIdField;
            }
            set {
                if ((this.PersonnelIdField.Equals(value) != true)) {
                    this.PersonnelIdField = value;
                    this.RaisePropertyChanged("PersonnelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonnelName {
            get {
                return this.PersonnelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnelNameField, value) != true)) {
                    this.PersonnelNameField = value;
                    this.RaisePropertyChanged("PersonnelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanEndTime {
            get {
                return this.PlanEndTimeField;
            }
            set {
                if ((this.PlanEndTimeField.Equals(value) != true)) {
                    this.PlanEndTimeField = value;
                    this.RaisePropertyChanged("PlanEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanStartTime {
            get {
                return this.PlanStartTimeField;
            }
            set {
                if ((this.PlanStartTimeField.Equals(value) != true)) {
                    this.PlanStartTimeField = value;
                    this.RaisePropertyChanged("PlanStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bOverTime {
            get {
                return this.bOverTimeField;
            }
            set {
                if ((this.bOverTimeField.Equals(value) != true)) {
                    this.bOverTimeField = value;
                    this.RaisePropertyChanged("bOverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFServiceForWPF.LocationServices.PersonnelMobileInspectionItemHistory[] list {
            get {
                return this.listField;
            }
            set {
                if ((object.ReferenceEquals(this.listField, value) != true)) {
                    this.listField = value;
                    this.RaisePropertyChanged("list");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonnelMobileInspectionItemHistory", Namespace="http://schemas.datacontract.org/2004/07/TModel.LocationHistory.Work")]
    [System.SerializableAttribute()]
    public partial class PersonnelMobileInspectionItemHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PunchTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevId {
            get {
                return this.DevIdField;
            }
            set {
                if ((this.DevIdField.Equals(value) != true)) {
                    this.DevIdField = value;
                    this.RaisePropertyChanged("DevId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevName {
            get {
                return this.DevNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevNameField, value) != true)) {
                    this.DevNameField = value;
                    this.RaisePropertyChanged("DevName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PunchTime {
            get {
                return this.PunchTimeField;
            }
            set {
                if ((this.PunchTimeField.Equals(value) != true)) {
                    this.PunchTimeField = value;
                    this.RaisePropertyChanged("PunchTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nOrder {
            get {
                return this.nOrderField;
            }
            set {
                if ((this.nOrderField.Equals(value) != true)) {
                    this.nOrderField = value;
                    this.RaisePropertyChanged("nOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://schemas.datacontract.org/2004/07/TModel.Location.Manage")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authority {
            get {
                return this.AuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityField, value) != true)) {
                    this.AuthorityField = value;
                    this.RaisePropertyChanged("Authority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Session {
            get {
                return this.SessionField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionField, value) != true)) {
                    this.SessionField = value;
                    this.RaisePropertyChanged("Session");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServices.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTags", ReplyAction="http://tempuri.org/ITagService/GetTagsResponse")]
        WCFServiceForWPF.LocationServices.Tag[] GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTags", ReplyAction="http://tempuri.org/ITagService/GetTagsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Tag[]> GetTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTags", ReplyAction="http://tempuri.org/ITagService/AddTagsResponse")]
        bool AddTags(WCFServiceForWPF.LocationServices.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTags", ReplyAction="http://tempuri.org/ITagService/AddTagsResponse")]
        System.Threading.Tasks.Task<bool> AddTagsAsync(WCFServiceForWPF.LocationServices.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteTag", ReplyAction="http://tempuri.org/ITagService/DeleteTagResponse")]
        bool DeleteTag(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteTag", ReplyAction="http://tempuri.org/ITagService/DeleteTagResponse")]
        System.Threading.Tasks.Task<bool> DeleteTagAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteAllTags", ReplyAction="http://tempuri.org/ITagService/DeleteAllTagsResponse")]
        bool DeleteAllTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteAllTags", ReplyAction="http://tempuri.org/ITagService/DeleteAllTagsResponse")]
        System.Threading.Tasks.Task<bool> DeleteAllTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositons", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsResponse")]
        WCFServiceForWPF.LocationServices.TagPosition[] GetRealPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositons", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TagPosition[]> GetRealPositonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositonsByTags", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsByTagsResponse")]
        WCFServiceForWPF.LocationServices.TagPosition[] GetRealPositonsByTags(string[] tagCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositonsByTags", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsByTagsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TagPosition[]> GetRealPositonsByTagsAsync(string[] tagCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositons", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsResponse")]
        WCFServiceForWPF.LocationServices.Position[] GetHistoryPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositons", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelID", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelIDResponse")]
        WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelID", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelIDResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByPersonnelIDAsync(int personnelID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIds", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIdsResponse" +
            "")]
        WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIds", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIdsResponse" +
            "")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByPidAndTopoNodeIdsAsync(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByTimeResponse")]
        WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByTimeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByTimeAsync(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetStrs", ReplyAction="http://tempuri.org/IPositionService/GetStrsResponse")]
        string GetStrs(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetStrs", ReplyAction="http://tempuri.org/IPositionService/GetStrsResponse")]
        System.Threading.Tasks.Task<string> GetStrsAsync(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPosition", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionResponse")]
        void AddU3DPosition(WCFServiceForWPF.LocationServices.U3DPosition[] pList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPosition", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionResponse")]
        System.Threading.Tasks.Task AddU3DPositionAsync(WCFServiceForWPF.LocationServices.U3DPosition[] pList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPositions", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionsResponse")]
        void AddU3DPositions(WCFServiceForWPF.LocationServices.U3DPosition[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPositions", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionsResponse")]
        System.Threading.Tasks.Task AddU3DPositionsAsync(WCFServiceForWPF.LocationServices.U3DPosition[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTimeResponse")]
        WCFServiceForWPF.LocationServices.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTimeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.U3DPosition[]> GetHistoryU3DPositonsByTimeAsync(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetObjectAddList", ReplyAction="http://tempuri.org/IDevService/GetObjectAddListResponse")]
        WCFServiceForWPF.LocationServices.ObjectAddList_Type[] GetObjectAddList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetObjectAddList", ReplyAction="http://tempuri.org/IDevService/GetObjectAddListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ObjectAddList_Type[]> GetObjectAddListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevPositions", ReplyAction="http://tempuri.org/IDevService/GetDevPositionsResponse")]
        WCFServiceForWPF.LocationServices.DevPos[] GetDevPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevPositions", ReplyAction="http://tempuri.org/IDevService/GetDevPositionsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevPos[]> GetDevPositionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosInfo", ReplyAction="http://tempuri.org/IDevService/AddDevPosInfoResponse")]
        bool AddDevPosInfo(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosInfo", ReplyAction="http://tempuri.org/IDevService/AddDevPosInfoResponse")]
        System.Threading.Tasks.Task<bool> AddDevPosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosByList", ReplyAction="http://tempuri.org/IDevService/AddDevPosByListResponse")]
        bool AddDevPosByList(WCFServiceForWPF.LocationServices.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosByList", ReplyAction="http://tempuri.org/IDevService/AddDevPosByListResponse")]
        System.Threading.Tasks.Task<bool> AddDevPosByListAsync(WCFServiceForWPF.LocationServices.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosInfo", ReplyAction="http://tempuri.org/IDevService/ModifyPosInfoResponse")]
        bool ModifyPosInfo(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosInfo", ReplyAction="http://tempuri.org/IDevService/ModifyPosInfoResponse")]
        System.Threading.Tasks.Task<bool> ModifyPosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosByList", ReplyAction="http://tempuri.org/IDevService/ModifyPosByListResponse")]
        bool ModifyPosByList(WCFServiceForWPF.LocationServices.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosByList", ReplyAction="http://tempuri.org/IDevService/ModifyPosByListResponse")]
        System.Threading.Tasks.Task<bool> ModifyPosByListAsync(WCFServiceForWPF.LocationServices.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeletePosInfo", ReplyAction="http://tempuri.org/IDevService/DeletePosInfoResponse")]
        bool DeletePosInfo(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeletePosInfo", ReplyAction="http://tempuri.org/IDevService/DeletePosInfoResponse")]
        System.Threading.Tasks.Task<bool> DeletePosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDevInfos", ReplyAction="http://tempuri.org/IDevService/GetAllDevInfosResponse")]
        WCFServiceForWPF.LocationServices.DevInfo[] GetAllDevInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDevInfos", ReplyAction="http://tempuri.org/IDevService/GetAllDevInfosResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetAllDevInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfos", ReplyAction="http://tempuri.org/IDevService/GetDevInfosResponse")]
        WCFServiceForWPF.LocationServices.DevInfo[] GetDevInfos(int[] typeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfos", ReplyAction="http://tempuri.org/IDevService/GetDevInfosResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetDevInfosAsync(int[] typeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/FindDevInfos", ReplyAction="http://tempuri.org/IDevService/FindDevInfosResponse")]
        WCFServiceForWPF.LocationServices.DevInfo[] FindDevInfos(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/FindDevInfos", ReplyAction="http://tempuri.org/IDevService/FindDevInfosResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> FindDevInfosAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfo", ReplyAction="http://tempuri.org/IDevService/AddDevInfoResponse")]
        WCFServiceForWPF.LocationServices.DevInfo AddDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfo", ReplyAction="http://tempuri.org/IDevService/AddDevInfoResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo> AddDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfoByList", ReplyAction="http://tempuri.org/IDevService/AddDevInfoByListResponse")]
        bool AddDevInfoByList(WCFServiceForWPF.LocationServices.DevInfo[] devInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfoByList", ReplyAction="http://tempuri.org/IDevService/AddDevInfoByListResponse")]
        System.Threading.Tasks.Task<bool> AddDevInfoByListAsync(WCFServiceForWPF.LocationServices.DevInfo[] devInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDevInfo", ReplyAction="http://tempuri.org/IDevService/ModifyDevInfoResponse")]
        bool ModifyDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDevInfo", ReplyAction="http://tempuri.org/IDevService/ModifyDevInfoResponse")]
        System.Threading.Tasks.Task<bool> ModifyDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDevInfo", ReplyAction="http://tempuri.org/IDevService/DeleteDevInfoResponse")]
        bool DeleteDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDevInfo", ReplyAction="http://tempuri.org/IDevService/DeleteDevInfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDevInfoByParentResponse")]
        WCFServiceForWPF.LocationServices.DevInfo[] GetDevInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDevInfoByParentResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetDevInfoByParentAsync(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccessByList", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessByListResponse")]
        bool AddDoorAccessByList(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccessByList", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessByListResponse")]
        System.Threading.Tasks.Task<bool> AddDoorAccessByListAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccess", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessResponse")]
        bool AddDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess doorAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccess", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessResponse")]
        System.Threading.Tasks.Task<bool> AddDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess doorAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDoorAccess", ReplyAction="http://tempuri.org/IDevService/DeleteDoorAccessResponse")]
        bool DeleteDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDoorAccess", ReplyAction="http://tempuri.org/IDevService/DeleteDoorAccessResponse")]
        System.Threading.Tasks.Task<bool> DeleteDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDoorAccess", ReplyAction="http://tempuri.org/IDevService/ModifyDoorAccessResponse")]
        bool ModifyDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDoorAccess", ReplyAction="http://tempuri.org/IDevService/ModifyDoorAccessResponse")]
        System.Threading.Tasks.Task<bool> ModifyDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDoorAccessInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDoorAccessInfoByParentResponse")]
        WCFServiceForWPF.LocationServices.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDoorAccessInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDoorAccessInfoByParentResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Dev_DoorAccess[]> GetDoorAccessInfoByParentAsync(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByNodeIdResponse")]
        WCFServiceForWPF.LocationServices.KKSCode GetKKSInfoByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByNodeIdResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> GetKKSInfoByNodeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByCode", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByCodeResponse")]
        WCFServiceForWPF.LocationServices.KKSCode GetKKSInfoByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByCode", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByCodeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> GetKKSInfoByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSInfoByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSInfoByNameResponse")]
        WCFServiceForWPF.LocationServices.KKSCode FindKKSInfoByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSInfoByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSInfoByNameResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> FindKKSInfoByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSCodeByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSCodeByNodeIdResponse")]
        string GetKKSCodeByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSCodeByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSCodeByNodeIdResponse")]
        System.Threading.Tasks.Task<string> GetKKSCodeByNodeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSCodeByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSCodeByNameResponse")]
        string FindKKSCodeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSCodeByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSCodeByNameResponse")]
        System.Threading.Tasks.Task<string> FindKKSCodeByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyList", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListResponse")]
        WCFServiceForWPF.LocationServices.PhysicalTopology[] GetPhysicalTopologyList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyList", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetPhysicalTopologyListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTree", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeResponse")]
        WCFServiceForWPF.LocationServices.PhysicalTopology GetPhysicalTopologyTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTree", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology> GetPhysicalTopologyTreeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRangeResponse")]
        WCFServiceForWPF.LocationServices.PhysicalTopology[] GetParkMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRangeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetParkMonitorRangeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeResponse")]
        WCFServiceForWPF.LocationServices.PhysicalTopology[] GetFloorMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetFloorMonitorRangeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeByIdResponse")]
        WCFServiceForWPF.LocationServices.PhysicalTopology[] GetFloorMonitorRangeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeByIdResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetFloorMonitorRangeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditMonitorRangeResponse")]
        bool EditMonitorRange(WCFServiceForWPF.LocationServices.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditMonitorRangeResponse")]
        System.Threading.Tasks.Task<bool> EditMonitorRangeAsync(WCFServiceForWPF.LocationServices.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddMonitorRangeResponse")]
        bool AddMonitorRange(WCFServiceForWPF.LocationServices.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddMonitorRangeResponse")]
        System.Threading.Tasks.Task<bool> AddMonitorRangeAsync(WCFServiceForWPF.LocationServices.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/AddConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/AddConfigArgResponse")]
        bool AddConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/AddConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/AddConfigArgResponse")]
        System.Threading.Tasks.Task<bool> AddConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/EditConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/EditConfigArgResponse")]
        bool EditConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/EditConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/EditConfigArgResponse")]
        System.Threading.Tasks.Task<bool> EditConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/DeleteConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/DeleteConfigArgResponse")]
        bool DeleteConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/DeleteConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/DeleteConfigArgResponse")]
        System.Threading.Tasks.Task<bool> DeleteConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgResponse")]
        WCFServiceForWPF.LocationServices.ConfigArg GetConfigArg(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg> GetConfigArgAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgList", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgListResponse")]
        WCFServiceForWPF.LocationServices.ConfigArg[] GetConfigArgList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgList", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> GetConfigArgListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgByKey", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgByKeyResponse")]
        WCFServiceForWPF.LocationServices.ConfigArg GetConfigArgByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgByKey", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgByKeyResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg> GetConfigArgByKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByKey", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByKeyResponse")]
        WCFServiceForWPF.LocationServices.ConfigArg[] FindConfigArgListByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByKey", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByKeyResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> FindConfigArgListByKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByClassify", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByClassifyResponse")]
        WCFServiceForWPF.LocationServices.ConfigArg[] FindConfigArgListByClassify(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByClassify", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByClassifyResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> FindConfigArgListByClassifyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfigResponse")]
        WCFServiceForWPF.LocationServices.TransferOfAxesConfig GetTransferOfAxesConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfigResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TransferOfAxesConfig> GetTransferOfAxesConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfigResponse")]
        bool SetTransferOfAxesConfig(WCFServiceForWPF.LocationServices.TransferOfAxesConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfigResponse")]
        System.Threading.Tasks.Task<bool> SetTransferOfAxesConfigAsync(WCFServiceForWPF.LocationServices.TransferOfAxesConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPersonList", ReplyAction="http://tempuri.org/IPersonalService/GetPersonListResponse")]
        WCFServiceForWPF.LocationServices.Personnel[] GetPersonList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPersonList", ReplyAction="http://tempuri.org/IPersonalService/GetPersonListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel[]> GetPersonListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/FindPersonList", ReplyAction="http://tempuri.org/IPersonalService/FindPersonListResponse")]
        WCFServiceForWPF.LocationServices.Personnel[] FindPersonList(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/FindPersonList", ReplyAction="http://tempuri.org/IPersonalService/FindPersonListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel[]> FindPersonListAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPerson", ReplyAction="http://tempuri.org/IPersonalService/GetPersonResponse")]
        WCFServiceForWPF.LocationServices.Personnel GetPerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPerson", ReplyAction="http://tempuri.org/IPersonalService/GetPersonResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel> GetPersonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/AddPerson", ReplyAction="http://tempuri.org/IPersonalService/AddPersonResponse")]
        int AddPerson(WCFServiceForWPF.LocationServices.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/AddPerson", ReplyAction="http://tempuri.org/IPersonalService/AddPersonResponse")]
        System.Threading.Tasks.Task<int> AddPersonAsync(WCFServiceForWPF.LocationServices.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/EditPerson", ReplyAction="http://tempuri.org/IPersonalService/EditPersonResponse")]
        bool EditPerson(WCFServiceForWPF.LocationServices.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/EditPerson", ReplyAction="http://tempuri.org/IPersonalService/EditPersonResponse")]
        System.Threading.Tasks.Task<bool> EditPersonAsync(WCFServiceForWPF.LocationServices.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/DeletePerson", ReplyAction="http://tempuri.org/IPersonalService/DeletePersonResponse")]
        bool DeletePerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/DeletePerson", ReplyAction="http://tempuri.org/IPersonalService/DeletePersonResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetLocationAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetLocationAlarmsResponse")]
        WCFServiceForWPF.LocationServices.LocationAlarm[] GetLocationAlarms(WCFServiceForWPF.LocationServices.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetLocationAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetLocationAlarmsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LocationAlarm[]> GetLocationAlarmsAsync(WCFServiceForWPF.LocationServices.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetDeviceAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetDeviceAlarmsResponse")]
        WCFServiceForWPF.LocationServices.DeviceAlarm[] GetDeviceAlarms(WCFServiceForWPF.LocationServices.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetDeviceAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetDeviceAlarmsResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DeviceAlarm[]> GetDeviceAlarmsAsync(WCFServiceForWPF.LocationServices.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/GetPostList", ReplyAction="http://tempuri.org/IPostService/GetPostListResponse")]
        WCFServiceForWPF.LocationServices.Post[] GetPostList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/GetPostList", ReplyAction="http://tempuri.org/IPostService/GetPostListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Post[]> GetPostListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketList", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketListResponse")]
        WCFServiceForWPF.LocationServices.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketList", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Ticket[]> GetTicketListAsync(int type, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketDetial", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketDetialResponse")]
        WCFServiceForWPF.LocationServices.Ticket GetTicketDetial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketDetial", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketDetialResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Ticket> GetTicketDetialAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketListResponse")]
        WCFServiceForWPF.LocationServices.OperationTicket[] GetOperationTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.OperationTicket[]> GetOperationTicketListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketListResponse")]
        WCFServiceForWPF.LocationServices.WorkTicket[] GetWorkTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.WorkTicket[]> GetWorkTicketListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionDevList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionDevListResponse")]
        WCFServiceForWPF.LocationServices.MobileInspectionDev[] GetMobileInspectionDevList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionDevList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionDevListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.MobileInspectionDev[]> GetMobileInspectionDevListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionListResponse")]
        WCFServiceForWPF.LocationServices.MobileInspection[] GetMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.MobileInspection[]> GetMobileInspectionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionListResponse")]
        WCFServiceForWPF.LocationServices.PersonnelMobileInspection[] GetPersonnelMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PersonnelMobileInspection[]> GetPersonnelMobileInspectionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationItemHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetOperationItemHistoryListResponse")]
        WCFServiceForWPF.LocationServices.OperationItemHistory[] GetOperationItemHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationItemHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetOperationItemHistoryListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.OperationItemHistory[]> GetOperationItemHistoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketHistoryListResponse")]
        WCFServiceForWPF.LocationServices.WorkTicketHistory[] GetWorkTicketHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketHistoryListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.WorkTicketHistory[]> GetWorkTicketHistoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryListResponse")]
        WCFServiceForWPF.LocationServices.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PersonnelMobileInspectionHistory[]> GetPersonnelMobileInspectionHistoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        WCFServiceForWPF.LocationServices.LoginInfo Login(WCFServiceForWPF.LocationServices.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LoginInfo> LoginAsync(WCFServiceForWPF.LocationServices.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        WCFServiceForWPF.LocationServices.LoginInfo Logout(WCFServiceForWPF.LocationServices.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LoginInfo> LogoutAsync(WCFServiceForWPF.LocationServices.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/Hello", ReplyAction="http://tempuri.org/ILocationService/HelloResponse")]
        string Hello(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/Hello", ReplyAction="http://tempuri.org/ILocationService/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDepartmentList", ReplyAction="http://tempuri.org/ILocationService/GetDepartmentListResponse")]
        WCFServiceForWPF.LocationServices.Department[] GetDepartmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDepartmentList", ReplyAction="http://tempuri.org/ILocationService/GetDepartmentListResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Department[]> GetDepartmentListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDepartmentTree", ReplyAction="http://tempuri.org/ILocationService/GetDepartmentTreeResponse")]
        WCFServiceForWPF.LocationServices.Department GetDepartmentTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetDepartmentTree", ReplyAction="http://tempuri.org/ILocationService/GetDepartmentTreeResponse")]
        System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Department> GetDepartmentTreeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : WCFServiceForWPF.LocationServices.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<WCFServiceForWPF.LocationServices.ILocationService>, WCFServiceForWPF.LocationServices.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServiceForWPF.LocationServices.Tag[] GetTags() {
            return base.Channel.GetTags();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Tag[]> GetTagsAsync() {
            return base.Channel.GetTagsAsync();
        }
        
        public bool AddTags(WCFServiceForWPF.LocationServices.Tag[] tags) {
            return base.Channel.AddTags(tags);
        }
        
        public System.Threading.Tasks.Task<bool> AddTagsAsync(WCFServiceForWPF.LocationServices.Tag[] tags) {
            return base.Channel.AddTagsAsync(tags);
        }
        
        public bool DeleteTag(int id) {
            return base.Channel.DeleteTag(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTagAsync(int id) {
            return base.Channel.DeleteTagAsync(id);
        }
        
        public bool DeleteAllTags() {
            return base.Channel.DeleteAllTags();
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAllTagsAsync() {
            return base.Channel.DeleteAllTagsAsync();
        }
        
        public WCFServiceForWPF.LocationServices.TagPosition[] GetRealPositons() {
            return base.Channel.GetRealPositons();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TagPosition[]> GetRealPositonsAsync() {
            return base.Channel.GetRealPositonsAsync();
        }
        
        public WCFServiceForWPF.LocationServices.TagPosition[] GetRealPositonsByTags(string[] tagCodes) {
            return base.Channel.GetRealPositonsByTags(tagCodes);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TagPosition[]> GetRealPositonsByTagsAsync(string[] tagCodes) {
            return base.Channel.GetRealPositonsByTagsAsync(tagCodes);
        }
        
        public WCFServiceForWPF.LocationServices.Position[] GetHistoryPositons() {
            return base.Channel.GetHistoryPositons();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsAsync() {
            return base.Channel.GetHistoryPositonsAsync();
        }
        
        public WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPersonnelID(personnelID, start, end);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByPersonnelIDAsync(int personnelID, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPersonnelIDAsync(personnelID, start, end);
        }
        
        public WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPidAndTopoNodeIds(personnelID, topoNodeIds, start, end);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByPidAndTopoNodeIdsAsync(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPidAndTopoNodeIdsAsync(personnelID, topoNodeIds, start, end);
        }
        
        public WCFServiceForWPF.LocationServices.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByTime(tagcode, start, end);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Position[]> GetHistoryPositonsByTimeAsync(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByTimeAsync(tagcode, start, end);
        }
        
        public string GetStrs(int n) {
            return base.Channel.GetStrs(n);
        }
        
        public System.Threading.Tasks.Task<string> GetStrsAsync(int n) {
            return base.Channel.GetStrsAsync(n);
        }
        
        public void AddU3DPosition(WCFServiceForWPF.LocationServices.U3DPosition[] pList) {
            base.Channel.AddU3DPosition(pList);
        }
        
        public System.Threading.Tasks.Task AddU3DPositionAsync(WCFServiceForWPF.LocationServices.U3DPosition[] pList) {
            return base.Channel.AddU3DPositionAsync(pList);
        }
        
        public void AddU3DPositions(WCFServiceForWPF.LocationServices.U3DPosition[] list) {
            base.Channel.AddU3DPositions(list);
        }
        
        public System.Threading.Tasks.Task AddU3DPositionsAsync(WCFServiceForWPF.LocationServices.U3DPosition[] list) {
            return base.Channel.AddU3DPositionsAsync(list);
        }
        
        public WCFServiceForWPF.LocationServices.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryU3DPositonsByTime(tagcode, start, end);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.U3DPosition[]> GetHistoryU3DPositonsByTimeAsync(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryU3DPositonsByTimeAsync(tagcode, start, end);
        }
        
        public WCFServiceForWPF.LocationServices.ObjectAddList_Type[] GetObjectAddList() {
            return base.Channel.GetObjectAddList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ObjectAddList_Type[]> GetObjectAddListAsync() {
            return base.Channel.GetObjectAddListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.DevPos[] GetDevPositions() {
            return base.Channel.GetDevPositions();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevPos[]> GetDevPositionsAsync() {
            return base.Channel.GetDevPositionsAsync();
        }
        
        public bool AddDevPosInfo(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.AddDevPosInfo(pos);
        }
        
        public System.Threading.Tasks.Task<bool> AddDevPosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.AddDevPosInfoAsync(pos);
        }
        
        public bool AddDevPosByList(WCFServiceForWPF.LocationServices.DevPos[] posList) {
            return base.Channel.AddDevPosByList(posList);
        }
        
        public System.Threading.Tasks.Task<bool> AddDevPosByListAsync(WCFServiceForWPF.LocationServices.DevPos[] posList) {
            return base.Channel.AddDevPosByListAsync(posList);
        }
        
        public bool ModifyPosInfo(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.ModifyPosInfo(pos);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyPosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.ModifyPosInfoAsync(pos);
        }
        
        public bool ModifyPosByList(WCFServiceForWPF.LocationServices.DevPos[] posList) {
            return base.Channel.ModifyPosByList(posList);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyPosByListAsync(WCFServiceForWPF.LocationServices.DevPos[] posList) {
            return base.Channel.ModifyPosByListAsync(posList);
        }
        
        public bool DeletePosInfo(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.DeletePosInfo(pos);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePosInfoAsync(WCFServiceForWPF.LocationServices.DevPos pos) {
            return base.Channel.DeletePosInfoAsync(pos);
        }
        
        public WCFServiceForWPF.LocationServices.DevInfo[] GetAllDevInfos() {
            return base.Channel.GetAllDevInfos();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetAllDevInfosAsync() {
            return base.Channel.GetAllDevInfosAsync();
        }
        
        public WCFServiceForWPF.LocationServices.DevInfo[] GetDevInfos(int[] typeList) {
            return base.Channel.GetDevInfos(typeList);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetDevInfosAsync(int[] typeList) {
            return base.Channel.GetDevInfosAsync(typeList);
        }
        
        public WCFServiceForWPF.LocationServices.DevInfo[] FindDevInfos(string key) {
            return base.Channel.FindDevInfos(key);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> FindDevInfosAsync(string key) {
            return base.Channel.FindDevInfosAsync(key);
        }
        
        public WCFServiceForWPF.LocationServices.DevInfo AddDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.AddDevInfo(devInfo);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo> AddDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.AddDevInfoAsync(devInfo);
        }
        
        public bool AddDevInfoByList(WCFServiceForWPF.LocationServices.DevInfo[] devInfoList) {
            return base.Channel.AddDevInfoByList(devInfoList);
        }
        
        public System.Threading.Tasks.Task<bool> AddDevInfoByListAsync(WCFServiceForWPF.LocationServices.DevInfo[] devInfoList) {
            return base.Channel.AddDevInfoByListAsync(devInfoList);
        }
        
        public bool ModifyDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.ModifyDevInfo(devInfo);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.ModifyDevInfoAsync(devInfo);
        }
        
        public bool DeleteDevInfo(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.DeleteDevInfo(devInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDevInfoAsync(WCFServiceForWPF.LocationServices.DevInfo devInfo) {
            return base.Channel.DeleteDevInfoAsync(devInfo);
        }
        
        public WCFServiceForWPF.LocationServices.DevInfo[] GetDevInfoByParent(int[] pids) {
            return base.Channel.GetDevInfoByParent(pids);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DevInfo[]> GetDevInfoByParentAsync(int[] pids) {
            return base.Channel.GetDevInfoByParentAsync(pids);
        }
        
        public bool AddDoorAccessByList(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.AddDoorAccessByList(doorAccessList);
        }
        
        public System.Threading.Tasks.Task<bool> AddDoorAccessByListAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.AddDoorAccessByListAsync(doorAccessList);
        }
        
        public bool AddDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess doorAccess) {
            return base.Channel.AddDoorAccess(doorAccess);
        }
        
        public System.Threading.Tasks.Task<bool> AddDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess doorAccess) {
            return base.Channel.AddDoorAccessAsync(doorAccess);
        }
        
        public bool DeleteDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.DeleteDoorAccess(doorAccessList);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.DeleteDoorAccessAsync(doorAccessList);
        }
        
        public bool ModifyDoorAccess(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.ModifyDoorAccess(doorAccessList);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyDoorAccessAsync(WCFServiceForWPF.LocationServices.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.ModifyDoorAccessAsync(doorAccessList);
        }
        
        public WCFServiceForWPF.LocationServices.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids) {
            return base.Channel.GetDoorAccessInfoByParent(pids);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Dev_DoorAccess[]> GetDoorAccessInfoByParentAsync(int[] pids) {
            return base.Channel.GetDoorAccessInfoByParentAsync(pids);
        }
        
        public WCFServiceForWPF.LocationServices.KKSCode GetKKSInfoByNodeId(int id) {
            return base.Channel.GetKKSInfoByNodeId(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> GetKKSInfoByNodeIdAsync(int id) {
            return base.Channel.GetKKSInfoByNodeIdAsync(id);
        }
        
        public WCFServiceForWPF.LocationServices.KKSCode GetKKSInfoByCode(string code) {
            return base.Channel.GetKKSInfoByCode(code);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> GetKKSInfoByCodeAsync(string code) {
            return base.Channel.GetKKSInfoByCodeAsync(code);
        }
        
        public WCFServiceForWPF.LocationServices.KKSCode FindKKSInfoByName(string name) {
            return base.Channel.FindKKSInfoByName(name);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.KKSCode> FindKKSInfoByNameAsync(string name) {
            return base.Channel.FindKKSInfoByNameAsync(name);
        }
        
        public string GetKKSCodeByNodeId(int id) {
            return base.Channel.GetKKSCodeByNodeId(id);
        }
        
        public System.Threading.Tasks.Task<string> GetKKSCodeByNodeIdAsync(int id) {
            return base.Channel.GetKKSCodeByNodeIdAsync(id);
        }
        
        public string FindKKSCodeByName(string name) {
            return base.Channel.FindKKSCodeByName(name);
        }
        
        public System.Threading.Tasks.Task<string> FindKKSCodeByNameAsync(string name) {
            return base.Channel.FindKKSCodeByNameAsync(name);
        }
        
        public WCFServiceForWPF.LocationServices.PhysicalTopology[] GetPhysicalTopologyList() {
            return base.Channel.GetPhysicalTopologyList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetPhysicalTopologyListAsync() {
            return base.Channel.GetPhysicalTopologyListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PhysicalTopology GetPhysicalTopologyTree() {
            return base.Channel.GetPhysicalTopologyTree();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology> GetPhysicalTopologyTreeAsync() {
            return base.Channel.GetPhysicalTopologyTreeAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PhysicalTopology[] GetParkMonitorRange() {
            return base.Channel.GetParkMonitorRange();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetParkMonitorRangeAsync() {
            return base.Channel.GetParkMonitorRangeAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PhysicalTopology[] GetFloorMonitorRange() {
            return base.Channel.GetFloorMonitorRange();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetFloorMonitorRangeAsync() {
            return base.Channel.GetFloorMonitorRangeAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PhysicalTopology[] GetFloorMonitorRangeById(int id) {
            return base.Channel.GetFloorMonitorRangeById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PhysicalTopology[]> GetFloorMonitorRangeByIdAsync(int id) {
            return base.Channel.GetFloorMonitorRangeByIdAsync(id);
        }
        
        public bool EditMonitorRange(WCFServiceForWPF.LocationServices.PhysicalTopology pt) {
            return base.Channel.EditMonitorRange(pt);
        }
        
        public System.Threading.Tasks.Task<bool> EditMonitorRangeAsync(WCFServiceForWPF.LocationServices.PhysicalTopology pt) {
            return base.Channel.EditMonitorRangeAsync(pt);
        }
        
        public bool AddMonitorRange(WCFServiceForWPF.LocationServices.PhysicalTopology pt) {
            return base.Channel.AddMonitorRange(pt);
        }
        
        public System.Threading.Tasks.Task<bool> AddMonitorRangeAsync(WCFServiceForWPF.LocationServices.PhysicalTopology pt) {
            return base.Channel.AddMonitorRangeAsync(pt);
        }
        
        public bool AddConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.AddConfigArg(config);
        }
        
        public System.Threading.Tasks.Task<bool> AddConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.AddConfigArgAsync(config);
        }
        
        public bool EditConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.EditConfigArg(config);
        }
        
        public System.Threading.Tasks.Task<bool> EditConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.EditConfigArgAsync(config);
        }
        
        public bool DeleteConfigArg(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.DeleteConfigArg(config);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteConfigArgAsync(WCFServiceForWPF.LocationServices.ConfigArg config) {
            return base.Channel.DeleteConfigArgAsync(config);
        }
        
        public WCFServiceForWPF.LocationServices.ConfigArg GetConfigArg(int id) {
            return base.Channel.GetConfigArg(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg> GetConfigArgAsync(int id) {
            return base.Channel.GetConfigArgAsync(id);
        }
        
        public WCFServiceForWPF.LocationServices.ConfigArg[] GetConfigArgList() {
            return base.Channel.GetConfigArgList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> GetConfigArgListAsync() {
            return base.Channel.GetConfigArgListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.ConfigArg GetConfigArgByKey(string key) {
            return base.Channel.GetConfigArgByKey(key);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg> GetConfigArgByKeyAsync(string key) {
            return base.Channel.GetConfigArgByKeyAsync(key);
        }
        
        public WCFServiceForWPF.LocationServices.ConfigArg[] FindConfigArgListByKey(string key) {
            return base.Channel.FindConfigArgListByKey(key);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> FindConfigArgListByKeyAsync(string key) {
            return base.Channel.FindConfigArgListByKeyAsync(key);
        }
        
        public WCFServiceForWPF.LocationServices.ConfigArg[] FindConfigArgListByClassify(string key) {
            return base.Channel.FindConfigArgListByClassify(key);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.ConfigArg[]> FindConfigArgListByClassifyAsync(string key) {
            return base.Channel.FindConfigArgListByClassifyAsync(key);
        }
        
        public WCFServiceForWPF.LocationServices.TransferOfAxesConfig GetTransferOfAxesConfig() {
            return base.Channel.GetTransferOfAxesConfig();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.TransferOfAxesConfig> GetTransferOfAxesConfigAsync() {
            return base.Channel.GetTransferOfAxesConfigAsync();
        }
        
        public bool SetTransferOfAxesConfig(WCFServiceForWPF.LocationServices.TransferOfAxesConfig config) {
            return base.Channel.SetTransferOfAxesConfig(config);
        }
        
        public System.Threading.Tasks.Task<bool> SetTransferOfAxesConfigAsync(WCFServiceForWPF.LocationServices.TransferOfAxesConfig config) {
            return base.Channel.SetTransferOfAxesConfigAsync(config);
        }
        
        public WCFServiceForWPF.LocationServices.Personnel[] GetPersonList() {
            return base.Channel.GetPersonList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel[]> GetPersonListAsync() {
            return base.Channel.GetPersonListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.Personnel[] FindPersonList(string key) {
            return base.Channel.FindPersonList(key);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel[]> FindPersonListAsync(string key) {
            return base.Channel.FindPersonListAsync(key);
        }
        
        public WCFServiceForWPF.LocationServices.Personnel GetPerson(int id) {
            return base.Channel.GetPerson(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Personnel> GetPersonAsync(int id) {
            return base.Channel.GetPersonAsync(id);
        }
        
        public int AddPerson(WCFServiceForWPF.LocationServices.Personnel p) {
            return base.Channel.AddPerson(p);
        }
        
        public System.Threading.Tasks.Task<int> AddPersonAsync(WCFServiceForWPF.LocationServices.Personnel p) {
            return base.Channel.AddPersonAsync(p);
        }
        
        public bool EditPerson(WCFServiceForWPF.LocationServices.Personnel p) {
            return base.Channel.EditPerson(p);
        }
        
        public System.Threading.Tasks.Task<bool> EditPersonAsync(WCFServiceForWPF.LocationServices.Personnel p) {
            return base.Channel.EditPersonAsync(p);
        }
        
        public bool DeletePerson(int id) {
            return base.Channel.DeletePerson(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonAsync(int id) {
            return base.Channel.DeletePersonAsync(id);
        }
        
        public WCFServiceForWPF.LocationServices.LocationAlarm[] GetLocationAlarms(WCFServiceForWPF.LocationServices.AlarmSearchArg arg) {
            return base.Channel.GetLocationAlarms(arg);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LocationAlarm[]> GetLocationAlarmsAsync(WCFServiceForWPF.LocationServices.AlarmSearchArg arg) {
            return base.Channel.GetLocationAlarmsAsync(arg);
        }
        
        public WCFServiceForWPF.LocationServices.DeviceAlarm[] GetDeviceAlarms(WCFServiceForWPF.LocationServices.AlarmSearchArg arg) {
            return base.Channel.GetDeviceAlarms(arg);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.DeviceAlarm[]> GetDeviceAlarmsAsync(WCFServiceForWPF.LocationServices.AlarmSearchArg arg) {
            return base.Channel.GetDeviceAlarmsAsync(arg);
        }
        
        public WCFServiceForWPF.LocationServices.Post[] GetPostList() {
            return base.Channel.GetPostList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Post[]> GetPostListAsync() {
            return base.Channel.GetPostListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end) {
            return base.Channel.GetTicketList(type, start, end);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Ticket[]> GetTicketListAsync(int type, System.DateTime start, System.DateTime end) {
            return base.Channel.GetTicketListAsync(type, start, end);
        }
        
        public WCFServiceForWPF.LocationServices.Ticket GetTicketDetial(int id) {
            return base.Channel.GetTicketDetial(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Ticket> GetTicketDetialAsync(int id) {
            return base.Channel.GetTicketDetialAsync(id);
        }
        
        public WCFServiceForWPF.LocationServices.OperationTicket[] GetOperationTicketList() {
            return base.Channel.GetOperationTicketList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.OperationTicket[]> GetOperationTicketListAsync() {
            return base.Channel.GetOperationTicketListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.WorkTicket[] GetWorkTicketList() {
            return base.Channel.GetWorkTicketList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.WorkTicket[]> GetWorkTicketListAsync() {
            return base.Channel.GetWorkTicketListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.MobileInspectionDev[] GetMobileInspectionDevList() {
            return base.Channel.GetMobileInspectionDevList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.MobileInspectionDev[]> GetMobileInspectionDevListAsync() {
            return base.Channel.GetMobileInspectionDevListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.MobileInspection[] GetMobileInspectionList() {
            return base.Channel.GetMobileInspectionList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.MobileInspection[]> GetMobileInspectionListAsync() {
            return base.Channel.GetMobileInspectionListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PersonnelMobileInspection[] GetPersonnelMobileInspectionList() {
            return base.Channel.GetPersonnelMobileInspectionList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PersonnelMobileInspection[]> GetPersonnelMobileInspectionListAsync() {
            return base.Channel.GetPersonnelMobileInspectionListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.OperationItemHistory[] GetOperationItemHistoryList() {
            return base.Channel.GetOperationItemHistoryList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.OperationItemHistory[]> GetOperationItemHistoryListAsync() {
            return base.Channel.GetOperationItemHistoryListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.WorkTicketHistory[] GetWorkTicketHistoryList() {
            return base.Channel.GetWorkTicketHistoryList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.WorkTicketHistory[]> GetWorkTicketHistoryListAsync() {
            return base.Channel.GetWorkTicketHistoryListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList() {
            return base.Channel.GetPersonnelMobileInspectionHistoryList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.PersonnelMobileInspectionHistory[]> GetPersonnelMobileInspectionHistoryListAsync() {
            return base.Channel.GetPersonnelMobileInspectionHistoryListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.LoginInfo Login(WCFServiceForWPF.LocationServices.LoginInfo info) {
            return base.Channel.Login(info);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LoginInfo> LoginAsync(WCFServiceForWPF.LocationServices.LoginInfo info) {
            return base.Channel.LoginAsync(info);
        }
        
        public WCFServiceForWPF.LocationServices.LoginInfo Logout(WCFServiceForWPF.LocationServices.LoginInfo info) {
            return base.Channel.Logout(info);
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.LoginInfo> LogoutAsync(WCFServiceForWPF.LocationServices.LoginInfo info) {
            return base.Channel.LogoutAsync(info);
        }
        
        public string Hello(string msg) {
            return base.Channel.Hello(msg);
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync(string msg) {
            return base.Channel.HelloAsync(msg);
        }
        
        public WCFServiceForWPF.LocationServices.Department[] GetDepartmentList() {
            return base.Channel.GetDepartmentList();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Department[]> GetDepartmentListAsync() {
            return base.Channel.GetDepartmentListAsync();
        }
        
        public WCFServiceForWPF.LocationServices.Department GetDepartmentTree() {
            return base.Channel.GetDepartmentTree();
        }
        
        public System.Threading.Tasks.Task<WCFServiceForWPF.LocationServices.Department> GetDepartmentTreeAsync() {
            return base.Channel.GetDepartmentTreeAsync();
        }
    }
}
