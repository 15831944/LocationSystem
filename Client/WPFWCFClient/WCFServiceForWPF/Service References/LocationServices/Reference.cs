//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceForWPF.LocationServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServices.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/Hello", ReplyAction="http://tempuri.org/ITestService/HelloResponse")]
        string Hello(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentList", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentListResponse")]
        Location.TModel.Location.Person.Department[] GetDepartmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentTree", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentTreeResponse")]
        Location.TModel.Location.Person.Department GetDepartmentTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTags", ReplyAction="http://tempuri.org/ITagService/GetTagsResponse")]
        Location.TModel.Location.AreaAndDev.Tag[] GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTags", ReplyAction="http://tempuri.org/ITagService/AddTagsResponse")]
        bool AddTags(Location.TModel.Location.AreaAndDev.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteTag", ReplyAction="http://tempuri.org/ITagService/DeleteTagResponse")]
        bool DeleteTag(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/DeleteAllTags", ReplyAction="http://tempuri.org/ITagService/DeleteAllTagsResponse")]
        bool DeleteAllTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/EditTag", ReplyAction="http://tempuri.org/ITagService/EditTagResponse")]
        bool EditTag(Location.TModel.Location.AreaAndDev.Tag Tag, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositons", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsResponse")]
        Location.TModel.Location.Data.TagPosition[] GetRealPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetRealPositonsByTags", ReplyAction="http://tempuri.org/IPositionService/GetRealPositonsByTagsResponse")]
        Location.TModel.Location.Data.TagPosition[] GetRealPositonsByTags(string[] tagCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositons", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelID", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPersonnelIDResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIds", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByPidAndTopoNodeIdsResponse" +
            "")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryPositonsByTimeResponse")]
        Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetStrs", ReplyAction="http://tempuri.org/IPositionService/GetStrsResponse")]
        string GetStrs(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPosition", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionResponse")]
        void AddU3DPosition(Location.TModel.LocationHistory.Data.U3DPosition[] pList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddU3DPositions", ReplyAction="http://tempuri.org/IPositionService/AddU3DPositionsResponse")]
        void AddU3DPositions(Location.TModel.LocationHistory.Data.U3DPosition[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTime", ReplyAction="http://tempuri.org/IPositionService/GetHistoryU3DPositonsByTimeResponse")]
        Location.TModel.LocationHistory.Data.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetObjectAddList", ReplyAction="http://tempuri.org/IDevService/GetObjectAddListResponse")]
        Location.TModel.Location.AreaAndDev.ObjectAddList_Type[] GetObjectAddList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevPositions", ReplyAction="http://tempuri.org/IDevService/GetDevPositionsResponse")]
        Location.TModel.Location.AreaAndDev.DevPos[] GetDevPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosInfo", ReplyAction="http://tempuri.org/IDevService/AddDevPosInfoResponse")]
        bool AddDevPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevPosByList", ReplyAction="http://tempuri.org/IDevService/AddDevPosByListResponse")]
        bool AddDevPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosInfo", ReplyAction="http://tempuri.org/IDevService/ModifyPosInfoResponse")]
        bool ModifyPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyPosByList", ReplyAction="http://tempuri.org/IDevService/ModifyPosByListResponse")]
        bool ModifyPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeletePosInfo", ReplyAction="http://tempuri.org/IDevService/DeletePosInfoResponse")]
        bool DeletePosInfo(Location.TModel.Location.AreaAndDev.DevPos pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDevInfos", ReplyAction="http://tempuri.org/IDevService/GetAllDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetAllDevInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfos", ReplyAction="http://tempuri.org/IDevService/GetDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfos(int[] typeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/FindDevInfos", ReplyAction="http://tempuri.org/IDevService/FindDevInfosResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] FindDevInfos(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfo", ReplyAction="http://tempuri.org/IDevService/AddDevInfoResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo AddDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDevInfoByList", ReplyAction="http://tempuri.org/IDevService/AddDevInfoByListResponse")]
        bool AddDevInfoByList(Location.TModel.Location.AreaAndDev.DevInfo[] devInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDevInfo", ReplyAction="http://tempuri.org/IDevService/ModifyDevInfoResponse")]
        bool ModifyDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDevInfo", ReplyAction="http://tempuri.org/IDevService/DeleteDevInfoResponse")]
        bool DeleteDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDevInfoByParentResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDevByID", ReplyAction="http://tempuri.org/IDevService/GetDevByIDResponse")]
        Location.TModel.Location.AreaAndDev.DevInfo GetDevByID(string devId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccessByList", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessByListResponse")]
        bool AddDoorAccessByList(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddDoorAccess", ReplyAction="http://tempuri.org/IDevService/AddDoorAccessResponse")]
        bool AddDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess doorAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteDoorAccess", ReplyAction="http://tempuri.org/IDevService/DeleteDoorAccessResponse")]
        bool DeleteDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/ModifyDoorAccess", ReplyAction="http://tempuri.org/IDevService/ModifyDoorAccessResponse")]
        bool ModifyDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetDoorAccessInfoByParent", ReplyAction="http://tempuri.org/IDevService/GetDoorAccessInfoByParentResponse")]
        Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetAllDoorAccessInfo", ReplyAction="http://tempuri.org/IDevService/GetAllDoorAccessInfoResponse")]
        Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetAllDoorAccessInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchors", ReplyAction="http://tempuri.org/IDevService/GetArchorsResponse")]
        TModel.Location.AreaAndDev.Archor[] GetArchors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchor", ReplyAction="http://tempuri.org/IDevService/GetArchorResponse")]
        TModel.Location.AreaAndDev.Archor GetArchor(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetArchorByDevId", ReplyAction="http://tempuri.org/IDevService/GetArchorByDevIdResponse")]
        TModel.Location.AreaAndDev.Archor GetArchorByDevId(int devId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/EditArchor", ReplyAction="http://tempuri.org/IDevService/EditArchorResponse")]
        bool EditArchor(TModel.Location.AreaAndDev.Archor Archor, int ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/AddArchor", ReplyAction="http://tempuri.org/IDevService/AddArchorResponse")]
        bool AddArchor(TModel.Location.AreaAndDev.Archor archor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/DeleteArchor", ReplyAction="http://tempuri.org/IDevService/DeleteArchorResponse")]
        void DeleteArchor(int archorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetNearbyDev_Currency", ReplyAction="http://tempuri.org/IDevService/GetNearbyDev_CurrencyResponse")]
        TModel.Location.AreaAndDev.NearbyDev[] GetNearbyDev_Currency(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevService/GetNearbyCamera_Alarm", ReplyAction="http://tempuri.org/IDevService/GetNearbyCamera_AlarmResponse")]
        TModel.Location.AreaAndDev.NearbyDev[] GetNearbyCamera_Alarm(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByNodeIdResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSInfoByCode", ReplyAction="http://tempuri.org/IKKSService/GetKKSInfoByCodeResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSInfoByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSInfoByNameResponse")]
        Location.TModel.Location.AreaAndDev.KKSCode FindKKSInfoByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/GetKKSCodeByNodeId", ReplyAction="http://tempuri.org/IKKSService/GetKKSCodeByNodeIdResponse")]
        string GetKKSCodeByNodeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKKSService/FindKKSCodeByName", ReplyAction="http://tempuri.org/IKKSService/FindKKSCodeByNameResponse")]
        string FindKKSCodeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyList", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopology(string id, bool getChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByName", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByNameResponse" +
            "")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByPid", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyListByPidResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByPid(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTree", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTree(int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeNode", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeNodeResponse")]
        TModel.Location.Nodes.AreaNode GetPhysicalTopologyTreeNode(int view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetPhysicalTopologyTreeByIdResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTreeById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology AddPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditPhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditPhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology EditPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/RemovePhysicalTopology", ReplyAction="http://tempuri.org/IPhysicalTopologyService/RemovePhysicalTopologyResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology RemovePhysicalTopology(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetParkMonitorRangeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetParkMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeById", ReplyAction="http://tempuri.org/IPhysicalTopologyService/GetFloorMonitorRangeByIdResponse")]
        Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRangeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/EditMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/EditMonitorRangeResponse")]
        bool EditMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhysicalTopologyService/AddMonitorRange", ReplyAction="http://tempuri.org/IPhysicalTopologyService/AddMonitorRangeResponse")]
        bool AddMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/AddConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/AddConfigArgResponse")]
        bool AddConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/EditConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/EditConfigArgResponse")]
        bool EditConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/DeleteConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/DeleteConfigArgResponse")]
        bool DeleteConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArg", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArg(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgList", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgListResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] GetConfigArgList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetConfigArgByKey", ReplyAction="http://tempuri.org/IConfigArgService/GetConfigArgByKeyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArgByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByKey", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByKeyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/FindConfigArgListByClassify", ReplyAction="http://tempuri.org/IConfigArgService/FindConfigArgListByClassifyResponse")]
        Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByClassify(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/GetTransferOfAxesConfigResponse")]
        Location.TModel.Location.TransferOfAxesConfig GetTransferOfAxesConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfig", ReplyAction="http://tempuri.org/IConfigArgService/SetTransferOfAxesConfigResponse")]
        bool SetTransferOfAxesConfig(Location.TModel.Location.TransferOfAxesConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPersonList", ReplyAction="http://tempuri.org/IPersonalService/GetPersonListResponse")]
        Location.TModel.Location.Person.Personnel[] GetPersonList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/FindPersonList", ReplyAction="http://tempuri.org/IPersonalService/FindPersonListResponse")]
        Location.TModel.Location.Person.Personnel[] FindPersonList(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetPerson", ReplyAction="http://tempuri.org/IPersonalService/GetPersonResponse")]
        Location.TModel.Location.Person.Personnel GetPerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/AddPerson", ReplyAction="http://tempuri.org/IPersonalService/AddPersonResponse")]
        int AddPerson(Location.TModel.Location.Person.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/EditPerson", ReplyAction="http://tempuri.org/IPersonalService/EditPersonResponse")]
        bool EditPerson(Location.TModel.Location.Person.Personnel p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/DeletePerson", ReplyAction="http://tempuri.org/IPersonalService/DeletePersonResponse")]
        bool DeletePerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetNearbyPerson_Currency", ReplyAction="http://tempuri.org/IPersonalService/GetNearbyPerson_CurrencyResponse")]
        TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Currency(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonalService/GetNearbyPerson_Alarm", ReplyAction="http://tempuri.org/IPersonalService/GetNearbyPerson_AlarmResponse")]
        TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Alarm(int id, float fDis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetLocationAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetLocationAlarmsResponse")]
        Location.TModel.Location.Alarm.LocationAlarm[] GetLocationAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetDeviceAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetDeviceAlarmsResponse")]
        Location.TModel.Location.Alarm.DeviceAlarm[] GetDeviceAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostService/GetPostList", ReplyAction="http://tempuri.org/IPostService/GetPostListResponse")]
        Location.TModel.Location.AreaAndDev.Post[] GetPostList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketList", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketListResponse")]
        TModel.BaseData.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataService/GetTicketDetial", ReplyAction="http://tempuri.org/IBaseDataService/GetTicketDetialResponse")]
        TModel.BaseData.Ticket GetTicketDetial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketListResponse")]
        TModel.Location.Work.OperationTicket[] GetOperationTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketListResponse")]
        TModel.Location.Work.WorkTicket[] GetWorkTicketList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionDevList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionDevListResponse")]
        TModel.Location.Work.MobileInspectionDev[] GetMobileInspectionDevList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetMobileInspectionListResponse")]
        TModel.Location.Work.MobileInspection[] GetMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionListResponse")]
        TModel.Location.Work.PersonnelMobileInspection[] GetPersonnelMobileInspectionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetOperationTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetOperationTicketHistoryListResponse")]
        TModel.LocationHistory.Work.OperationTicketHistory[] GetOperationTicketHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetWorkTicketHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetWorkTicketHistoryListResponse")]
        TModel.LocationHistory.Work.WorkTicketHistory[] GetWorkTicketHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryList", ReplyAction="http://tempuri.org/IWorkService/GetPersonnelMobileInspectionHistoryListResponse")]
        TModel.LocationHistory.Work.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        TModel.Location.Manage.LoginInfo Login(TModel.Location.Manage.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Logout", ReplyAction="http://tempuri.org/IUserService/LogoutResponse")]
        TModel.Location.Manage.LoginInfo Logout(TModel.Location.Manage.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ibus_anchor/EditBusAnchor", ReplyAction="http://tempuri.org/Ibus_anchor/EditBusAnchorResponse")]
        bool EditBusAnchor(TModel.Location.AreaAndDev.Archor archor, int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ibus_tag/EditBusTag", ReplyAction="http://tempuri.org/Ibus_tag/EditBusTagResponse")]
        bool EditBusTag(Location.TModel.Location.AreaAndDev.Tag Tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/EditPictureInfo", ReplyAction="http://tempuri.org/IPictureService/EditPictureInfoResponse")]
        bool EditPictureInfo(TModel.Location.AreaAndDev.Picture pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPictureService/GetPictureInfo", ReplyAction="http://tempuri.org/IPictureService/GetPictureInfoResponse")]
        TModel.Location.AreaAndDev.Picture GetPictureInfo(string strPictureName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAreaService/GetAreaStatistics", ReplyAction="http://tempuri.org/IAreaService/GetAreaStatisticsResponse")]
        TModel.Location.AreaAndDev.AreaStatistics GetAreaStatistics(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : WCFServiceForWPF.LocationServices.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<WCFServiceForWPF.LocationServices.ILocationService>, WCFServiceForWPF.LocationServices.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Hello(string msg) {
            return base.Channel.Hello(msg);
        }
        
        public Location.TModel.Location.Person.Department[] GetDepartmentList() {
            return base.Channel.GetDepartmentList();
        }
        
        public Location.TModel.Location.Person.Department GetDepartmentTree() {
            return base.Channel.GetDepartmentTree();
        }
        
        public Location.TModel.Location.AreaAndDev.Tag[] GetTags() {
            return base.Channel.GetTags();
        }
        
        public bool AddTags(Location.TModel.Location.AreaAndDev.Tag[] tags) {
            return base.Channel.AddTags(tags);
        }
        
        public bool DeleteTag(int id) {
            return base.Channel.DeleteTag(id);
        }
        
        public bool DeleteAllTags() {
            return base.Channel.DeleteAllTags();
        }
        
        public bool EditTag(Location.TModel.Location.AreaAndDev.Tag Tag, System.Nullable<int> id) {
            return base.Channel.EditTag(Tag, id);
        }
        
        public Location.TModel.Location.Data.TagPosition[] GetRealPositons() {
            return base.Channel.GetRealPositons();
        }
        
        public Location.TModel.Location.Data.TagPosition[] GetRealPositonsByTags(string[] tagCodes) {
            return base.Channel.GetRealPositonsByTags(tagCodes);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositons() {
            return base.Channel.GetHistoryPositons();
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPersonnelID(int personnelID, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPersonnelID(personnelID, start, end);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByPidAndTopoNodeIds(int personnelID, int[] topoNodeIds, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByPidAndTopoNodeIds(personnelID, topoNodeIds, start, end);
        }
        
        public Location.TModel.LocationHistory.Data.Position[] GetHistoryPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryPositonsByTime(tagcode, start, end);
        }
        
        public string GetStrs(int n) {
            return base.Channel.GetStrs(n);
        }
        
        public void AddU3DPosition(Location.TModel.LocationHistory.Data.U3DPosition[] pList) {
            base.Channel.AddU3DPosition(pList);
        }
        
        public void AddU3DPositions(Location.TModel.LocationHistory.Data.U3DPosition[] list) {
            base.Channel.AddU3DPositions(list);
        }
        
        public Location.TModel.LocationHistory.Data.U3DPosition[] GetHistoryU3DPositonsByTime(string tagcode, System.DateTime start, System.DateTime end) {
            return base.Channel.GetHistoryU3DPositonsByTime(tagcode, start, end);
        }
        
        public Location.TModel.Location.AreaAndDev.ObjectAddList_Type[] GetObjectAddList() {
            return base.Channel.GetObjectAddList();
        }
        
        public Location.TModel.Location.AreaAndDev.DevPos[] GetDevPositions() {
            return base.Channel.GetDevPositions();
        }
        
        public bool AddDevPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.AddDevPosInfo(pos);
        }
        
        public bool AddDevPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList) {
            return base.Channel.AddDevPosByList(posList);
        }
        
        public bool ModifyPosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.ModifyPosInfo(pos);
        }
        
        public bool ModifyPosByList(Location.TModel.Location.AreaAndDev.DevPos[] posList) {
            return base.Channel.ModifyPosByList(posList);
        }
        
        public bool DeletePosInfo(Location.TModel.Location.AreaAndDev.DevPos pos) {
            return base.Channel.DeletePosInfo(pos);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetAllDevInfos() {
            return base.Channel.GetAllDevInfos();
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfos(int[] typeList) {
            return base.Channel.GetDevInfos(typeList);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] FindDevInfos(string key) {
            return base.Channel.FindDevInfos(key);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo AddDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.AddDevInfo(devInfo);
        }
        
        public bool AddDevInfoByList(Location.TModel.Location.AreaAndDev.DevInfo[] devInfoList) {
            return base.Channel.AddDevInfoByList(devInfoList);
        }
        
        public bool ModifyDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.ModifyDevInfo(devInfo);
        }
        
        public bool DeleteDevInfo(Location.TModel.Location.AreaAndDev.DevInfo devInfo) {
            return base.Channel.DeleteDevInfo(devInfo);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo[] GetDevInfoByParent(int[] pids) {
            return base.Channel.GetDevInfoByParent(pids);
        }
        
        public Location.TModel.Location.AreaAndDev.DevInfo GetDevByID(string devId) {
            return base.Channel.GetDevByID(devId);
        }
        
        public bool AddDoorAccessByList(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.AddDoorAccessByList(doorAccessList);
        }
        
        public bool AddDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess doorAccess) {
            return base.Channel.AddDoorAccess(doorAccess);
        }
        
        public bool DeleteDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.DeleteDoorAccess(doorAccessList);
        }
        
        public bool ModifyDoorAccess(Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] doorAccessList) {
            return base.Channel.ModifyDoorAccess(doorAccessList);
        }
        
        public Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetDoorAccessInfoByParent(int[] pids) {
            return base.Channel.GetDoorAccessInfoByParent(pids);
        }
        
        public Location.TModel.Location.AreaAndDev.Dev_DoorAccess[] GetAllDoorAccessInfo() {
            return base.Channel.GetAllDoorAccessInfo();
        }
        
        public TModel.Location.AreaAndDev.Archor[] GetArchors() {
            return base.Channel.GetArchors();
        }
        
        public TModel.Location.AreaAndDev.Archor GetArchor(string id) {
            return base.Channel.GetArchor(id);
        }
        
        public TModel.Location.AreaAndDev.Archor GetArchorByDevId(int devId) {
            return base.Channel.GetArchorByDevId(devId);
        }
        
        public bool EditArchor(TModel.Location.AreaAndDev.Archor Archor, int ParentId) {
            return base.Channel.EditArchor(Archor, ParentId);
        }
        
        public bool AddArchor(TModel.Location.AreaAndDev.Archor archor) {
            return base.Channel.AddArchor(archor);
        }
        
        public void DeleteArchor(int archorId) {
            base.Channel.DeleteArchor(archorId);
        }
        
        public TModel.Location.AreaAndDev.NearbyDev[] GetNearbyDev_Currency(int id, float fDis) {
            return base.Channel.GetNearbyDev_Currency(id, fDis);
        }
        
        public TModel.Location.AreaAndDev.NearbyDev[] GetNearbyCamera_Alarm(int id, float fDis) {
            return base.Channel.GetNearbyCamera_Alarm(id, fDis);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByNodeId(int id) {
            return base.Channel.GetKKSInfoByNodeId(id);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode GetKKSInfoByCode(string code) {
            return base.Channel.GetKKSInfoByCode(code);
        }
        
        public Location.TModel.Location.AreaAndDev.KKSCode FindKKSInfoByName(string name) {
            return base.Channel.FindKKSInfoByName(name);
        }
        
        public string GetKKSCodeByNodeId(int id) {
            return base.Channel.GetKKSCodeByNodeId(id);
        }
        
        public string FindKKSCodeByName(string name) {
            return base.Channel.FindKKSCodeByName(name);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyList() {
            return base.Channel.GetPhysicalTopologyList();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopology(string id, bool getChildren) {
            return base.Channel.GetPhysicalTopology(id, getChildren);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByName(string name) {
            return base.Channel.GetPhysicalTopologyListByName(name);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetPhysicalTopologyListByPid(string id) {
            return base.Channel.GetPhysicalTopologyListByPid(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTree(int view) {
            return base.Channel.GetPhysicalTopologyTree(view);
        }
        
        public TModel.Location.Nodes.AreaNode GetPhysicalTopologyTreeNode(int view) {
            return base.Channel.GetPhysicalTopologyTreeNode(view);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology GetPhysicalTopologyTreeById(string id) {
            return base.Channel.GetPhysicalTopologyTreeById(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology AddPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item) {
            return base.Channel.AddPhysicalTopology(item);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology EditPhysicalTopology(Location.TModel.Location.AreaAndDev.PhysicalTopology item) {
            return base.Channel.EditPhysicalTopology(item);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology RemovePhysicalTopology(string id) {
            return base.Channel.RemovePhysicalTopology(id);
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetParkMonitorRange() {
            return base.Channel.GetParkMonitorRange();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRange() {
            return base.Channel.GetFloorMonitorRange();
        }
        
        public Location.TModel.Location.AreaAndDev.PhysicalTopology[] GetFloorMonitorRangeById(int id) {
            return base.Channel.GetFloorMonitorRangeById(id);
        }
        
        public bool EditMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt) {
            return base.Channel.EditMonitorRange(pt);
        }
        
        public bool AddMonitorRange(Location.TModel.Location.AreaAndDev.PhysicalTopology pt) {
            return base.Channel.AddMonitorRange(pt);
        }
        
        public bool AddConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.AddConfigArg(config);
        }
        
        public bool EditConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.EditConfigArg(config);
        }
        
        public bool DeleteConfigArg(Location.TModel.Location.AreaAndDev.ConfigArg config) {
            return base.Channel.DeleteConfigArg(config);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArg(int id) {
            return base.Channel.GetConfigArg(id);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] GetConfigArgList() {
            return base.Channel.GetConfigArgList();
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg GetConfigArgByKey(string key) {
            return base.Channel.GetConfigArgByKey(key);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByKey(string key) {
            return base.Channel.FindConfigArgListByKey(key);
        }
        
        public Location.TModel.Location.AreaAndDev.ConfigArg[] FindConfigArgListByClassify(string key) {
            return base.Channel.FindConfigArgListByClassify(key);
        }
        
        public Location.TModel.Location.TransferOfAxesConfig GetTransferOfAxesConfig() {
            return base.Channel.GetTransferOfAxesConfig();
        }
        
        public bool SetTransferOfAxesConfig(Location.TModel.Location.TransferOfAxesConfig config) {
            return base.Channel.SetTransferOfAxesConfig(config);
        }
        
        public Location.TModel.Location.Person.Personnel[] GetPersonList() {
            return base.Channel.GetPersonList();
        }
        
        public Location.TModel.Location.Person.Personnel[] FindPersonList(string key) {
            return base.Channel.FindPersonList(key);
        }
        
        public Location.TModel.Location.Person.Personnel GetPerson(int id) {
            return base.Channel.GetPerson(id);
        }
        
        public int AddPerson(Location.TModel.Location.Person.Personnel p) {
            return base.Channel.AddPerson(p);
        }
        
        public bool EditPerson(Location.TModel.Location.Person.Personnel p) {
            return base.Channel.EditPerson(p);
        }
        
        public bool DeletePerson(int id) {
            return base.Channel.DeletePerson(id);
        }
        
        public TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Currency(int id, float fDis) {
            return base.Channel.GetNearbyPerson_Currency(id, fDis);
        }
        
        public TModel.Location.Person.NearbyPerson[] GetNearbyPerson_Alarm(int id, float fDis) {
            return base.Channel.GetNearbyPerson_Alarm(id, fDis);
        }
        
        public Location.TModel.Location.Alarm.LocationAlarm[] GetLocationAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg) {
            return base.Channel.GetLocationAlarms(arg);
        }
        
        public Location.TModel.Location.Alarm.DeviceAlarm[] GetDeviceAlarms(Location.TModel.FuncArgs.AlarmSearchArg arg) {
            return base.Channel.GetDeviceAlarms(arg);
        }
        
        public Location.TModel.Location.AreaAndDev.Post[] GetPostList() {
            return base.Channel.GetPostList();
        }
        
        public TModel.BaseData.Ticket[] GetTicketList(int type, System.DateTime start, System.DateTime end) {
            return base.Channel.GetTicketList(type, start, end);
        }
        
        public TModel.BaseData.Ticket GetTicketDetial(int id) {
            return base.Channel.GetTicketDetial(id);
        }
        
        public TModel.Location.Work.OperationTicket[] GetOperationTicketList() {
            return base.Channel.GetOperationTicketList();
        }
        
        public TModel.Location.Work.WorkTicket[] GetWorkTicketList() {
            return base.Channel.GetWorkTicketList();
        }
        
        public TModel.Location.Work.MobileInspectionDev[] GetMobileInspectionDevList() {
            return base.Channel.GetMobileInspectionDevList();
        }
        
        public TModel.Location.Work.MobileInspection[] GetMobileInspectionList() {
            return base.Channel.GetMobileInspectionList();
        }
        
        public TModel.Location.Work.PersonnelMobileInspection[] GetPersonnelMobileInspectionList() {
            return base.Channel.GetPersonnelMobileInspectionList();
        }
        
        public TModel.LocationHistory.Work.OperationTicketHistory[] GetOperationTicketHistoryList() {
            return base.Channel.GetOperationTicketHistoryList();
        }
        
        public TModel.LocationHistory.Work.WorkTicketHistory[] GetWorkTicketHistoryList() {
            return base.Channel.GetWorkTicketHistoryList();
        }
        
        public TModel.LocationHistory.Work.PersonnelMobileInspectionHistory[] GetPersonnelMobileInspectionHistoryList() {
            return base.Channel.GetPersonnelMobileInspectionHistoryList();
        }
        
        public TModel.Location.Manage.LoginInfo Login(TModel.Location.Manage.LoginInfo info) {
            return base.Channel.Login(info);
        }
        
        public TModel.Location.Manage.LoginInfo Logout(TModel.Location.Manage.LoginInfo info) {
            return base.Channel.Logout(info);
        }
        
        public bool EditBusAnchor(TModel.Location.AreaAndDev.Archor archor, int parentId) {
            return base.Channel.EditBusAnchor(archor, parentId);
        }
        
        public bool EditBusTag(Location.TModel.Location.AreaAndDev.Tag Tag) {
            return base.Channel.EditBusTag(Tag);
        }
        
        public bool EditPictureInfo(TModel.Location.AreaAndDev.Picture pc) {
            return base.Channel.EditPictureInfo(pc);
        }
        
        public TModel.Location.AreaAndDev.Picture GetPictureInfo(string strPictureName) {
            return base.Channel.GetPictureInfo(strPictureName);
        }
        
        public TModel.Location.AreaAndDev.AreaStatistics GetAreaStatistics(int id) {
            return base.Channel.GetAreaStatistics(id);
        }
    }
}
